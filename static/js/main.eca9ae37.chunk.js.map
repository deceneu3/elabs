{"version":3,"sources":["assets/img/heart.svg","assets/img/elrond.svg","components/Layout/index.tsx","components/PageNotFoud/index.tsx","App.tsx","index.tsx","pages/Dashboard/helpers/asyncRequests.ts","pages/Transaction/useNewTransaction.ts","helpers/converters.ts","pages/Basic/UtilsTransaction.ts","pages/Basic/BMSNftQuery.ts","components/PageTitle/index.tsx","components/PageState/index.tsx","components/Denominate/denominate.tsx","components/Denominate/index.tsx","pages/Dashboard/TopInfo.tsx","pages/Dashboard/Transactions/txStatus.tsx","pages/Dashboard/Transactions/StatusIcon.tsx","pages/Dashboard/Transactions/TransactionsList.tsx","pages/Dashboard/helpers/asyncRequestsIPFS.ts","pages/Dashboard/Transactions/index.tsx","pages/Dashboard/index.tsx","pages/Home/index.tsx","pages/Transaction/index.tsx","pages/CreateNfc/TopInfo.tsx","pages/CreateNfc/index.tsx","pages/Contact/index.tsx","pages/Fun/FunTemplate.tsx","routes.ts","pages/Fun/index.tsx","pages/Dashboard/Actions/index.tsx","pages/CreateNfc/CreateCrud.tsx","pages/Basic/BMSNftTransaction.ts","pages/Basic/BTESTDTransaction.ts","../node_modules/@elrondnetwork/bls-wasm sync /^/.*/.js$","config.tsx","context/reducer.ts","context/state.ts","context/index.tsx"],"names":["Layout","children","pathname","useLocation","path","useRouteMatch","loggedIn","Dapp","refreshAccount","React","useEffect","console","log","className","routes","unlockRoute","routeNames","unlock","PageNotFound","icon","faSearch","App","config","component","Unlock","callbackRoute","dashboard","title","lead","ledgerRoute","ledger","walletConnectRoute","walletconnect","exact","Ledger","WalletConnect","logoutRoute","home","map","route","i","PageNotFoud","ReactDOM","render","document","getElementById","url","fetchTransactions","a","apiAddress","address","contractAddress","timeout","txHash","axios","get","params","sender","receiver","creator","condition","size","data","success","undefined","getTransactions","getCollections","urlFull","getNftItems","fetchApi","useNewTransaction","chainId","rawTransaction","gasLimit","GasLimit","configGasLimit","gasPerDataByte","Transaction","value","Balance","egld","TransactionPayload","Address","gasPrice","GasPrice","chainID","ChainID","valueOf","version","TransactionVersion","base64ToBech32","str","bech32","Buffer","from","getRawArgumentsSlice","ecoddedArguments","slice","argument","calculateGasLimit","fixedGasLimit","dataPayload","length","NetworkConfig","getDefault","GasPerDataByte","buildQueryBSMCount","Query","func","ContractFunction","args","TokenIdentifierValue","cfgCollection","tokenIdentifier","bmsNftReturnDataToNumer","result","encoded","returnData","decoded","toString","count","parseInt","withPageTitle","Component","Memoized","memo","PageState","description","svgComponent","spin","data-testid","denominate","input","denomination","decimals","showLastNonZeroDecimal","addCommas","big","array","split","unshift","splice","indexOf","push","nonZeroDigitIndex","decimalsIndex","sliceIndex","Math","max","reverse","reference","floor","position","allDecimalsZero","every","digit","string","join","format","Denominate","showErd","dataTestId","token","configDecimals","egldLabel","denominatedValue","valueParts","hasNoDecimals","zeros","TopInfo","balance","account","txStatus","pending","notExecuted","fail","StatusIcon","tx","incomingTransaction","Icon","status","faBan","faTimes","faArrowUp","faArrowDown","sortByDate","b","timestamp","fakeSender","TransactionList","transactions","explorerAddress","doubleOwnTransactions","filter","blockHash","sortedTransactions","el","sort","href","target","Trim","text","moment","unix","Transactions","useContext","TransactionsList","faExchangeAlt","Dashboard","ref","transactionsFetched","dispatch","useDispatch","then","type","Actions","Home","dAppName","to","search","query","URLSearchParams","Object","fromEntries","faCheck","CreateCrud","ContactInfo","contact","useState","email","setEmail","Form","Group","controlId","Label","Control","placeholder","Text","Check","label","onChange","e","Button","variant","getCollectionJson","collCID","collName","apiPath","error","FunTemplate","dappLogout","history","useHistory","collData","setCollData","newTransaction","sendTransaction","dapp","callCountqueryTrData","timer","setTimeout","getNFTCollectionJson","cfgFrmNft","queryApiDelay","clearTimeout","delay","time","Promise","resolve","sendTransactionBsmNft","collItem","newTr","buildBMSNftTransaction","transaction","fun123","preventDefault","apiRequestDelay","issueNonFungible","queryBmsNftCount","proxy","queryContract","queryResponce","collID","id","style","display","alt","src","aria-controls","aria-expanded","aria-label","data-target","data-toggle","onClick","callbackUrl","window","location","origin","muted","preload","loop","autoPlay","poster","role","bsmNft","OverlayTrigger","overlay","Tooltip","pointerEvents","aria-selected","aria-labelledby","overflow","textAlign","width","height","padding","touchAction","top","left","d","fill","transform","rx","ry","stroke","fillOpacity","strokeOpacity","y","fontFamily","fontSize","textAnchor","x","textDecoration","color","opacity","allow","method","name","rows","defaultValue","data-sitekey","data-dismiss","aria-hidden","login","createArt","authenticatedRoute","CreateNfc","Contact","wrappedRoutes","Boolean","secondsLeft","setSecondsLeft","hasPing","setHasPing","interval","setInterval","existing","clearInterval","AddressValue","catch","err","send","pongTransaction","pingTransaction","pongAllowed","notAllowedClass","timeRemaining","startOf","seconds","styles","cardImage","EGLD_DECI","BigNumber","setName","colectionName","setCollectionName","collIdentifier","setCollIdentifier","collectionItemName","setCollectionItemName","collectionItemNonce","setCollectionItemNonce","collectionItemTagName","setCollectionItemTagName","collectionItemImgUrl","setCollectionItemImgUrl","collectionItemRoyalties","setCollectionItemRoyalties","collectionItemTrsfData","setCollectionItemTrsfData","collectionOptions","setCollectionOptions","nftItemData","setNftItemData","nftType","setNftType","esdType","setEsdType","mesdtType","setMesdtType","canPause","setCanPause","canFreeze","setCanFreeze","canWipe","setCanWipe","canTransfer","setCanTransfer","canESDTRoleNFTCreate","setCanESDTRoleNFTCreate","canESDTRoleNFTBurn","setCanESDTRoleNFTBurn","fundAmount","setFundAmount","withdrawAmount","setWithdrawAmount","transferToAddress","setTransferToAddress","isError","setIsError","isWarning","setIsWarning","isInfo","setIsInfo","message","setMessage","isStepCreateColl","setIsStepCreateColl","isStepSetRole","setIsStepSetRole","isStepCreateNft","setIsStepCreateNft","isStepTransferNft","setIsStepTransferNft","ipfsClient","ipfsHttpClient","protocol","host","port","setDbgMsg","displayMessage","displayErrorMessage","displayWarnMessage","displayInfoMessage","cleanDisplayMessage","buildIssueNonFungibleTransaction","collNameDesc","BytesValue","fromUTF8","payload","contractCall","setFunction","setArgs","build","buildIssueNonFungibleArgs","minGasLimit","validateAddressArgs","callIssueNonFungible","Number","toPlainObject","buildSetRoleTransaction","collId","BigUIntValue","buildSetRoleArgs","setRole","buildCreateNFTTransaction","colItemName","colItemRoyalties","colItemTagName","colItemUrl","hash","crypto","createHash","update","colItemHash","digest","buildCreateNFTArgs","createNft","buildReleaseNFTTransaction","multipliedBy","buildReleaseNFTArgs","buildTransferNFTTransaction","buildTransferNFTArgs","transferNft","callTransferNFT","buildFundPrjTransaction","buildFundPrjArgs","callFundPrj","queryTrData","queryTrDataCount","queryTrDataResults","decodeBase64","strBase64","fromEncoded","getRawArguments","results","ecodedArgs","getEncodedArguments","trxMethod","extractCollectionIdentifier","processResultSetLocalRole","processResultCreateNft","processResultTransferNft","issueTrData","dbg","queryApiCounter","Date","tr0","rawArgs","tr1","resultCallType","callType","resultData","processResultCollectionIdentifier","contractBech32","converters","returnMessage","setLocalRoles","forEach","processResultSetLocalRoleItem","resultCode","processResultCreateNftItem","nftNonce","processResultTransferNftItem","populateCollectionsSelectItems","items","collection","file","files","add","progress","prog","added","queryNFTItems","populateNftItems","identifier","str2bool","toLowerCase","schemaCreateColl","yup","shape","required","min","matches","collectionName","schemaCreateNft","schemaTransferNft","schemaFund","dismissible","Heading","as","custom","disabled","selection","item","validationSchema","onSubmit","initialValues","handleSubmit","handleChange","touched","handleBlur","values","isValid","isSubmitting","errors","noValidate","isInvalid","Feedback","Row","checked","callSetRole","fileUploadHandler","callCreateNFT","callReleaseNFT","Prepend","key","Img","Body","Title","Footer","buildBMSNftArgs","colItemTags","royalties","res","attributes","attr","trait_type","buildNFTTags","image","replace","buildIPFSUrl","nftPrice","buildBTESTDTransaction","campaingId","cfgESTDtoken","price","campPrice","campaign_1","campaign_2","campaign_3","getPrice4Campaing","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","module","exports","walletConnectBridge","walletConnectDeepLink","contractAddressPong","contractAddressDevNetNft","contractAddressMainNetNFT","contractAddressCrossMeme","contractAddressEndaPOC","contractAddressBMS","network","walletAddress","gatewayAddress","cfgApiInfura","cfgApiIPFS","cfgApiPinata","reducer","state","action","initialState","Context","Dispatch","ContextProvider","Provider","context"],"mappings":"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","file":"static/js/main.eca9ae37.chunk.js","sourcesContent":["var _desc, _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHeart(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"14px\",\n    height: \"12px\",\n    viewBox: \"0 0 14 12\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"heart\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"heart\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.00249318,12 L1.23954171,6.67000631 C0.219967339,5.73025806 -0.214165447,4.32384166 0.101003225,2.98159749 C0.416171897,1.63935333 1.4326464,0.565685745 2.76676674,0.165841807 C4.10088708,-0.234002131 5.54948604,0.100868016 6.56580179,1.04405825 L7.00249318,1.44795492 L7.43918869,1.04405825 C9.01100287,-0.409657356 11.4775242,-0.328715349 12.9483183,1.22484728 C14.4191125,2.77840991 14.3372196,5.21629062 12.7654055,6.67000631 L7.00249318,12 Z\",\n    id: \"Path\",\n    fillRule: \"nonzero\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeart);\nexport default __webpack_public_path__ + \"static/media/heart.f3c73d66.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgElrond(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"327px\",\n    height: \"98px\",\n    viewBox: \"0 0 327 98\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"elrond\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Page-1\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"elrond\",\n    fill: \"#000000\",\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.2,19.5 C77.8,19.1 77.6,18.7 77.6,18.2 C77.6,17.7 77.8,17.3 78.2,16.9 C79,16.2 80.2,16.2 81,16.9 C81.4,17.3 81.6,17.7 81.6,18.2 C81.6,18.7 81.4,19.1 81,19.5 C80.6,19.8 80.1,20 79.6,20 C79.1,20.1 78.6,19.9 78.2,19.5\",\n    id: \"Path_3_\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73.3,24.7 C73,24.3 72.8,23.9 72.8,23.4 C72.8,22.9 73,22.5 73.3,22.1 C74,21.4 75.2,21.4 75.9,22.1 C76.2,22.5 76.4,22.9 76.4,23.4 C76.4,23.9 76.2,24.3 75.9,24.7 C75.5,25 75.1,25.2 74.6,25.2 C74.1,25.2 73.7,25 73.3,24.7\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68,29.8 C67.7,29.5 67.5,29 67.5,28.5 C67.5,28 67.7,27.6 68,27.2 C68.7,26.5 69.9,26.5 70.6,27.2 C70.9,27.5 71.1,28 71.1,28.5 C71.1,29 70.9,29.4 70.6,29.8 C70.2,30.2 69.8,30.3 69.3,30.3 C68.8,30.3 68.3,30.1 68,29.8\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.9,34.9 C62.5,34.6 62.3,34.1 62.3,33.6 C62.3,33.1 62.5,32.7 62.9,32.3 C63.7,31.6 64.9,31.6 65.7,32.3 C66.1,32.6 66.3,33.1 66.3,33.6 C66.3,34.1 66.1,34.6 65.7,34.9 C65.3,35.3 64.8,35.4 64.3,35.4 C63.8,35.4 63.3,35.3 62.9,34.9\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58,40 C57.6,39.7 57.5,39.2 57.5,38.7 C57.5,38.2 57.7,37.8 58,37.4 C58.7,36.7 59.9,36.7 60.6,37.4 C61,37.7 61.1,38.2 61.1,38.7 C61.1,39.2 60.9,39.7 60.6,40 C60.3,40.4 59.8,40.5 59.3,40.5 C58.8,40.6 58.3,40.4 58,40\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.1,43.8 C52.1,43.3 52.3,42.9 52.6,42.5 C53.3,41.8 54.5,41.8 55.2,42.5 C55.6,42.9 55.7,43.3 55.7,43.8 C55.7,44.3 55.5,44.7 55.2,45.1 C54.9,45.4 54.4,45.6 53.9,45.6 C53.4,45.6 53,45.4 52.6,45.1 C52.3,44.8 52.1,44.3 52.1,43.8 Z\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.6,55.1 C42.3,54.8 42.1,54.3 42.1,53.8 C42.1,53.3 42.3,52.9 42.6,52.5 C43.3,51.8 44.5,51.8 45.2,52.5 C45.6,52.9 45.7,53.3 45.7,53.8 C45.7,54.3 45.5,54.7 45.2,55.1 C44.9,55.5 44.4,55.6 43.9,55.6 C43.4,55.7 43,55.5 42.6,55.1\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.3,60.2 C36.9,59.9 36.7,59.4 36.7,58.9 C36.7,58.4 36.9,58 37.3,57.6 C38.1,56.9 39.3,56.9 40.1,57.6 C40.5,58 40.7,58.4 40.7,58.9 C40.7,59.4 40.5,59.8 40.1,60.2 C39.7,60.6 39.2,60.7 38.7,60.7 C38.2,60.8 37.7,60.6 37.3,60.2\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.4,65.4 C32.1,65.1 31.9,64.6 31.9,64.1 C31.9,63.6 32.1,63.1 32.4,62.8 C33.1,62.1 34.3,62.1 35,62.8 C35.3,63.1 35.5,63.6 35.5,64.1 C35.5,64.6 35.3,65 35,65.4 C34.6,65.8 34.2,65.9 33.7,65.9 C33.2,65.9 32.8,65.7 32.4,65.4\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.3,70.5 C26.9,70.2 26.8,69.7 26.8,69.2 C26.8,68.7 27,68.3 27.3,67.9 C28,67.2 29.2,67.2 29.9,67.9 C30.2,68.3 30.4,68.7 30.4,69.2 C30.4,69.7 30.2,70.2 29.9,70.5 C29.5,70.9 29.1,71 28.6,71 C28.1,71 27.6,70.9 27.3,70.5\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22,75.6 C21.6,75.3 21.4,74.8 21.4,74.3 C21.4,73.8 21.6,73.4 22,73 C22.8,72.3 24,72.3 24.7,73 C25.1,73.4 25.3,73.8 25.3,74.3 C25.3,74.8 25.1,75.3 24.7,75.6 C24.3,75.9 23.8,76.1 23.3,76.1 C22.8,76.1 22.3,76 22,75.6\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17,80.7 C16.6,80.3 16.5,79.9 16.5,79.4 C16.5,78.9 16.7,78.5 17,78.1 C17.7,77.4 18.9,77.4 19.6,78.1 C20,78.5 20.1,78.9 20.1,79.4 C20.1,79.9 19.9,80.3 19.6,80.7 C19.3,81 18.8,81.2 18.3,81.2 C17.9,81.3 17.4,81.1 17,80.7\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.6,19.5 C19.9,19.1 20.1,18.7 20.1,18.2 C20.1,17.7 19.9,17.3 19.6,16.9 C18.9,16.2 17.7,16.2 17,16.9 C16.6,17.3 16.5,17.7 16.5,18.2 C16.5,18.7 16.7,19.1 17,19.5 C17.3,19.8 17.8,20 18.3,20 C18.8,20.1 19.3,19.9 19.6,19.5\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.7,24.7 C25.1,24.3 25.3,23.9 25.3,23.4 C25.3,22.9 25.1,22.5 24.7,22.1 C23.9,21.4 22.7,21.4 21.9,22.1 C21.5,22.5 21.3,22.9 21.3,23.4 C21.3,23.9 21.5,24.3 21.9,24.7 C22.3,25 22.8,25.2 23.3,25.2 C23.8,25.2 24.3,25 24.7,24.7\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.9,29.8 C30.2,29.5 30.4,29 30.4,28.5 C30.4,28 30.2,27.6 29.9,27.2 C29.2,26.5 28,26.5 27.3,27.2 C27,27.5 26.8,28 26.8,28.5 C26.8,29 27,29.4 27.3,29.8 C27.7,30.2 28.1,30.3 28.6,30.3 C29,30.3 29.5,30.1 29.9,29.8\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35,34.9 C35.3,34.6 35.5,34.1 35.5,33.6 C35.5,33.1 35.3,32.7 35,32.3 C34.3,31.6 33.1,31.6 32.4,32.3 C32.1,32.6 31.9,33.1 31.9,33.6 C31.9,34.1 32.1,34.6 32.4,34.9 C32.8,35.3 33.2,35.4 33.7,35.4 C34.1,35.4 34.6,35.3 35,34.9\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40,40 C40.4,39.7 40.6,39.2 40.6,38.7 C40.6,38.2 40.4,37.8 40,37.4 C39.3,36.7 38,36.7 37.3,37.4 C36.9,37.7 36.7,38.2 36.7,38.7 C36.7,39.2 36.9,39.7 37.3,40 C37.7,40.4 38.2,40.5 38.7,40.5 C39.2,40.6 39.7,40.4 40,40\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.7,43.8 C45.7,43.3 45.5,42.9 45.2,42.5 C44.5,41.8 43.3,41.8 42.6,42.5 C42.2,42.9 42.1,43.3 42.1,43.8 C42.1,44.3 42.3,44.7 42.6,45.1 C42.9,45.4 43.4,45.6 43.9,45.6 C44.4,45.6 44.8,45.4 45.2,45.1 C45.6,44.8 45.7,44.3 45.7,43.8 Z\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.3,50.3 C50.7,49.9 50.8,49.5 50.8,49 C50.8,48.5 50.6,48.1 50.3,47.7 C49.6,47 48.4,47 47.7,47.7 C47.3,48.1 47.2,48.5 47.2,49 C47.2,49.5 47.4,49.9 47.7,50.3 C48,50.6 48.5,50.8 49,50.8 C49.5,50.8 50,50.6 50.3,50.3\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.4,55.1 C55.8,54.8 56,54.3 56,53.8 C56,53.3 55.8,52.9 55.4,52.5 C54.6,51.8 53.4,51.8 52.7,52.5 C52.3,52.9 52.1,53.3 52.1,53.8 C52.1,54.3 52.3,54.7 52.7,55.1 C53.1,55.5 53.6,55.6 54.1,55.6 C54.5,55.7 55,55.5 55.4,55.1\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.6,60.2 C60.9,59.9 61.1,59.4 61.1,58.9 C61.1,58.4 60.9,58 60.6,57.6 C59.9,56.9 58.7,56.9 58,57.6 C57.7,58 57.5,58.4 57.5,58.9 C57.5,59.4 57.7,59.8 58,60.2 C58.4,60.6 58.8,60.7 59.3,60.7 C59.7,60.8 60.2,60.6 60.6,60.2\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.7,65.4 C66,65.1 66.2,64.6 66.2,64.1 C66.2,63.6 66,63.1 65.7,62.8 C65,62.1 63.8,62.1 63.1,62.8 C62.8,63.1 62.6,63.6 62.6,64.1 C62.6,64.6 62.8,65 63.1,65.4 C63.5,65.8 63.9,65.9 64.4,65.9 C64.9,65.9 65.3,65.7 65.7,65.4\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.5,70.5 C70.9,70.2 71,69.7 71,69.2 C71,68.7 70.8,68.3 70.5,67.9 C69.8,67.2 68.6,67.2 67.9,67.9 C67.6,68.3 67.4,68.7 67.4,69.2 C67.4,69.7 67.6,70.2 67.9,70.5 C68.3,70.9 68.7,71 69.2,71 C69.7,71 70.2,70.9 70.5,70.5\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.9,75.6 C76.3,75.3 76.4,74.8 76.4,74.3 C76.4,73.8 76.2,73.4 75.9,73 C75.2,72.3 74,72.3 73.3,73 C72.9,73.4 72.8,73.8 72.8,74.3 C72.8,74.8 73,75.3 73.3,75.6 C73.6,75.9 74.1,76.1 74.6,76.1 C75.1,76.1 75.6,76 75.9,75.6\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M81,80.7 C81.4,80.3 81.6,79.9 81.6,79.4 C81.6,78.9 81.4,78.5 81,78.1 C80.2,77.4 79,77.4 78.3,78.1 C77.9,78.5 77.7,78.9 77.7,79.4 C77.7,79.9 77.9,80.3 78.3,80.7 C78.7,81 79.2,81.2 79.7,81.2 C80.1,81.3 80.6,81.1 81,80.7\",\n    id: \"Path\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.7,20.9 C36.9,17.5 42.6,15.9 48.9,15.8 C55.1,15.8 60.8,17.5 66.1,20.9 L77.1,9.9 C68.5,3.4 59.2,0.1 48.9,0.1 C38.6,0.1 29.2,3.4 20.8,9.9 L31.7,20.9 Z\",\n    id: \"Fill-9_1_\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.7,66 C17.2,60.7 15.5,55 15.5,48.9 C15.5,42.7 17.2,37 20.7,31.8 L9.8,20.9 C3.4,29.3 0.2,38.6 0.2,49 C0.2,59.2 3.4,68.6 9.9,77.1 L20.7,66 Z\",\n    id: \"Fill-10_1_\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.1,76.9 C60.9,80.4 55.2,82.2 49,82.3 C42.7,82.3 36.9,80.6 31.7,77 L20.7,87.9 C29.2,94.5 38.6,97.8 49,97.7 C59.3,97.6 68.6,94.3 77,87.9 L66.1,76.9 Z\",\n    id: \"Fill-11_1_\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.8,31.7 C80.3,37 82.1,42.8 82,49.1 C81.9,55.2 80.2,60.8 76.8,65.9 L87.8,76.8 C94.3,68.4 97.6,59.1 97.6,48.9 C97.7,38.5 94.4,29.1 87.8,20.6 L76.8,31.7 Z\",\n    id: \"Fill-12_1_\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88.3,80.3 C92.5,80.3 96,83.7 96,88 C96,92.2 92.6,95.7 88.3,95.7 C84.1,95.7 80.6,92.3 80.6,88 C80.6,83.7 84,80.3 88.3,80.3\",\n    id: \"Fill-15_1_\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.7,80.3 C13.9,80.3 17.3,83.7 17.3,88 C17.3,92.2 13.9,95.7 9.7,95.7 C5.5,95.7 2.1,92.3 2.1,88 C2.1,83.7 5.5,80.3 9.7,80.3\",\n    id: \"Fill-16_1_\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88.4,1.8 C92.6,1.8 96,5.2 96,9.5 C96,13.8 92.6,17.2 88.4,17.2 C84.2,17.2 80.8,13.8 80.8,9.5 C80.8,5.2 84.2,1.8 88.4,1.8\",\n    id: \"Fill-17_1_\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.6,1.8 C13.8,1.8 17.3,5.2 17.3,9.4 C17.3,13.6 13.9,17 9.6,17 C5.4,17 1.9,13.6 1.9,9.4 C1.9,5.2 5.3,1.8 9.6,1.8\",\n    id: \"Fill-18_1_\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.5,63.4 L150.7,60 C148.4,62.7 143.8,64.3 139.9,64.3 C133.4,64.3 128.2,60.4 127.6,54.1 L156.4,54.1 C157.7,40.6 149.8,34.2 139.4,34.2 C129.2,34.2 121.8,41.5 121.8,51.8 C121.8,62.6 129.1,69.5 139.7,69.5 C145.1,69.4 151,67.4 154.5,63.4 L154.5,63.4 Z M151.2,49.3 L127.7,49.3 C128.7,42.8 133.8,39.2 139.7,39.2 C146.3,39.2 150.8,42.7 151.2,49.1 L151.2,49.3 L151.2,49.3 Z M170.4,20.7 L164.8,20.7 L164.8,68.8 L170.4,68.8 L170.4,20.7 Z M186.3,34.9 L181.1,34.9 L181.1,68.8 L186.7,68.8 L186.7,49.9 C186.7,43.7 191.2,39.8 196.7,39.7 C199,39.7 200.8,40.3 202.6,41.6 L205.1,36.8 C203,35.2 200.2,34.2 197.2,34.3 C193.3,34.3 189.1,35.5 186.8,39.9 L186.3,34.9 L186.3,34.9 Z M208.3,51.9 C208.3,62.2 215.7,69.4 225.9,69.4 C236.1,69.4 243.5,62.2 243.5,51.9 C243.5,41.4 236.2,34.1 225.9,34.1 C215.8,34.1 208.3,41.4 208.3,51.9 Z M237.9,51.9 C237.8,59 232.8,64.1 225.8,64.1 C218.9,64.1 213.9,59 213.9,51.9 C213.9,44.3 219,39.3 225.9,39.3 C232.7,39.3 237.9,44.4 237.9,51.9 Z M251.6,34.8 L251.6,68.8 L257.2,68.8 L257.2,50.6 C257.2,44.5 261.5,39.6 267.6,39.5 C274.1,39.5 277.9,43.6 277.9,50.1 L277.9,68.8 L283.5,68.8 L283.5,50.1 C283.5,40.1 277.2,34.4 268.6,34.4 C264.1,34.4 259.9,36.3 257,40.3 L256.7,34.9 L251.6,34.8 L251.6,34.8 Z M326.6,20.7 L321,20.7 L321,41 C318.6,36.4 313.1,34.2 308.3,34.2 C298.7,34.2 291.2,40.4 291.2,51.8 C291.2,63 298.7,69.4 308.4,69.4 C313.4,69.4 318.4,67.2 321.1,62.5 L321.4,68.7 L326.7,68.7 L326.6,20.7 L326.6,20.7 Z M308.8,39.5 C315.5,39.5 320.8,44.5 320.8,51.7 C320.8,59.1 315.5,64.1 308.8,64.1 C302.2,64.1 296.9,59.6 296.9,51.8 C296.9,43.9 302.1,39.6 308.6,39.5 L308.8,39.5 L308.8,39.5 Z\",\n    id: \"elrond_3_\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgElrond);\nexport default __webpack_public_path__ + \"static/media/elrond.54ca63da.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport routes, { routeNames } from \"routes\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nimport LayoutMarket from \"./LayoutMarket\";\r\n\r\nconst Layout = ({ children }: { children: React.ReactNode }) => {\r\n  const { pathname } = useLocation();\r\n  // const { type } = useParams();\r\n  const { path } = useRouteMatch();\r\n\r\n  const { loggedIn } = Dapp.useContext();\r\n  const refreshAccount = Dapp.useRefreshAccount();\r\n\r\n  React.useEffect(() => {\r\n    if (loggedIn) {\r\n      refreshAccount();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [loggedIn]);\r\n\r\n  // NEW part\r\n  const layoutType = () => {\r\n    console.log(\"pathname=\" + pathname);\r\n    // console.log(\"type=\" + type);\r\n    console.log(\"path=\" + path);\r\n    return 1; // FUN\r\n    // switch (pathname) {\r\n    //   case \"/fun123\":\r\n    //     return 1; // FUN\r\n    //   default:\r\n    //     return 0; // market\r\n    // }\r\n  };\r\n  // return <div>{project()}</div>;\r\n\r\n  // OLD part\r\n  // return (\r\n  //   <div className=\"bg-light d-flex flex-column flex-fill wrapper\">\r\n  //     <Navbar />\r\n  //     <main>\r\n  //       <Dapp.Authenticate routes={routes} unlockRoute={routeNames.unlock}>\r\n  //         {children}\r\n  //       </Dapp.Authenticate>\r\n  //     </main>\r\n  //     <Footer />\r\n  //   </div>\r\n  // );\r\n\r\n  // TRY NEW\r\n  const layoutAuthenticate = () => {\r\n    switch (layoutType()) {\r\n      case 1:\r\n        // FUN\r\n        return (\r\n          <div className=\"iq-fun-color-white\">\r\n            <main>\r\n              <Dapp.Authenticate\r\n                routes={routes}\r\n                unlockRoute={routeNames.unlock}\r\n              >\r\n                {children}\r\n              </Dapp.Authenticate>\r\n            </main>\r\n          </div>\r\n        );\r\n      default:\r\n        // Market\r\n        return (\r\n          <div className=\"bg-light d-flex flex-column flex-fill wrapper\">\r\n            <Navbar />\r\n            <main>\r\n              <Dapp.Authenticate\r\n                routes={routes}\r\n                unlockRoute={routeNames.unlock}\r\n              >\r\n                <LayoutMarket> {children} </LayoutMarket>\r\n              </Dapp.Authenticate>\r\n            </main>\r\n            <Footer />\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return <div>{layoutAuthenticate()}</div>;\r\n};\r\n\r\nexport default Layout;\r\n","import * as React from \"react\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst PageNotFound = () => {\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <div className=\"d-flex flex-fill align-items-center container\">\r\n      <div className=\"row w-100\">\r\n        <div className=\"col-12 col-md-8 col-lg-5 mx-auto\">\r\n          <div className=\"card shadow-sm rounded p-4 border-0\">\r\n            <div className=\"card-body text-center d-flex flex-column justify-content-center\">\r\n              <div className=\"dapp-icon icon-medium\">\r\n                <FontAwesomeIcon\r\n                  icon={faSearch}\r\n                  className=\"mx-auto text-muted fa-3x mb-2\"\r\n                />\r\n              </div>\r\n              <span className=\"h4 empty-heading mt-3\">Page not found</span>\r\n              <span className=\"empty-details\">{pathname}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Layout from \"./components/Layout\";\r\nimport PageNotFoud from \"./components/PageNotFoud\";\r\nimport * as config from \"./config\";\r\nimport { ContextProvider } from \"./context\";\r\nimport routes, { routeNames } from \"./routes\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Dapp.Context config={config}>\r\n      <ContextProvider>\r\n        <Layout>\r\n          <Switch>\r\n            <Route\r\n              path={routeNames.unlock}\r\n              component={() => (\r\n                <Dapp.Pages.Unlock\r\n                  callbackRoute={routeNames.dashboard}\r\n                  title={config.dAppName}\r\n                  lead=\"Please select your login method:\"\r\n                  ledgerRoute={routeNames.ledger}\r\n                  walletConnectRoute={routeNames.walletconnect}\r\n                />\r\n              )}\r\n              exact={true}\r\n            />\r\n            <Route\r\n              path={routeNames.ledger}\r\n              component={() => (\r\n                <Dapp.Pages.Ledger callbackRoute={routeNames.dashboard} />\r\n              )}\r\n              exact={true}\r\n            />\r\n            <Route\r\n              path={routeNames.walletconnect}\r\n              component={() => (\r\n                <Dapp.Pages.WalletConnect\r\n                  callbackRoute={routeNames.dashboard}\r\n                  logoutRoute={routeNames.home}\r\n                  title=\"Maiar Login\"\r\n                  lead=\"Scan the QR code using Maiar\"\r\n                />\r\n              )}\r\n              exact={true}\r\n            />\r\n\r\n            {routes.map((route, i) => (\r\n              <Route\r\n                path={route.path}\r\n                key={route.path + i}\r\n                component={route.component}\r\n                exact={true}\r\n              />\r\n            ))}\r\n            <Route component={PageNotFoud} />\r\n          </Switch>\r\n        </Layout>\r\n      </ContextProvider>\r\n    </Dapp.Context>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./assets/sass/theme.scss\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\"),\r\n);\r\n","import axios from \"axios\";\r\n\r\ninterface GetLatestTransactionsType {\r\n  apiAddress: string;\r\n  address: string;\r\n  contractAddress: string;\r\n  timeout: number;\r\n  page?: number;\r\n  url?: string;\r\n  txHash?: string;\r\n  creator?: string;\r\n}\r\n\r\n// async function apiRequest(url: string, params: any) {\r\n//   return { data } = await axios.get(url, params);\r\n// };\r\n\r\nconst fetchTransactions = (url: string) =>\r\n  async function getTransactions({\r\n    apiAddress,\r\n    address,\r\n    contractAddress,\r\n    timeout,\r\n    txHash = \"\",\r\n  }: GetLatestTransactionsType) {\r\n    try {\r\n      const { data } = await axios.get(`${apiAddress}${url}${txHash}`, {\r\n        params: {\r\n          sender: address,\r\n          receiver: contractAddress,\r\n          creator: contractAddress,\r\n          condition: \"must\",\r\n          size: 25,\r\n        },\r\n        timeout,\r\n      });\r\n\r\n      return {\r\n        data: data,\r\n        success: data !== undefined,\r\n      };\r\n    } catch (err) {\r\n      return {\r\n        success: false,\r\n      };\r\n    }\r\n  };\r\n\r\nconst fetchParamApi = (url: string) =>\r\n  async function getTransactions({\r\n    apiAddress,\r\n    address,\r\n    contractAddress,\r\n    timeout,\r\n    txHash = \"\",\r\n  }: GetLatestTransactionsType) {\r\n    try {\r\n      const urlFull = `${apiAddress}/accounts/${contractAddress}${url}`;\r\n      const { data } = await axios.get(urlFull, {\r\n        params: {\r\n          sender: address,\r\n          receiver: contractAddress,\r\n          creator: contractAddress,\r\n          condition: \"must\",\r\n          size: 25,\r\n        },\r\n        timeout,\r\n      });\r\n\r\n      return {\r\n        data: data,\r\n        success: data !== undefined,\r\n      };\r\n    } catch (err) {\r\n      return {\r\n        success: false,\r\n      };\r\n    }\r\n  };\r\n\r\nconst fetchApi = (url: string) =>\r\n  async function getTransactions({\r\n    apiAddress,\r\n    address,\r\n    contractAddress,\r\n    timeout,\r\n    txHash = \"\",\r\n  }: GetLatestTransactionsType) {\r\n    try {\r\n      const urlFull = `${apiAddress}/accounts/${contractAddress}${url}`;\r\n      const { data } = await axios.get(urlFull, {\r\n        params: {},\r\n        timeout,\r\n      });\r\n\r\n      return {\r\n        data: data,\r\n        success: data !== undefined,\r\n      };\r\n    } catch (err) {\r\n      return {\r\n        success: false,\r\n      };\r\n    }\r\n  };\r\n\r\nexport const getTransactions = fetchTransactions(\"/transactions\");\r\nexport const getTransactionsCount = fetchTransactions(\"/transactions/count\");\r\n\r\n// /accounts/erd1qqqqqqqqqqqqqpgqhltedl3t7scst2wh6vjcesr0vqnvhcc7xrjsex2pse/collections\r\nexport const getCollections = fetchParamApi(\"/collections\");\r\n\r\n// /accounts/erd15uy978tml6w9yyhtdrvxp6sm0rtu5nfe2vnn8vp8g6h02urn4jlqmwzc3t/nfts\r\nexport const getNftItems = fetchApi(\"/nfts\");\r\n","import * as Dapp from \"@elrondnetwork/dapp\";\r\nimport {\r\n  Transaction,\r\n  GasPrice,\r\n  Address,\r\n  TransactionPayload,\r\n  Balance,\r\n  ChainID,\r\n  TransactionVersion,\r\n  GasLimit,\r\n} from \"@elrondnetwork/erdjs\";\r\nimport {\r\n  gasPrice,\r\n  version,\r\n  gasLimit as configGasLimit,\r\n  gasPerDataByte,\r\n} from \"config\";\r\nimport { RawTransactionType } from \"helpers/types\";\r\n\r\nexport default function useNewTransaction() {\r\n  const { chainId } = Dapp.useContext();\r\n\r\n  return (rawTransaction: RawTransactionType) => {\r\n    const gasLimit = rawTransaction.gasLimit\r\n      ? new GasLimit(rawTransaction.gasLimit)\r\n      : Dapp.calculateGasLimit({\r\n          data: rawTransaction.data || \"\",\r\n          gasLimit: configGasLimit,\r\n          gasPerDataByte,\r\n        });\r\n    return new Transaction({\r\n      value: Balance.egld(rawTransaction.value),\r\n      data: new TransactionPayload(rawTransaction.data),\r\n      receiver: new Address(rawTransaction.receiver),\r\n      gasLimit,\r\n      gasPrice: new GasPrice(gasPrice),\r\n      chainID: new ChainID(chainId.valueOf()),\r\n      version: new TransactionVersion(version),\r\n    });\r\n  };\r\n}\r\n","import * as bech32 from \"bech32\";\r\n\r\n/**\r\n * Converts base64 to utf8.\r\n *\r\n * @export\r\n * @param {string} str base64 string to convert\r\n * @return {string} utf8 result string\r\n */\r\nexport function base64ToUtf(str: string): string {\r\n  return Buffer.from(str, \"base64\").toString(\"utf8\");\r\n}\r\n\r\n/**\r\n * Converts a base64 string to a number.\r\n *\r\n * @export\r\n * @param {string} str base64 string to convert\r\n * @return {number} number result\r\n */\r\nexport function base64ToNumber(str: string): number {\r\n  return parseInt(Buffer.from(str, \"base64\").toString(\"hex\"), 16);\r\n}\r\n\r\n/**\r\n * Converts a base64 string to hex.\r\n *\r\n * @export\r\n * @param {string} str base64 string to convert\r\n * @return {string} hex result\r\n */\r\nexport function base64ToHex(str: string): string {\r\n  return Buffer.from(str, \"base64\").toString(\"hex\");\r\n}\r\n\r\n/**\r\n * Converts a base64 string to a bech32 address.\r\n *\r\n * @export\r\n * @param {string} str base64 string to convert\r\n * @return {string} bech32 address string result\r\n */\r\nexport function base64ToBech32(str: string): string {\r\n  return bech32.encode(\"erd\", bech32.toWords(Buffer.from(str, \"base64\")));\r\n}\r\n\r\n/**\r\n * Convert array of Hex to number/string\r\n * skip first item (usually not hex encoded string)\r\n * @param ecoddedArguments\r\n * @param slice\r\n * @returns\r\n */\r\nexport function getRawArgumentsSlice(ecoddedArguments: string[], slice = 1) {\r\n  return ecoddedArguments\r\n    .slice(slice)\r\n    .map((argument) => Buffer.from(argument, \"hex\"));\r\n}\r\n","import { BigNumber } from \"bignumber.js\";\r\nimport {\r\n  TypedValue,\r\n  Address,\r\n  AddressValue,\r\n  BytesValue,\r\n  BigUIntValue,\r\n  TokenIdentifierValue,\r\n  ContractFunction,\r\n  GasLimit,\r\n  NetworkConfig,\r\n  Query,\r\n} from \"@elrondnetwork/erdjs\";\r\nimport { TokenType, TransactionPayload } from \"@elrondnetwork/erdjs/out\";\r\n\r\n/**\r\n * calculate aproximative gas amount for tranzaction\r\n * // Martin advice:\r\n   cfgFrmNft.minGasLimit.issueNonFungible +\r\n   dataPayload.length() *\r\n   NetworkConfig.getDefault().GasPerDataByte;\r\n */\r\nexport function calculateGasLimit(\r\n  fixedGasLimit: number,\r\n  dataPayload: TransactionPayload,\r\n): number {\r\n  const gasLimit =\r\n    fixedGasLimit +\r\n    dataPayload.length() * NetworkConfig.getDefault().GasPerDataByte;\r\n  return gasLimit;\r\n}\r\n\r\n// const UtilsTransaction = () => {\r\n// const calculateGasLimit = (\r\n//     fixedGasLimit: number,\r\n//     dataPayload: TransactionPayload,\r\n// ): number => {\r\n//     const gasLimit =\r\n//         fixedGasLimit +\r\n//         dataPayload.length() * NetworkConfig.getDefault().GasPerDataByte;\r\n//     return gasLimit;\r\n// };\r\n// };\r\n// export default UtilsTransaction;\r\n","import * as Dapp from \"@elrondnetwork/dapp\";\r\nimport {\r\n  TypedValue,\r\n  Address,\r\n  AddressValue,\r\n  BytesValue,\r\n  BigUIntValue,\r\n  TokenIdentifierValue,\r\n  ContractFunction,\r\n  GasLimit,\r\n  NetworkConfig,\r\n  Query,\r\n  QueryResponse,\r\n} from \"@elrondnetwork/erdjs\";\r\nimport { TokenType, TransactionPayload } from \"@elrondnetwork/erdjs/out\";\r\nimport { BigNumber } from \"bignumber.js\";\r\nimport { contractAddress, cfgFrmNft, cfgCollection } from \"config\";\r\nimport { RawTransactionType } from \"helpers/types\";\r\nimport crypto from \"crypto\";\r\nimport { routeNames } from \"routes\";\r\nimport { config } from \"process\";\r\nimport { calculateGasLimit } from \"./UtilsTransaction\";\r\nimport {\r\n  CollectionType,\r\n  CollectionAttributeType,\r\n} from \"pages/Basic/Model/CollectionsType\";\r\n\r\n//\r\n// QUERY:\r\n//\r\nexport default function buildQueryBSMCount(): Query {\r\n  const query = new Query({\r\n    address: new Address(contractAddress),\r\n    func: new ContractFunction(\"getBSMCount\"),\r\n    args: [\r\n      new TokenIdentifierValue(\r\n        Buffer.from(cfgCollection.tokenIdentifier, \"utf8\"),\r\n      ),\r\n    ],\r\n    // args: [new AddressValue(new Address(address))],\r\n  });\r\n  return query;\r\n}\r\n\r\n//\r\nexport function bmsNftReturnDataToNumer(\r\n  result: QueryResponse,\r\n): number | undefined {\r\n  const [encoded] = result.returnData;\r\n  console.log(result);\r\n\r\n  switch (encoded) {\r\n    case undefined:\r\n      // setHasPing(true);\r\n      break;\r\n    // case \"\":\r\n    //   // setHasPing(false);\r\n    //   break;\r\n    default: {\r\n      const decoded = Buffer.from(encoded, \"base64\").toString(\"hex\");\r\n      const count = parseInt(decoded, 16);\r\n      console.log(\"done\");\r\n      return count;\r\n      // break;\r\n    }\r\n  }\r\n  console.log(\"done\");\r\n}\r\n\r\n// dapp.proxy\r\n//   .queryContract(query)\r\n//   .then(({ returnData }) => {\r\n//     const [encoded] = returnData;\r\n//     console.log(returnData);\r\n//     switch (encoded) {\r\n//       case undefined:\r\n//         // setHasPing(true);\r\n//         break;\r\n//       case \"\":\r\n//         // setHasPing(false);\r\n//         break;\r\n//       default: {\r\n//         const decoded = Buffer.from(encoded, \"base64\").toString(\"hex\");\r\n//         const count = parseInt(decoded, 16);\r\n//         console.log(\"done\");\r\n//         break;\r\n//       }\r\n//     }\r\n//   })\r\n//   .catch((err) => {\r\n//     console.error(\"Unable to call SM query\", err);\r\n//   });\r\n// console.log(\"done\");\r\n","import React, { useEffect, memo } from \"react\";\r\n\r\nconst withPageTitle = (title: string, Component: React.ComponentType) => () => {\r\n  const Memoized = memo(Component);\r\n\r\n  useEffect(() => {\r\n    document.title = title;\r\n  }, []);\r\n  return <Memoized />;\r\n};\r\n\r\nexport default withPageTitle;\r\n","import * as React from \"react\";\r\n\r\nconst PageState = ({\r\n  title,\r\n  description,\r\n  svgComponent,\r\n  className,\r\n  spin = false,\r\n}: {\r\n  title?: string;\r\n  description?: string | React.ReactNode;\r\n  svgComponent: React.ReactNode;\r\n  className?: string;\r\n  spin?: boolean;\r\n}) => {\r\n  return (\r\n    <div className=\"d-flex flex-fill align-items-center container page-state\">\r\n      <div className=\"row w-100\">\r\n        {spin ? (\r\n          <div className=\"col-12 text-center\" data-testid=\"loader\">\r\n            <div className=\"lds-ellipsis mx-auto mt-5 mb-5\">\r\n              <div />\r\n              <div />\r\n              <div />\r\n              <div />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"col-12 col-md-8 col-lg-5 mx-auto\">\r\n            <div className=\"card shadow-sm rounded p-5 border-0\">\r\n              <div className=\"card-body text-center d-flex flex-column justify-content-center\">\r\n                <div className={`icon ${className ? className : \"\"}`}>\r\n                  {svgComponent}\r\n                </div>\r\n                {title && <p className=\"h3 mt-3\">{title}</p>}\r\n                {description && <div className=\"mt-3\">{description}</div>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageState;\r\n","function format(\r\n  big: string,\r\n  denomination: number,\r\n  decimals: number,\r\n  showLastNonZeroDecimal: boolean,\r\n  addCommas: boolean,\r\n) {\r\n  showLastNonZeroDecimal =\r\n    typeof showLastNonZeroDecimal !== \"undefined\"\r\n      ? showLastNonZeroDecimal\r\n      : false;\r\n  let array = big.toString().split(\"\");\r\n  if (denomination !== 0) {\r\n    // make sure we have enough characters\r\n    while (array.length < denomination + 1) {\r\n      array.unshift(\"0\");\r\n    }\r\n    // add our dot\r\n    array.splice(array.length - denomination, 0, \".\");\r\n    // make sure there are enough decimals after the dot\r\n    while (array.length - array.indexOf(\".\") <= decimals) {\r\n      array.push(\"0\");\r\n    }\r\n\r\n    if (showLastNonZeroDecimal) {\r\n      let nonZeroDigitIndex = 0;\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n        if (array[i] !== \"0\") {\r\n          nonZeroDigitIndex = i + 1;\r\n          break;\r\n        }\r\n      }\r\n      const decimalsIndex = array.indexOf(\".\") + decimals + 1;\r\n      const sliceIndex = Math.max(decimalsIndex, nonZeroDigitIndex);\r\n      array = array.slice(0, sliceIndex);\r\n    } else {\r\n      // trim unnecessary characters after the dot\r\n      array = array.slice(0, array.indexOf(\".\") + decimals + 1);\r\n    }\r\n  }\r\n  if (addCommas) {\r\n    // add comas every 3 characters\r\n    array = array.reverse();\r\n    const reference = denomination\r\n      ? array.length - array.indexOf(\".\") - 1\r\n      : array.length;\r\n    const count = Math.floor(reference / 3);\r\n    for (let i = 1; i <= count; i++) {\r\n      const position = array.indexOf(\".\") + 3 * i + i;\r\n      if (position !== array.length) {\r\n        array.splice(position, 0, \",\");\r\n      }\r\n    }\r\n    array = array.reverse();\r\n  }\r\n\r\n  const allDecimalsZero = array\r\n    .slice(array.indexOf(\".\") + 1)\r\n    .every((digit) => digit.toString() === \"0\");\r\n\r\n  const string = array.join(\"\");\r\n\r\n  if (allDecimalsZero) {\r\n    return string.split(\".\")[0];\r\n  }\r\n\r\n  return decimals === 0 ? string.split(\".\").join(\"\") : string;\r\n}\r\n\r\ninterface DenominateType {\r\n  input: string;\r\n  denomination: number;\r\n  decimals: number;\r\n  showLastNonZeroDecimal: boolean;\r\n  addCommas?: boolean;\r\n}\r\n\r\nexport default function denominate({\r\n  input,\r\n  denomination,\r\n  decimals,\r\n  showLastNonZeroDecimal = false,\r\n  addCommas = true,\r\n}: DenominateType): string {\r\n  if (input === \"...\") {\r\n    return input;\r\n  }\r\n  if (input === \"\" || input === \"0\" || input === undefined) {\r\n    input = \"0\";\r\n  }\r\n  return format(\r\n    input,\r\n    denomination,\r\n    decimals,\r\n    showLastNonZeroDecimal,\r\n    addCommas,\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport { decimals as configDecimals, denomination } from \"config\";\r\nimport denominate from \"./denominate\";\r\n\r\ninterface DenominateType {\r\n  value: string;\r\n  showLastNonZeroDecimal?: boolean;\r\n  showErd?: boolean;\r\n  decimals?: number;\r\n  dataTestId?: string;\r\n  token?: string;\r\n}\r\n\r\nconst Denominate = ({\r\n  value,\r\n  showLastNonZeroDecimal = false,\r\n  showErd = true,\r\n  dataTestId,\r\n  decimals,\r\n  token,\r\n}: DenominateType) => {\r\n  decimals = decimals !== undefined ? decimals : configDecimals;\r\n  const { egldLabel } = Dapp.useContext();\r\n\r\n  const denominatedValue = denominate({\r\n    input: value,\r\n    denomination,\r\n    decimals,\r\n    showLastNonZeroDecimal,\r\n  });\r\n\r\n  const valueParts = denominatedValue.split(\".\");\r\n  const hasNoDecimals = valueParts.length === 1;\r\n  const isNotZero = denominatedValue !== \"0\";\r\n\r\n  if (decimals > 0 && hasNoDecimals && isNotZero) {\r\n    let zeros = \"\";\r\n\r\n    for (let i = 1; i <= decimals; i++) {\r\n      zeros = zeros + \"0\";\r\n    }\r\n\r\n    valueParts.push(zeros);\r\n  }\r\n\r\n  return (\r\n    <span data-testid={dataTestId}>\r\n      <span className=\"int-amount\">{valueParts[0]}</span>\r\n      {valueParts.length > 1 && (\r\n        <span className=\"decimals\">.{valueParts[1]}</span>\r\n      )}\r\n      {showErd && (\r\n        <span className=\"symbol\">&nbsp;{token ? token : egldLabel}</span>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Denominate;\r\n","import * as React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport { contractAddress } from \"config\";\r\nimport Denominate from \"./../../components/Denominate\";\r\n\r\nconst TopInfo = () => {\r\n  const {\r\n    address,\r\n    account: { balance },\r\n  } = Dapp.useContext();\r\n\r\n  return (\r\n    <div className=\"text-white\" data-testid=\"topInfo\">\r\n      <div className=\"mb-1\">\r\n        <span className=\"opacity-6 mr-1\">Your address:</span>\r\n        <span data-testid=\"accountAddress\"> {address}</span>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <span className=\"opacity-6 mr-1\">Contract address:</span>\r\n        <span data-testid=\"contractAddress\"> {contractAddress}</span>\r\n      </div>\r\n      <div>\r\n        <h3 className=\"py-2\">\r\n          <Denominate value={balance} dataTestId=\"balance\" />\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopInfo;\r\n","const txStatus = {\r\n  pending: \"Pending\",\r\n  notExecuted: \"Not Executed\",\r\n  success: \"Success\",\r\n  fail: \"Failed\",\r\n};\r\n\r\nexport default txStatus;\r\n","import React from \"react\";\r\nimport {\r\n  faArrowUp,\r\n  faArrowDown,\r\n  faBan,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { TransactionType } from \"./../../../context/state\";\r\nimport txStatus from \"./txStatus\";\r\n\r\ninterface StatusIconType {\r\n  tx: TransactionType;\r\n  incomingTransaction: boolean;\r\n}\r\n\r\nconst StatusIcon = ({ tx, incomingTransaction }: StatusIconType) => {\r\n  let Icon = () => <></>;\r\n  switch (tx.status) {\r\n    case txStatus.notExecuted:\r\n      Icon = () => <FontAwesomeIcon icon={faBan} className=\"text-danger\" />;\r\n      break;\r\n    case txStatus.fail:\r\n      Icon = () => <FontAwesomeIcon icon={faTimes} className=\"text-danger\" />;\r\n      break;\r\n    case txStatus.success:\r\n      Icon = () => (\r\n        <FontAwesomeIcon\r\n          icon={incomingTransaction ? faArrowUp : faArrowDown}\r\n          className=\"text-secondary\"\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      Icon = () => (\r\n        <FontAwesomeIcon\r\n          icon={incomingTransaction ? faArrowUp : faArrowDown}\r\n          className=\"text-secondary\"\r\n        />\r\n      );\r\n  }\r\n  return (\r\n    <i className=\"m-3 circle\">\r\n      <Icon />\r\n    </i>\r\n  );\r\n};\r\n\r\nexport default StatusIcon;\r\n","import React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport { Ui } from \"@elrondnetwork/dapp-utils\";\r\nimport moment from \"moment\";\r\nimport Denominate from \"components/Denominate\";\r\nimport { TransactionType } from \"context/state\";\r\nimport StatusIcon from \"./StatusIcon\";\r\nimport txStatus from \"./txStatus\";\r\n\r\nfunction sortByDate(a: TransactionType, b: TransactionType) {\r\n  if (a.timestamp < b.timestamp) {\r\n    return 1;\r\n  }\r\n  if (a.timestamp > b.timestamp) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nconst fakeSender =\r\n  \"erd000000000000000000000000000000000000000000000000000000000a\";\r\n\r\nconst TransactionList = ({\r\n  transactions,\r\n}: {\r\n  transactions: TransactionType[];\r\n}) => {\r\n  const { address, explorerAddress } = Dapp.useContext();\r\n  const incoming = (sender: string) =>\r\n    sender === address && sender !== fakeSender;\r\n\r\n  // eslint-disable-next-line\r\n  const doubleOwnTransactions = transactions\r\n    .filter((tx) => tx.sender === tx.receiver && tx.blockHash !== \"\")\r\n    .map((tx) => ({ ...tx, sender: fakeSender, timestamp: tx.timestamp + 1 }));\r\n\r\n  const sortedTransactions: TransactionType[] = (\r\n    [\r\n      ...transactions,\r\n      ...(doubleOwnTransactions.length > 0 ? doubleOwnTransactions : []),\r\n    ].filter((el: any) => el !== undefined) as any\r\n  ).sort(sortByDate);\r\n\r\n  return (\r\n    <div className=\"p-3 mt-3\">\r\n      <h4 className=\"mb-3 font-weight-normal\">Smart Contract Transactions</h4>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"transactions table pb-3\">\r\n          <thead>\r\n            <tr className=\"bg-light\">\r\n              <th className=\"border-0 font-weight-normal\"></th>\r\n              <th className=\"border-0 font-weight-normal\">Tx hash</th>\r\n              <th className=\"border-0 font-weight-normal\">Date</th>\r\n              <th className=\"border-0 font-weight-normal\">Amount</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody data-testid=\"transactionsList\">\r\n            {sortedTransactions.map((tx: TransactionType, i) => {\r\n              const incomingTransaction = incoming(tx.sender);\r\n              return (\r\n                <tr key={tx.txHash + i}>\r\n                  <td>\r\n                    <div\r\n                      className=\"transaction-icon bg-light d-flex align-items-center justify-content-center\"\r\n                      title={txStatus[tx.status]}\r\n                    >\r\n                      <StatusIcon\r\n                        tx={tx}\r\n                        incomingTransaction={incomingTransaction}\r\n                      />\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"transaction-hash\">\r\n                    <a\r\n                      href={`${explorerAddress}transactions/${tx.txHash}`}\r\n                      {...{\r\n                        target: \"_blank\",\r\n                      }}\r\n                      title=\"View in Explorer\"\r\n                    >\r\n                      <Ui.Trim data-testid=\"txHash\" text={tx.txHash} />\r\n                    </a>\r\n                  </td>\r\n                  <td>\r\n                    {moment.unix(tx.timestamp).format(\"MMMM Do YYYY, h:mm A\")}\r\n                  </td>\r\n                  <td>\r\n                    {tx.value === \"0\" ? (\r\n                      \"\"\r\n                    ) : (\r\n                      <>{tx.sender === address ? \"-\" : \"+\"}</>\r\n                    )}\r\n                    <Denominate value={tx.value} />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <a\r\n          href={`${explorerAddress}address/${address}`}\r\n          {...{\r\n            target: \"_blank\",\r\n          }}\r\n        >\r\n          See all transactions\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import axios from \"axios\";\r\nimport { cfgCollection } from \"config\";\r\n\r\ninterface GetGatewayType {\r\n  apiAddress?: string;\r\n  timeout: number;\r\n  page?: number;\r\n  url?: string;\r\n  txHash?: string;\r\n  creator?: string;\r\n}\r\n\r\n// async function apiRequest(url: string, params: any) {\r\n//   return { data } = await axios.get(url, params);\r\n// };\r\n\r\nconst fetchIPFSFileApi = (url: string) =>\r\n  async function getIPFSFile({ apiAddress, timeout }: GetGatewayType) {\r\n    try {\r\n      const { data } = await axios.get(`${cfgCollection.apiPath}/${url}`, {\r\n        params: {\r\n          // size: 25,\r\n        },\r\n        timeout: 5000,\r\n      });\r\n\r\n      return {\r\n        data: data,\r\n        success: data !== undefined,\r\n      };\r\n    } catch (err) {\r\n      console.error(err);\r\n      return {\r\n        success: false,\r\n      };\r\n    }\r\n  };\r\n\r\n////https://ipfs.io/ipfs/QmXatUvUaQzDmHAogwkizcTCt8jPCWAVta1TfpX2Fo4khE/_metadata.json\r\nexport const getCollectionJson = fetchIPFSFileApi(\r\n  `${cfgCollection.collCID}/${cfgCollection.collName}`,\r\n);\r\n","import React from \"react\";\r\nimport { faExchangeAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PageState from \"components/PageState\";\r\nimport { useContext } from \"context\";\r\nimport TransactionsList from \"./TransactionsList\";\r\n\r\nconst Transactions = () => {\r\n  const { transactions } = useContext();\r\n\r\n  return transactions.length > 0 ? (\r\n    <TransactionsList transactions={transactions} />\r\n  ) : (\r\n    <div className=\"my-5\">\r\n      <PageState\r\n        svgComponent={\r\n          <FontAwesomeIcon icon={faExchangeAlt} className=\"text-muted fa-3x\" />\r\n        }\r\n        title=\"No Transactions\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n","import * as React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PageState from \"components/PageState\";\r\nimport { contractAddress } from \"config\";\r\nimport { useContext, useDispatch } from \"context\";\r\nimport Actions from \"./Actions\";\r\nimport { getTransactions } from \"./helpers/asyncRequests\";\r\nimport TopInfo from \"./TopInfo\";\r\nimport Transactions from \"./Transactions\";\r\n\r\nconst Dashboard = () => {\r\n  const ref = React.useRef(null);\r\n  const { apiAddress, address } = Dapp.useContext();\r\n  const { transactionsFetched } = useContext();\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchData = () => {\r\n    getTransactions({\r\n      apiAddress,\r\n      address,\r\n      timeout: 3000,\r\n      contractAddress,\r\n    }).then(({ data, success }) => {\r\n      dispatch({\r\n        type: \"setTransactions\",\r\n        transactions: data,\r\n        transactionsFetched: success,\r\n      });\r\n    });\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  React.useEffect(fetchData, []);\r\n\r\n  if (transactionsFetched === undefined) {\r\n    return <PageState svgComponent={<></>} spin />;\r\n  }\r\n\r\n  if (transactionsFetched === false) {\r\n    return (\r\n      <PageState\r\n        svgComponent={\r\n          <FontAwesomeIcon icon={faBan} className=\"text-secondary fa-3x\" />\r\n        }\r\n        title=\"Unavailable\"\r\n        className=\"dapp-icon icon-medium\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-4\" ref={ref}>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-10 mx-auto\">\r\n          <div className=\"card shadow-sm rounded border-0\">\r\n            <div className=\"card-body p-1\">\r\n              <div className=\"card rounded border-0 bg-primary\">\r\n                <div className=\"card-body text-center p-4\">\r\n                  <TopInfo />\r\n                  <Actions />\r\n                </div>\r\n              </div>\r\n              <Transactions />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { dAppName } from \"config\";\r\nimport { routeNames } from \"routes\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"d-flex flex-fill align-items-center container\">\r\n      <div className=\"row w-100\">\r\n        <div className=\"col-12 col-md-8 col-lg-5 mx-auto\">\r\n          <div className=\"card shadow-sm rounded p-4 border-0\">\r\n            <div className=\"card-body text-center\">\r\n              <h2 className=\"mb-3\" data-testid=\"title\">\r\n                {dAppName}\r\n              </h2>\r\n\r\n              <p className=\"mb-3\">\r\n                This is an Elrond dapp sample.\r\n                <br /> Login using your Elrond wallet.\r\n              </p>\r\n\r\n              <Link\r\n                to={routeNames.unlock}\r\n                className=\"btn btn-primary mt-3\"\r\n                data-testid=\"loginBtn\"\r\n              >\r\n                Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import * as React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport PageState from \"components/PageState\";\r\nimport { routeNames } from \"routes\";\r\n\r\nconst Transaction = () => {\r\n  const { search } = useLocation();\r\n  const { explorerAddress } = Dapp.useContext();\r\n\r\n  const query = new URLSearchParams(search);\r\n  const { status, txHash } = Object.fromEntries(query);\r\n\r\n  return status === \"success\" ? (\r\n    <PageState\r\n      svgComponent={\r\n        <FontAwesomeIcon icon={faCheck} className=\"text-success fa-3x\" />\r\n      }\r\n      className=\"dapp-icon icon-medium\"\r\n      title=\"Transaction submitted successfully\"\r\n      description={\r\n        <>\r\n          <p>\r\n            <a\r\n              href={`${explorerAddress}transactions/${txHash}`}\r\n              {...{\r\n                target: \"_blank\",\r\n              }}\r\n              className=\"tx-link\"\r\n              title=\"View in Explorer\"\r\n            >\r\n              {txHash}\r\n            </a>\r\n          </p>\r\n          <Link to={routeNames.dashboard} className=\"btn btn-primary mt-3\">\r\n            Back to dashboard\r\n          </Link>\r\n        </>\r\n      }\r\n    />\r\n  ) : (\r\n    <PageState\r\n      svgComponent={\r\n        <FontAwesomeIcon icon={faTimes} className=\"text-danger fa-3x\" />\r\n      }\r\n      className=\"dapp-icon icon-medium\"\r\n      title=\"Error sending transaction\"\r\n      description={\r\n        <>\r\n          <p>Try again</p>\r\n          <a href={routeNames.dashboard} className=\"btn btn-primary mt-3\">\r\n            Back to dashboard\r\n          </a>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import * as React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport { contractAddress } from \"config\";\r\nimport Denominate from \"./../../components/Denominate\";\r\n\r\nconst TopInfo = () => {\r\n  const {\r\n    address,\r\n    account: { balance },\r\n  } = Dapp.useContext();\r\n\r\n  return (\r\n    <div className=\"text-white\" data-testid=\"topInfo\">\r\n      <div className=\"mb-1\">\r\n        <span className=\"opacity-6 mr-1\">Your address:</span>\r\n        <span data-testid=\"accountAddress\"> {address}</span>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <span className=\"opacity-6 mr-1\">Contract address:</span>\r\n        <span data-testid=\"contractAddress\"> {contractAddress}</span>\r\n      </div>\r\n      <div>\r\n        <h3 className=\"py-2\">\r\n          <Denominate value={balance} dataTestId=\"balance\" />\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopInfo;\r\n","import * as React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PageState from \"components/PageState\";\r\nimport { contractAddress } from \"config\";\r\nimport { useContext, useDispatch } from \"context\";\r\nimport Actions from \"./Actions\";\r\nimport { getTransactions } from \"../Dashboard/helpers/asyncRequests\";\r\nimport TopInfo from \"./TopInfo\";\r\nimport CreateCrud from \"./CreateCrud\";\r\n// import Transactions from \"./Transactions\";\r\n\r\nconst Dashboard = () => {\r\n  const ref = React.useRef(null);\r\n  const { apiAddress, address } = Dapp.useContext();\r\n  const { transactionsFetched } = useContext();\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchData = () => {\r\n    getTransactions({\r\n      apiAddress,\r\n      address,\r\n      timeout: 3000,\r\n      contractAddress,\r\n    }).then(({ data, success }) => {\r\n      dispatch({\r\n        type: \"setTransactions\",\r\n        transactions: data,\r\n        transactionsFetched: success,\r\n      });\r\n    });\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  React.useEffect(fetchData, []);\r\n\r\n  if (transactionsFetched === undefined) {\r\n    return <PageState svgComponent={<></>} spin />;\r\n  }\r\n\r\n  if (transactionsFetched === false) {\r\n    return (\r\n      <PageState\r\n        svgComponent={\r\n          <FontAwesomeIcon icon={faBan} className=\"text-secondary fa-3x\" />\r\n        }\r\n        title=\"Unavailable\"\r\n        className=\"dapp-icon icon-medium\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-4\" ref={ref}>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-10 mx-auto\">\r\n          <div className=\"card shadow-sm rounded border-0\">\r\n            <div className=\"card-body p-1\">\r\n              <div className=\"card rounded border-0 bg-primary\">\r\n                <div className=\"card-body text-center p-4\">\r\n                  <TopInfo />\r\n                  {/* <Actions /> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CreateCrud />\r\n          <br />\r\n\r\n          {/* <Card border=\"light\" style={{ width: \"18rem\" }}>\r\n            <Card.Header>Header</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Light Card Title</Card.Title>\r\n              <Card.Text>\r\n                Some quick example text to build on the card title and make up\r\n                the bulk of the cards content.\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { contractAddress } from \"config\";\r\nimport Denominate from \"../../components/Denominate\";\r\n\r\nconst ContactInfo = () => {\r\n  // const {\r\n  //   address,\r\n  //   account: { balance },\r\n  // } = Dapp.useContext();\r\n\r\n  // const MyComponent = () => {\r\n  //   const [value, setValue] = React.useState('some initial value');\r\n  //   return <input value={value} onChange={e => setValue(e.target.value)} />;\r\n  // }\r\n\r\n  const contact = {\r\n    email: \"\",\r\n    collectionName: \"\",\r\n    nuances: \"1.1\",\r\n  };\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [collectionName, setCollectionName] = useState(\"\");\r\n  const [nuances, setNuances] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-white\" data-testid=\"contactInfo\">\r\n        <div className=\"mb-1\">\r\n          <span className=\"opacity-6 mr-1\">Your address:</span>\r\n          <span data-testid=\"accountAddress\"> {contact.email}</span>\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <span className=\"opacity-6 mr-1\">Contract address:</span>\r\n          <span data-testid=\"contractAddress\"> {contractAddress}</span>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"py-2\">\r\n            <Denominate value={contact.nuances} dataTestId=\"balance\" />\r\n          </h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Form>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n            <Form.Text className=\"text-muted\">\r\n              We will never share your email with anyone else: {contact.email}\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicCheckbox\">\r\n            <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicCheckbox\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We will never share your email with anyone else: {email}\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ContactInfo;\r\n","import React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport {\r\n  TypedValue,\r\n  Address,\r\n  AddressValue,\r\n  BytesValue,\r\n  BigUIntValue,\r\n  TokenIdentifierValue,\r\n  ContractFunction,\r\n  GasLimit,\r\n  NetworkConfig,\r\n  Query,\r\n  QueryResponse,\r\n} from \"@elrondnetwork/erdjs\";\r\n// import { QueryResponse } from \"./smartcontracts/queryResponse\";\r\nimport routes, { routeNames } from \"routes\";\r\nimport { Navbar as BsNavbar, NavItem, Nav } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { dAppName } from \"config\";\r\nimport { Alert, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport crypto from \"crypto\";\r\nimport { TokenType, TransactionPayload } from \"@elrondnetwork/erdjs/out\";\r\nimport { BigNumber } from \"bignumber.js\";\r\nimport { NFTToken } from \"@elrondnetwork/erdjs/out/nftToken\";\r\nimport { contractAddress, cfgFrmNft, cfgCollection } from \"config\";\r\nimport * as converters from \"helpers/converters\";\r\nimport { RawTransactionType } from \"helpers/types\";\r\nimport moment from \"moment\";\r\nimport useNewTransaction from \"pages/Transaction/useNewTransaction\";\r\nimport { calculateGasLimit } from \"pages/Basic/UtilsTransaction\";\r\nimport { create as ipfsHttpClient } from \"ipfs-http-client\";\r\nimport { getCollectionJson } from \"pages/Dashboard/helpers/asyncRequestsIPFS\";\r\nimport {\r\n  CollectionType,\r\n  CollectionAttributeType,\r\n} from \"pages/Basic/Model/CollectionsType\";\r\nimport buildBMSNftTransaction, {\r\n  NftApiType,\r\n} from \"pages/Basic/BMSNftTransaction\";\r\nimport queryBmsNftCount, {\r\n  bmsNftReturnDataToNumer,\r\n} from \"pages/Basic/BMSNftQuery\";\r\nimport buildBTESTDTransaction from \"pages/Basic/BTESTDTransaction\";\r\n\r\nconst FunTemplate = ({ children }: { children: React.ReactNode }) => {\r\n  const { loggedIn } = Dapp.useContext();\r\n  const dappLogout = Dapp.useLogout();\r\n  const history = useHistory();\r\n\r\n  // states\r\n  const [collData, setCollData] = React.useState<CollectionType[]>([]);\r\n\r\n  // const ipfsClient: IPFSHTTPClient = ipfsHttpClient(cfgApiInfura); // restrictive\r\n  // const ipfsClient: IPFSHTTPClient = ipfsHttpClient(cfgApiIPFS);\r\n  // const ipfsClient: IPFSHTTPClient = ipfsHttpClient(cfgApiPinata); // bad\r\n\r\n  const logOut = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    dappLogout({ callbackUrl: `${window.location.origin}/` });\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const bsmLoggedIn = (): boolean => {\r\n    return loggedIn;\r\n  };\r\n\r\n  // transaction props\r\n  const newTransaction = useNewTransaction();\r\n  const sendTransaction = Dapp.useSendTransaction();\r\n  const {\r\n    address,\r\n    account: { balance },\r\n    dapp,\r\n  } = Dapp.useContext();\r\n\r\n  ////\r\n  // set lazy collecction data load\r\n  let callCountqueryTrData = 0;\r\n\r\n  // query and reset counter\r\n  const queryTrData = () => {\r\n    callCountqueryTrData = 0;\r\n    console.log(\"callCountqueryTrData2 = \" + callCountqueryTrData);\r\n    getNFTCollectionJson();\r\n  };\r\n\r\n  // query tranzaction data and analyse results\r\n  React.useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      queryTrData();\r\n    }, cfgFrmNft.queryApiDelay);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  //\r\n  const decodeBase64 = (strBase64: string): Buffer[] => {\r\n    const payload = TransactionPayload.fromEncoded(strBase64);\r\n    // payload.getEncodedArguments();\r\n    return payload.getRawArguments();\r\n  };\r\n\r\n  function delay(time: number) {\r\n    return new Promise((resolve) => setTimeout(resolve, time));\r\n  }\r\n\r\n  ////////////////////////////////////\r\n  // get tranzaction status\r\n  //https://devnet-api.elrond.com/collections?creator=erd1qqqqqqqqqqqqqpgqhltedl3t7scst2wh6vjcesr0vqnvhcc7xrjsex2pse\r\n  const getNFTCollectionJson = () => {\r\n    getCollectionJson({\r\n      timeout: 5000,\r\n    }).then(({ data, success }) => {\r\n      console.log(success);\r\n      console.log(data);\r\n      setCollData(data);\r\n    });\r\n  };\r\n\r\n  // const createNFTfromColl = (data: any): CollectionType => {\r\n  //   const nftID = getNextNFTID();\r\n  //   console.log(\"NFT ID create: \" + nftID);\r\n  //   const collItem = data[nftID];\r\n  //   console.log(\"NFT data: \");\r\n  //   console.log(collItem);\r\n  //   return collItem;\r\n  //   // sendTransactionBsmNft(collItem);\r\n  // };\r\n\r\n  // const getNextNFTID = (): number => {\r\n  //   const nftID = 3;\r\n  //   console.log(\"nftID=\" + nftID);\r\n  //   return nftID;\r\n  // };\r\n\r\n  const sendTransactionBsmNft = (collItem: CollectionType) => {\r\n    console.log(\"=== before send tranzaction: BMSNft\");\r\n    // new transaction object\r\n    const newTr = newTransaction(buildBMSNftTransaction(collItem));\r\n    console.log(newTr);\r\n    // setDbgMsg(newTr.toPlainObject());\r\n    sendTransaction({\r\n      transaction: newTr,\r\n      callbackRoute: routeNames.fun123,\r\n    });\r\n    console.log(\"=== after send tranzaction: BMSNft\");\r\n    console.log(newTr);\r\n    // setDbgMsg(newTr.toPlainObject());\r\n  };\r\n\r\n  //\r\n  //transaction: RawTransactionType\r\n  async function bsmNft(e: React.MouseEvent) {\r\n    e.preventDefault();\r\n    console.log(\"=== before send tranzaction: BMSNft\");\r\n\r\n    // get coll data\r\n    if (collData === undefined || collData === null || collData.length === 0) {\r\n      getNFTCollectionJson();\r\n      await delay(cfgFrmNft.apiRequestDelay.issueNonFungible);\r\n    }\r\n\r\n    // current SC collection ID\r\n\r\n    const query = queryBmsNftCount();\r\n    const queryResponce = await dapp.proxy.queryContract(query);\r\n    console.log(\"collID=\" + queryResponce);\r\n\r\n    const collID = bmsNftReturnDataToNumer(queryResponce)!;\r\n    if (collID === undefined || collID === null) {\r\n      // TODO show error\r\n      return;\r\n    }\r\n    if (collID > collData.length) {\r\n      // TODO show error\r\n      // SOLD OUT collection\r\n      return;\r\n    }\r\n    const collItem = collData[collID];\r\n    console.log(\"collItem=\" + collItem);\r\n\r\n    // send transaction BMSNFT\r\n    sendTransactionBsmNft(collItem);\r\n\r\n    console.log(\"=== after send tranzaction: BMSNft\");\r\n  }\r\n\r\n  // ESTD tokens\r\n  function btESTDTransaction(e: React.MouseEvent) {\r\n    e.preventDefault();\r\n    console.log(\"=== before send tranzaction: btESTDTransaction\");\r\n\r\n    const campaign = 2;\r\n    console.log(\"collItem=\" + campaign);\r\n\r\n    // new transaction object\r\n    const newTr = newTransaction(buildBTESTDTransaction(campaign));\r\n    console.log(newTr);\r\n    sendTransaction({\r\n      transaction: newTr,\r\n      callbackRoute: routeNames.fun123,\r\n    });\r\n\r\n    console.log(\"=== after send tranzaction: btESTDTransaction\");\r\n  }\r\n\r\n  //\r\n  const isEmptyObject = function (obj: any) {\r\n    let name;\r\n    for (name in obj) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  //http://stackoverflow.com/questions/8431651/getting-a-diff-of-two-json-objects\r\n  // const diff = function (obj1: any, obj2: any): any {\r\n  //   let result = {};\r\n  //   let change;\r\n  //   for (var key in obj1) {\r\n  //     if (typeof obj2[key] == \"object\" && typeof obj1[key] == \"object\") {\r\n  //       change = diff(obj1[key], obj2[key]);\r\n  //       if (isEmptyObject(change) === false) {\r\n  //         result[key] = change;\r\n  //       }\r\n  //     } else if (obj2[key] != obj1[key]) {\r\n  //       result[key] = obj2[key];\r\n  //     }\r\n  //   }\r\n  //   return result;\r\n  // };\r\n\r\n  // const userList = [];\r\n  // this.state.users.forEach((user) => {\r\n  //   let name = `${user.name.first} ${user.name.last}`;\r\n  //   let avatar = user.picture.thumbnail;\r\n  //   let email = user.email;\r\n  //   let key = user.id.value;\r\n  //   userList.push(<User name={name} avatar={avatar} email={email} key={key} />);\r\n  // });\r\n\r\n  // const idsCompare = () => {\r\n  //   var results: string = [];\r\n  //   const ids = [];\r\n\r\n  //   for (let result of results) {\r\n  //     ids.push(result.Id);\r\n  //   }\r\n  // };\r\n\r\n  const nftColl: NftApiType[] = [\r\n    { name: \"name 1\" },\r\n    { name: \"name 2\" },\r\n    { name: \"name 3\" },\r\n    { name: \"name 4\" },\r\n    { name: \"name 5\" },\r\n    { name: \"name 6\" },\r\n    { name: \"name 7\" },\r\n    { name: \"name 8\" },\r\n  ];\r\n\r\n  const soldNft = [{ name: \"name 1\" }, { name: \"name 2\" }, { name: \"name 7\" }];\r\n\r\n  const idsCompare = (): NftApiType[] => {\r\n    const avaliableNft: any = [];\r\n    for (let i = 0; i < nftColl.length; i++) {\r\n      // for (const nftMeta in nftColl) {\r\n      // nftColl.forEach((nftMeta) => {\r\n      const nftMeta = nftColl[i];\r\n      if (!soldNft.some((item) => item.name === nftMeta.name)) {\r\n        avaliableNft.push(nftMeta);\r\n      }\r\n    }\r\n    console.log(avaliableNft);\r\n    return avaliableNft;\r\n  };\r\n\r\n  // const items: any = [];\r\n  // // items.push({ label: \"Create Collection...\", value: \"New\" });\r\n  // for (let i = 0; i < data.length; i++) {\r\n  //   const value = data[i].collection;\r\n  //   const label = data[i].name;\r\n  //   const url = data[i].url;\r\n  //   const identifier = data[i].identifier;\r\n  //   // items.push({ label: label, value: value });\r\n  //   items.push(data[i]);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"loading\" style={{ display: \"none\" }}>\r\n        <div id=\"loading-center\">\r\n          <div className=\"loader loader2\">\r\n            <div>\r\n              <div>\r\n                <div>\r\n                  <div>\r\n                    <div>\r\n                      <div />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* loading End */}\r\n      {/* Header */}\r\n      <header className=\"menu-sticky\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                <a className=\"navbar-brand\" href=\"javascript:void(0)\">\r\n                  <img\r\n                    alt=\"\"\r\n                    className=\"img-fluid\"\r\n                    src=\"/THJ_files/edrug-logo3.png\"\r\n                  />{\" \"}\r\n                </a>\r\n                <button\r\n                  aria-controls=\"navbarSupportedContent\"\r\n                  aria-expanded=\"false\"\r\n                  aria-label=\"Toggle navigation\"\r\n                  className=\"navbar-toggler\"\r\n                  data-target=\"#navbarSupportedContent\"\r\n                  data-toggle=\"collapse\"\r\n                  type=\"button\"\r\n                />\r\n                <div\r\n                  className=\"collapse navbar-collapse\"\r\n                  id=\"navbarSupportedContent\"\r\n                >\r\n                  <ul className=\"navbar-nav mr-auto w-100 justify-content-end\">\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href={routeNames.fun123}>\r\n                        E-Drug Home\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"#thj\">\r\n                        MY NFT\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"#road\">\r\n                        Road Map\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"#team\">\r\n                        Team\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link\" href=\"#contact-us\">\r\n                        Contact Us\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      {loggedIn && (\r\n                        <a href=\"/\" onClick={logOut} className=\"nav-link\">\r\n                          Close\r\n                        </a>\r\n                      )}\r\n                      {!loggedIn && (\r\n                        <a href={routeNames.unlock} className=\"nav-link\">\r\n                          CONNECT\r\n                        </a>\r\n                      )}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      {/* Header END */}\r\n      {/* banner ORIG */}\r\n      <div className=\"iq-banner\" id=\"wave_stop\">\r\n        <div className=\"banner-info\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"align-self-center\">\r\n                <div className=\"banner-text text-left iq-font-white\">\r\n                  <h1 className=\"iq-font-white iq-mb-20\">\r\n                    E-DRUG LABS <strong className=\"iq-font-yellow\"> </strong>\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"align-self-center\">\r\n                <img\r\n                  alt=\"\"\r\n                  className=\"hero-video-s\"\r\n                  src=\"/THJ_files/edruglabsTease.png\"\r\n                />\r\n              </div> */}\r\n              <div className=\"align-self-center\">\r\n                <video\r\n                  muted={true}\r\n                  preload=\"\"\r\n                  loop={true}\r\n                  autoPlay={true}\r\n                  poster=\"/THJ_files/edruglabsTease.png\"\r\n                  src=\"/THJ_files/edruglabsTease.mp4\"\r\n                  className=\"hero-video-s\"\r\n                  id=\"104 121 115 097 100 099 105 108 108 112 226 128 152\"\r\n                >\r\n                  ,\r\n                </video>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"align-self-center\">\r\n                <div className=\"banner-text text-left iq-font-white\">\r\n                  <h1 className=\"iq-font-white iq-mb-20\"> </h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-7 align-self-center\">\r\n                <div className=\"banner-text text-left iq-font-white\">\r\n                  <h1 className=\"iq-font-white iq-mb-20\">\r\n                    {\" \"}\r\n                    <strong className=\"iq-font-yellow\"> NFTs metaverse</strong>\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-6 align-self-center\">\r\n                <img\r\n                  alt=\"\"\r\n                  className=\"img-fluid\"\r\n                  src=\"/THJ_files/edrug-3.jpg\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-5 text-center r9-mt-40\">\r\n                <div className=\"iq-countdown\">\r\n                  <h2 className=\"iq-tw-8 iq-font-yellow\">Limited supply</h2>\r\n                  <h2 className=\"title iq-tw-6\">1000 / 3000</h2>\r\n                  <ul id=\"countdown\">\r\n                    <li className=\"border-white\">\r\n                      <span className=\"hours\">$0.66</span>\r\n                      <p className=\"hours_text\">Sale price</p>\r\n                    </li>\r\n                  </ul>\r\n                  <div className=\"iq-progress-bar-linear\">\r\n                    <p> *30% OFF only today</p>\r\n                    <p> *MAX LIMIT 12 NFTs</p>\r\n                  </div>\r\n                  {/* <a\r\n                    className=\"button iq-mb-20 bt-white\"\r\n                    href=\"javascript:void(0)\"\r\n                    role=\"button\"\r\n                    onClick={(e) => {\r\n                      // getNFTCollectionJson();\r\n                      // queryBmsNftCount();\r\n                      // bsmNft(e);  // WORKING!!!!\r\n                      btESTDTransaction(e); // ESTD token\r\n                    }}\r\n                  >\r\n                    E-Drug Presale phase{\" \"}\r\n                  </a> */}\r\n                  {loggedIn && (\r\n                    <Link\r\n                      className=\"button iq-mb-20 bt-white\"\r\n                      to=\"javascript:void(0)\"\r\n                      role=\"button\"\r\n                      onClick={(e) => {\r\n                        bsmNft(e);\r\n                      }}\r\n                    >\r\n                      E-Drug Presale phase{\" \"}\r\n                    </Link>\r\n                  )}\r\n                  {!loggedIn && (\r\n                    <OverlayTrigger\r\n                      overlay={\r\n                        <Tooltip id=\"tooltip-disabled\">Login first!</Tooltip>\r\n                      }\r\n                    >\r\n                      <span className=\"\">\r\n                        <Link\r\n                          style={{ pointerEvents: \"none\" }}\r\n                          className=\"button iq-mb-20 bt-white\"\r\n                          to=\"#\"\r\n                          role=\"button\"\r\n                          onClick={(e) => {\r\n                            // bsmNft(e);\r\n                          }}\r\n                        >\r\n                          E-Drug Presale phase{\" \"}\r\n                        </Link>\r\n                      </span>\r\n                    </OverlayTrigger>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-7 align-self-center\">\r\n                <div className=\"banner-text text-left iq-font-white\">\r\n                  <p>\r\n                    At the end of every gaming cycle or level achieved you get\r\n                    rewarded with honey in the form of an unique NFT for every\r\n                    hive you have adopted!\r\n                  </p>\r\n                  <p>\r\n                    You can even request the transfer of the NFT from the\r\n                    virtual worlds or metaverse to real life and withdraw real\r\n                    honey from our apiaries, to any psysical address, as the\r\n                    owner of the NFT (*shipping and packaging is of course paid\r\n                    separately).{\" \"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/*  banner */}\r\n\r\n      {/* Main-Contain */}\r\n      <div className=\"main-contain\">\r\n        {/* Clients */}\r\n        {/* What is THJ END */}\r\n        {/* Our Mission */}\r\n        <section className=\"overview-block-ptb\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6 align-self-center\">\r\n                <img alt=\"\" className=\"img-fluid\" src=\"/THJ_files/02.png\" />\r\n              </div>\r\n              <div className=\"col-lg-6 align-self-center\">\r\n                <div className=\"heading-title left\">\r\n                  <small className=\"iq-font-green\">Mission</small>\r\n                  <h2 className=\"iq-tw-6\">The Honey Journey</h2>\r\n                </div>\r\n                <p>\r\n                  Thehoneyjourney is a decentralized NFT game platform which\r\n                  provide blockchain services to players, beehive adopters,\r\n                  beekeepers, and communities, consumers all over the world,\r\n                  through the <strong>Play and Earn</strong> system.\r\n                  Thehoneyjourney is developed on BSC network and plans to drive\r\n                  the evolution of online gaming morphed into targeted industry\r\n                  and focused on solutions to help promising producers, projects\r\n                  and products reach their full potential both in real world and\r\n                  in the future metaverse worlds.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Our Mission END */}\r\n        {/* Tranding Platform */}\r\n        <section className=\"iq-tranding-Platform overview-block-pt\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"heading-title\">\r\n                  <small className=\"iq-font-green\">blockchain</small>\r\n                  <h2 className=\"title iq-tw-6\">Play and Earn</h2>\r\n                  <p>Thehoneyjourney is a new type of game. </p>\r\n                  <p>\r\n                    It is the first project that aims to unite gamers, game\r\n                    lovers, NFT collectors, traders, beekeepers, bee honey\r\n                    consumers and crypto communities all around the world with\r\n                    the Play and Earn style and philosophy.{\" \"}\r\n                  </p>\r\n                  <p>\r\n                    While making strategies for the players to earn NFTs in the\r\n                    game with special add-ons, it also provides a decentralized\r\n                    platform service where gamers can be ensured that NFTs can\r\n                    have real world asset.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"light-bg\">\r\n                  <nav>\r\n                    <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n                      <a\r\n                        aria-controls=\"nav-home\"\r\n                        aria-selected=\"true\"\r\n                        className=\"nav-item nav-link\"\r\n                        data-toggle=\"tab\"\r\n                        href=\"https://thehoneyjourney.com/#nav-home\"\r\n                        id=\"nav-home-tab\"\r\n                        role=\"tab\"\r\n                      >\r\n                        <span>Stack</span>\r\n                      </a>{\" \"}\r\n                      <a\r\n                        aria-controls=\"nav-profile\"\r\n                        aria-selected=\"false\"\r\n                        className=\"nav-item nav-link\"\r\n                        data-toggle=\"tab\"\r\n                        href=\"https://thehoneyjourney.com/#nav-profile\"\r\n                        id=\"nav-profile-tab\"\r\n                        role=\"tab\"\r\n                      >\r\n                        {\" \"}\r\n                        <span>Play</span>{\" \"}\r\n                      </a>{\" \"}\r\n                      <a\r\n                        aria-controls=\"nav-app\"\r\n                        aria-selected=\"false\"\r\n                        className=\"nav-item nav-link\"\r\n                        data-toggle=\"tab\"\r\n                        href=\"https://thehoneyjourney.com/#nav-app\"\r\n                        id=\"nav-app-tab\"\r\n                        role=\"tab\"\r\n                      >\r\n                        {\" \"}\r\n                        <span>Earn</span>{\" \"}\r\n                      </a>{\" \"}\r\n                      <a\r\n                        aria-controls=\"nav-token\"\r\n                        aria-selected=\"false\"\r\n                        className=\"nav-item nav-link\"\r\n                        data-toggle=\"tab\"\r\n                        href=\"https://thehoneyjourney.com/#nav-token\"\r\n                        id=\"nav-token-tab\"\r\n                        role=\"tab\"\r\n                      >\r\n                        {\" \"}\r\n                        <span>Collect</span>{\" \"}\r\n                      </a>{\" \"}\r\n                      <a\r\n                        aria-controls=\"nav-contact\"\r\n                        aria-selected=\"false\"\r\n                        className=\"nav-item nav-link\"\r\n                        data-toggle=\"tab\"\r\n                        href=\"https://thehoneyjourney.com/#nav-contact\"\r\n                        id=\"nav-contact-tab\"\r\n                        role=\"tab\"\r\n                      >\r\n                        {\" \"}\r\n                        <span>Enjoy the taste</span>{\" \"}\r\n                      </a>\r\n                    </div>\r\n                  </nav>\r\n                  <div className=\"tab-content iq-mt-50\" id=\"nav-tabContent\">\r\n                    <div\r\n                      aria-labelledby=\"nav-home-tab\"\r\n                      className=\"tab-pane fade\"\r\n                      id=\"nav-home\"\r\n                      role=\"tabpanel\"\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <img\r\n                            alt=\"#\"\r\n                            className=\"img-fluid\"\r\n                            src=\"/THJ_files/03.png\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-lg-6 align-self-center\">\r\n                          <h3 className=\"iq-tw-6 iq-mb-15\">THJ tokens</h3>\r\n                          <p>Become a player</p>\r\n                          <ul>\r\n                            <li>\r\n                              By stacking your THJ tokens you are allowed to\r\n                              adopt hives in the game;\r\n                            </li>\r\n                            <li>\r\n                              One hive has a minimum of 5,000 THJ required for\r\n                              stacking;\r\n                            </li>\r\n                            <li>\r\n                              NFTs are received only by the adopters/players\r\n                              that have a minimum of one hive in adoption;\r\n                            </li>\r\n                            <li>Number of hives is of course, limited.</li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      aria-labelledby=\"nav-profile-tab\"\r\n                      className=\"tab-pane fade  show active\"\r\n                      id=\"nav-profile\"\r\n                      role=\"tabpanel\"\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <img\r\n                            alt=\"#\"\r\n                            className=\"img-fluid\"\r\n                            src=\"/THJ_files/03.png\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-lg-6 align-self-center\">\r\n                          <h3 className=\"iq-tw-6 iq-mb-15\">\r\n                            A game for blockchain &amp; NFT lovers\r\n                          </h3>\r\n                          <p>\r\n                            Open the Portal to the metaverse. Enter the Apiary\r\n                            and choose your hives for adoption.\r\n                          </p>\r\n                          <p>\r\n                            Adopt the hives by stacking your THJ tokens. Get\r\n                            your beekeeping suite (avatar) and start the game!\r\n                          </p>\r\n                          <ul>\r\n                            <li>\r\n                              Play to complete the tasks and take care of the\r\n                              bees, fight to protect the hive and much more, all\r\n                              while learning about bee life and beekeeping, to\r\n                              earn NFTs.\r\n                            </li>\r\n                            <li>&nbsp;</li>\r\n                            <li>\r\n                              Play, save the bees, save the world, get profits\r\n                              and have fun!\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      aria-labelledby=\"nav-app-tab\"\r\n                      className=\"tab-pane fade\"\r\n                      id=\"nav-app\"\r\n                      role=\"tabpanel\"\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <img\r\n                            alt=\"#\"\r\n                            className=\"img-fluid\"\r\n                            src=\"/THJ_files/03.png\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-lg-6 align-self-center\">\r\n                          <h3 className=\"iq-tw-6 iq-mb-15\">NFTs every month</h3>\r\n                          <p>\r\n                            Starting from a single hive, all adoption programs\r\n                            have rewards for the players.\r\n                          </p>\r\n                          <ul>\r\n                            <li>\r\n                              At the end of every gaming cycle or level achieved\r\n                              (approx. 4 weeks in the metaverse or one month in\r\n                              real life), players get rewarded with honey NFTs.{\" \"}\r\n                            </li>\r\n                            <li>\r\n                              Every user has full ownership of the tokens and\r\n                              the rewards (unique NFTs) so adopters may use them\r\n                              any way they want to.\r\n                            </li>\r\n                            <li>Play and earn is fun! </li>\r\n                            <li>Collect the rewards!</li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      aria-labelledby=\"nav-token-tab\"\r\n                      className=\"tab-pane fade\"\r\n                      id=\"nav-token\"\r\n                      role=\"tabpanel\"\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <img\r\n                            alt=\"#\"\r\n                            className=\"img-fluid\"\r\n                            src=\"/THJ_files/03.png\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-lg-6 align-self-center\">\r\n                          <h3 className=\"iq-tw-6 iq-mb-15\">NFTs are unique</h3>\r\n                          <p>\r\n                            Adopters have their own accounts they can login to\r\n                            and manage the stacking and rewards system.\r\n                          </p>\r\n                          <ul>\r\n                            <li>\r\n                              Simply login to your account, go to the{\" \"}\r\n                              <em>Withdraw</em> _section and get your NFT!\r\n                            </li>\r\n                            <li>\r\n                              Easy to collect, NFTs are generated every month\r\n                              for every hive in adoption.\r\n                            </li>\r\n                            <li>\r\n                              <em>\r\n                                Honey NFTs are diferentiated by special\r\n                                collections: types of honey (flower/pollen\r\n                                diversity), quantity of honey (type of jar),\r\n                                very rare honey (flower/pollen diversity) and\r\n                                others\r\n                              </em>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      aria-labelledby=\"nav-contact-tab\"\r\n                      className=\"tab-pane fade\"\r\n                      id=\"nav-contact\"\r\n                      role=\"tabpanel\"\r\n                    >\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <img\r\n                            alt=\"#\"\r\n                            className=\"img-fluid\"\r\n                            src=\"/THJ_files/03.png\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-lg-6 align-self-center\">\r\n                          <h3 className=\"iq-tw-6 iq-mb-15\">\r\n                            Real honey for real players\r\n                          </h3>\r\n                          <p>\r\n                            Request the transfer of the NFT from the metaverse\r\n                            to real life and withdraw real honey from our\r\n                            apiaries as the owner of the NFT (*shipping and\r\n                            packaging is paid separately).\r\n                          </p>\r\n                          <ul>\r\n                            <li>\r\n                              The price and cost of honey is constantly\r\n                              increasing worldwide, so this is a long term\r\n                              increasing asset.\r\n                            </li>\r\n                            <li>\r\n                              You can sell the NFTs on any MARKETPLACE built\r\n                              outside or inside the metaverse. You can also\r\n                              check any Thehoneyjourney NFTs to see if they have\r\n                              honey attached to them and if it can be withdrawn\r\n                              to a physical address, from Thehoneyjourney\r\n                              platform (*you don’t need an account to use our\r\n                              NFT checker as you might not be an adopter but\r\n                              still want to purchase one of Thehoneyjourney\r\n                              NFTs)\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Tranding Platform END */}\r\n        {/* Product Description */}\r\n        <section\r\n          className=\"iq-product-description overview-block-pt\"\r\n          id=\"product\"\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"heading-title\">\r\n                  <small className=\"iq-font-green\">\r\n                    Thehoneyjourney play and earn\r\n                  </small>\r\n                  <h2 className=\"title iq-tw-6\">Our product</h2>\r\n                  <p>\r\n                    Bee stings don’t hurt in the metaverse but generate NFTs\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row iq-mt-100\">\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"iq-fancy-box text-sm-center\">\r\n                  <div className=\"fancy-icon\">\r\n                    <img alt=\"\" className=\"img-fluid\" src=\"/THJ_files/1.png\" />\r\n                  </div>\r\n                  <div className=\"fancy-content\">\r\n                    <h5 className=\"iq-tw-7\">Earn NFTs</h5>\r\n                    <p>\r\n                      Easy manage your adopted hives from anywhere, either you\r\n                      are an adopter or a beekeeper. Every hive produce one NFT\r\n                      every month.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"iq-fancy-box text-sm-center\">\r\n                  <div className=\"fancy-icon\">\r\n                    <img alt=\"\" className=\"img-fluid\" src=\"/THJ_files/2.png\" />\r\n                  </div>\r\n                  <div className=\"fancy-content\">\r\n                    <h5 className=\"iq-tw-7\">Why blockchain</h5>\r\n                    <p>\r\n                      We use the blockchain technology to keep a transparent\r\n                      ledger of our activity and a safe way to ensure adopters\r\n                      are receiving their NFT rewards.{\" \"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"iq-fancy-box text-sm-center\">\r\n                  <div className=\"fancy-icon\">\r\n                    <img alt=\"\" className=\"img-fluid\" src=\"/THJ_files/3.png\" />\r\n                  </div>\r\n                  <div className=\"fancy-content\">\r\n                    <h5 className=\"iq-tw-7\">Staking</h5>\r\n                    <p>\r\n                      Stacking means loyality. Get rewarded for stacking and\r\n                      collect exciting NFTs.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"iq-fancy-box text-sm-center\">\r\n                  <div className=\"fancy-icon\">\r\n                    <img alt=\"\" className=\"img-fluid\" src=\"/THJ_files/4.png\" />\r\n                  </div>\r\n                  <div className=\"fancy-content\">\r\n                    <h5 className=\"iq-tw-7\">Play the game</h5>\r\n                    <p>\r\n                      Interesting and educative, fun to play game! Players get\r\n                      closer to the real beekeeping life and get rewarded with\r\n                      special NFT collections.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"iq-fancy-box text-sm-center\">\r\n                  <div className=\"fancy-icon\">\r\n                    <img alt=\"\" className=\"img-fluid\" src=\"/THJ_files/5.png\" />\r\n                  </div>\r\n                  <div className=\"fancy-content\">\r\n                    <h5 className=\"iq-tw-7\">HODL</h5>\r\n                    <p>\r\n                      All hives available for adoption are in limited supply.\r\n                      Deflationary systems apply for Thehoneyjourney.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"iq-fancy-box text-sm-center\">\r\n                  <div className=\"fancy-icon\">\r\n                    <img alt=\"\" className=\"img-fluid\" src=\"/THJ_files/6.png\" />\r\n                  </div>\r\n                  <div className=\"fancy-content\">\r\n                    <h5 className=\"iq-tw-7\">Value</h5>\r\n                    <p>\r\n                      Use the NFTs to sell on any marketplace or in the future\r\n                      metaverse or even get real honey using our platform to\r\n                      request withdrawal.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Product Description END */}\r\n        {/* Tranding platform */}\r\n        <section\r\n          className=\"iq-Tranding-platform light-bg overview-block-ptb\"\r\n          id=\"token\"\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"heading-title\">\r\n                  <small className=\"iq-font-green\">\r\n                    Distribution, nft economy, metrics\r\n                  </small>\r\n                  <h2 className=\"title iq-tw-6\">THJ Token</h2>\r\n                  <p>\r\n                    Sale will be public. Use your wallet to connect and purchase\r\n                    THJ Tokens.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-bordered\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Token Name:</td>\r\n                        <td>THJ Token (THJ)</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Token Platform:</td>\r\n                        <td>Binance Smart Chain</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Liquidity:</td>\r\n                        <td>20.8 Million</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Max Supply</td>\r\n                        <td>250 Million</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Total hives available:</td>\r\n                        <td>\r\n                          45000\r\n                          <br />\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-bordered\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Seed and private sale price</td>\r\n                        <td>$0.10 /THJ Token</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td> Single hive stacking</td>\r\n                        <td>5000 THJ</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Listing price on Uniswap</td>\r\n                        <td>\r\n                          $0.12\r\n                          <br />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Presale open</td>\r\n                        <td>\r\n                          Whitelist\r\n                          <br />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Public sale not open</td>\r\n                        <td>Will be announced</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-12 iq-mt-60\">\r\n                <div className=\"heading-title\">\r\n                  <h2 className=\"title iq-tw-6\">\r\n                    Our target for the real world beekeepers\r\n                  </h2>\r\n                  <p>\r\n                    From all corners of the world we target beekeepers that can\r\n                    help us expand and mix the technology with farming to gain\r\n                    rewards and take profits while saving the bees and saving\r\n                    the world.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-12\">\r\n                <div\r\n                  id=\"chartdiv\"\r\n                  style={{ overflow: \"visible\", textAlign: \"left\" }}\r\n                >\r\n                  <div\r\n                    className=\"amcharts-main-div\"\r\n                    style={{ position: \"relative\" }}\r\n                  >\r\n                    <div\r\n                      className=\"amcharts-chart-div\"\r\n                      style={{\r\n                        overflow: \"hidden\",\r\n                        position: \"relative\",\r\n                        textAlign: \"left\",\r\n                        width: 1140,\r\n                        height: 500,\r\n                        padding: 0,\r\n                        touchAction: \"auto\",\r\n                      }}\r\n                    >\r\n                      <svg\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          width: 1140,\r\n                          height: 500,\r\n                          top: \"-.0234375px\",\r\n                          left: \"-.5px\",\r\n                        }}\r\n                      >\r\n                        <path\r\n                          d=\"M.5.5h1139v499H.5z\"\r\n                          fill=\"none\"\r\n                          className=\"amcharts-bg\"\r\n                        />\r\n                        <path\r\n                          d=\"M94.5 20.5h1025v424H94.5v-424z\"\r\n                          fill=\"none\"\r\n                          className=\"amcharts-plot-area\"\r\n                        />\r\n                        <path\r\n                          d=\"M59.5 464.5l35-20h1025l-35 20H59.5z\"\r\n                          fill=\"none\"\r\n                          className=\"amcharts-plot-area-bottom\"\r\n                        />\r\n                        <path\r\n                          d=\"M59.5 40.5v424l35-20v-424l-35 20z\"\r\n                          fill=\"none\"\r\n                          className=\"amcharts-plot-area-left\"\r\n                        />\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(7 424)\"\r\n                          aria-label=\"USA 4,025\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#FF0F00\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-379a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1538)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#ff1700\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -388)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(76 424)\"\r\n                          aria-label=\"China 3,882\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#F60\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-366a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1567)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#f90\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -375)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(144 424)\"\r\n                          aria-label=\"Japan 3,509\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#FF9E01\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-331a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1581)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#ffed02\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -340)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(212 424)\"\r\n                          aria-label=\"Germany 3,322\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#FCD202\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-313a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1606)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#ffff03\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -322)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(281 424)\"\r\n                          aria-label=\"UK 2,000\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#F8FF01\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-188a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1651)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#ffff02\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -197)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(349 424)\"\r\n                          aria-label=\"France 2,914\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#B0DE09\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-275a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1682)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#ffff0e\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -284)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(417 424)\"\r\n                          aria-label=\"India 2,500\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#04D215\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-236a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1710)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#06ff20\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -245)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(486 424)\"\r\n                          aria-label=\"Spain 2,411\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#0D8ECF\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-227a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1743)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#14d5ff\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -236)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(554 424)\"\r\n                          aria-label=\"Netherlands 2,265\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#0D52D1\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-213a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1772)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#147bff\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -222)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(622 424)\"\r\n                          aria-label=\"Russia 1,000\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#2A0CD0\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-94a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1791)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#3f12ff\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -103)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(690 424)\"\r\n                          aria-label=\"South Korea 943\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#8A0CCF\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-89a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1812)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#cf12ff\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -98)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(759 424)\"\r\n                          aria-label=\"Canada 841\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#CD0D74\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-79a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1825)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#ff14ae\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -88)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(827 424)\"\r\n                          aria-label=\"Brazil 795\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#754DEB\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-75a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1835)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#b074ff\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -84)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(895 424)\"\r\n                          aria-label=\"Italy 686\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#DDD\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-65a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1844)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#fff\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -74)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g\r\n                          className=\"amcharts-graph-column amcharts-graph-graphAuto0_1642451167712\"\r\n                          transform=\"translate(59 40) translate(964 424)\"\r\n                          aria-label=\"Taiwan 538\"\r\n                        >\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#333\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -10)\"\r\n                            className=\"amcharts-graph-column-bottom amcharts-graph-column-element\"\r\n                          />\r\n                          <path\r\n                            d=\"M0 0v-51a27.5 10 0 0055 0V0A27.5 10 0 010 0\"\r\n                            fill=\"url(#AmChartsEl-1849)\"\r\n                            stroke=\"#F60\"\r\n                            strokeOpacity={0.1}\r\n                            fillOpacity={0.85}\r\n                            transform=\"translate(0 -10)\"\r\n                            className=\"amcharts-graph-column-front amcharts-graph-column-element\"\r\n                          />\r\n                          <ellipse\r\n                            rx={27.5}\r\n                            ry={10}\r\n                            fill=\"#4d4d4d\"\r\n                            stroke=\"#F60\"\r\n                            fillOpacity={0.85}\r\n                            strokeOpacity={0.1}\r\n                            transform=\"translate(28 -60)\"\r\n                            className=\"amcharts-graph-column-top amcharts-graph-column-element\"\r\n                          />\r\n                        </g>\r\n                        <g>\r\n                          <path\r\n                            d=\"M59.5 464.5h1025l35-20\"\r\n                            fill=\"none\"\r\n                            className=\"amcharts-axis-zero-grid-valueAxisAuto0_1642451167711 amcharts-axis-zero-grid\"\r\n                          />\r\n                          <g className=\"amcharts-category-axis\">\r\n                            <path\r\n                              d=\"M59.5 464.5h1025\"\r\n                              fill=\"none\"\r\n                              className=\"amcharts-axis-line\"\r\n                            />\r\n                          </g>\r\n                          <g className=\"amcharts-value-axis value-axis-valueAxisAuto0_1642451167711\">\r\n                            <path\r\n                              d=\"M59.5 40.5v424\"\r\n                              fill=\"none\"\r\n                              className=\"amcharts-axis-line\"\r\n                            />\r\n                          </g>\r\n                        </g>\r\n                        <g />\r\n                        <g>\r\n                          <g className=\"amcharts-category-axis\">\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(34.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"USA\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(103.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"China\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(171.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"Japan\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(239.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"Germany\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(308.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"UK\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(376.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"France\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(444.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"India\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(513.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"Spain\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(581.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"Netherlands\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(649.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"Russia\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(717.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"South Korea\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(786.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"Canada\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(854.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"Brazil\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(922.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"Italy\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"middle\"\r\n                              transform=\"translate(59 40) translate(991.167 441.5)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"Taiwan\"}\r\n                              </tspan>\r\n                            </text>\r\n                          </g>\r\n                          <g className=\"amcharts-value-axis value-axis-valueAxisAuto0_1642451167711\">\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"end\"\r\n                              transform=\"translate(59 40) translate(-12 422.75)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"0\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"end\"\r\n                              transform=\"translate(59 40) translate(-12 375.75)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"500\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"end\"\r\n                              transform=\"translate(59 40) translate(-12 328.75)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"1,000\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"end\"\r\n                              transform=\"translate(59 40) translate(-12 281.75)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"1,500\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"end\"\r\n                              transform=\"translate(59 40) translate(-12 234.75)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"2,000\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"end\"\r\n                              transform=\"translate(59 40) translate(-12 186.75)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"2,500\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"end\"\r\n                              transform=\"translate(59 40) translate(-12 139.75)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"3,000\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"end\"\r\n                              transform=\"translate(59 40) translate(-12 92.75)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"3,500\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"end\"\r\n                              transform=\"translate(59 40) translate(-12 45.75)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"4,000\"}\r\n                              </tspan>\r\n                            </text>\r\n                            <text\r\n                              y={6}\r\n                              fill=\"#fff\"\r\n                              fontFamily=\"Verdana\"\r\n                              fontSize=\"11px\"\r\n                              textAnchor=\"end\"\r\n                              transform=\"translate(59 40) translate(-12 -1.25)\"\r\n                              className=\"amcharts-axis-label\"\r\n                            >\r\n                              <tspan y={6} x={0}>\r\n                                {\"4,500\"}\r\n                              </tspan>\r\n                            </text>\r\n                          </g>\r\n                        </g>\r\n                      </svg>\r\n                      <a\r\n                        href=\"http://www.amcharts.com/\"\r\n                        title=\"JavaScript charts\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          textDecoration: \"none\",\r\n                          color: \"rgb(0, 0, 0)\",\r\n                          fontFamily: \"Verdana\",\r\n                          fontSize: 11,\r\n                          opacity: \"0.7\",\r\n                          display: \"block\",\r\n                          left: 64,\r\n                          top: 45,\r\n                        }}\r\n                      >\r\n                        JS chart by amCharts\r\n                      </a>\r\n                    </div>\r\n                    <div className=\"amcharts-export-menu amcharts-export-menu-top-right amExportButton\">\r\n                      <ul>\r\n                        <li className=\"export-main\">\r\n                          <a href=\"https://thehoneyjourney.com/#\">\r\n                            <span>menu.label.undefined</span>\r\n                          </a>\r\n                          <ul>\r\n                            <li>\r\n                              <a href=\"https://thehoneyjourney.com/#\">\r\n                                <span>Download as ...</span>\r\n                              </a>\r\n                              <ul>\r\n                                <li>\r\n                                  <a href=\"https://thehoneyjourney.com/#\">\r\n                                    <span>PNG</span>\r\n                                  </a>\r\n                                </li>\r\n                                <li>\r\n                                  <a href=\"https://thehoneyjourney.com/#\">\r\n                                    <span>JPG</span>\r\n                                  </a>\r\n                                </li>\r\n                                <li>\r\n                                  <a href=\"https://thehoneyjourney.com/#\">\r\n                                    <span>SVG</span>\r\n                                  </a>\r\n                                </li>\r\n                                <li>\r\n                                  <a href=\"https://thehoneyjourney.com/#\">\r\n                                    <span>PDF</span>\r\n                                  </a>\r\n                                </li>\r\n                              </ul>\r\n                            </li>\r\n                            <li>\r\n                              <a href=\"https://thehoneyjourney.com/#\">\r\n                                <span>Save as ...</span>\r\n                              </a>\r\n                              <ul>\r\n                                <li>\r\n                                  <a href=\"https://thehoneyjourney.com/#\">\r\n                                    <span>CSV</span>\r\n                                  </a>\r\n                                </li>\r\n                                <li>\r\n                                  <a href=\"https://thehoneyjourney.com/#\">\r\n                                    <span>XLSX</span>\r\n                                  </a>\r\n                                </li>\r\n                                <li>\r\n                                  <a href=\"https://thehoneyjourney.com/#\">\r\n                                    <span>JSON</span>\r\n                                  </a>\r\n                                </li>\r\n                              </ul>\r\n                            </li>\r\n                            <li>\r\n                              <a href=\"https://thehoneyjourney.com/#\">\r\n                                <span>Annotate ...</span>\r\n                              </a>\r\n                            </li>\r\n                            <li>\r\n                              <a href=\"https://thehoneyjourney.com/#\">\r\n                                <span>Print</span>\r\n                              </a>\r\n                            </li>\r\n                          </ul>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Tranding platform END */}\r\n        {/* Token Sale Timeline */}\r\n        <section\r\n          className=\"iq-timeline iq-bg-over overview-block-ptb\"\r\n          id=\"road\"\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"heading-title\">\r\n                  <small className=\"iq-font-green\">PROCESS</small>\r\n                  <h2 className=\"title iq-tw-6\">Thehoneyjourney Roadmap</h2>\r\n                  <p>\r\n                    Because our project is to implement the Play and Earn system\r\n                    into the mission to multiply the number of the bees around\r\n                    the world, we designed this implementation of blockchain to\r\n                    be ready to work in any future metaverse. We already started\r\n                    and we currently deliver honey to all of our adopters, all\r\n                    around the world. Check the roadmap in the whitepaper.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div\r\n                  className=\"timeline timeline--loaded timeline--horizontal\"\r\n                  style={{ opacity: 1 }}\r\n                >\r\n                  <div className=\"timeline__wrap\">\r\n                    <div\r\n                      className=\"timeline__items\"\r\n                      style={{\r\n                        width: 2080,\r\n                        height: 1544,\r\n                        transform: \"translate3d(0px, 0px, 0px)\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        className=\"timeline__item timeline__item--top\"\r\n                        style={{ width: 260, height: 772 }}\r\n                      >\r\n                        <div className=\"timeline__item__inner\">\r\n                          <div className=\"timeline__content__wrap\">\r\n                            <div className=\"timeline__content\">\r\n                              <h2>2025</h2>\r\n                              <p>Locked value for current adopters;</p>\r\n                              <p>\r\n                                Liquidity remains locked for an undetermined\r\n                                period of time;\r\n                              </p>\r\n                              <p>\r\n                                Give adopters more power to express themselves\r\n                                in the platform outside and inside the\r\n                                metaverse;\r\n                              </p>\r\n                              <p>\r\n                                Preparing the mobile app architecture for\r\n                                continuous adaptation capacity;\r\n                              </p>\r\n                              <p>\r\n                                Upgrading the strategies for the THJ honey jars\r\n                                NFT marketplace;\r\n                              </p>\r\n                              <p>\r\n                                Launching the complete gaming environment to\r\n                                allow beekeepers and honey consumers all over\r\n                                the world to connect and interact freely;\r\n                              </p>\r\n                              <p>\r\n                                Finalizing the latest blockchain integrations to\r\n                                reduce costs, ensure transparency and security\r\n                                for all users;\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className=\"timeline__item timeline__item--bottom\"\r\n                        style={{\r\n                          width: 260,\r\n                          height: 772,\r\n                          transform: \"translateY(772px)\",\r\n                        }}\r\n                      >\r\n                        <div className=\"timeline__item__inner\">\r\n                          <div className=\"timeline__content__wrap\">\r\n                            <div className=\"timeline__content\">\r\n                              <h2>2024</h2>\r\n                              <p>\r\n                                Targeting the next phase of development for\r\n                                immersive Metaverse experience of\r\n                                Thehoneyjourney;\r\n                              </p>\r\n                              <p>\r\n                                Preparing the experiences adopters have in the\r\n                                Metaverse;\r\n                              </p>\r\n                              <p>\r\n                                Expanding the options for the blockchain\r\n                                networks with bridges and inter-operativity;\r\n                              </p>\r\n                              <p>\r\n                                Launching the final set of rules in the gaming\r\n                                design and functionality;\r\n                              </p>\r\n                              <p>\r\n                                Preparing the creative economy inside the\r\n                                platform;\r\n                              </p>\r\n                              <p>\r\n                                Evaluating the technology that needs to be\r\n                                invented;\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className=\"timeline__item timeline__item--top\"\r\n                        style={{ width: 260, height: 772 }}\r\n                      >\r\n                        <div className=\"timeline__item__inner\">\r\n                          <div className=\"timeline__content__wrap\">\r\n                            <div className=\"timeline__content\">\r\n                              <h2>2023</h2>\r\n                              <p>\r\n                                Recruiting and expanding the basics of\r\n                                organization to continue to adapt the project;\r\n                              </p>\r\n                              <p>\r\n                                Launching the honey hubs in Germany and\r\n                                Netherlands;\r\n                              </p>\r\n                              <p>\r\n                                Preparing our own mobile laboratory for honey\r\n                                testing;\r\n                              </p>\r\n                              <p>\r\n                                Launching the education programs and grants for\r\n                                beekeepers;\r\n                              </p>\r\n                              <p>\r\n                                Preparing the platform’s new features for\r\n                                adopters, gamers and users;\r\n                              </p>\r\n                              <p>Launching the branded honey jar product;</p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className=\"timeline__item timeline__item--bottom\"\r\n                        style={{\r\n                          width: 260,\r\n                          height: 772,\r\n                          transform: \"translateY(772px)\",\r\n                        }}\r\n                      >\r\n                        <div className=\"timeline__item__inner\">\r\n                          <div className=\"timeline__content__wrap\">\r\n                            <div className=\"timeline__content\">\r\n                              <h2>2022</h2>\r\n                              <p>\r\n                                Public sale for THJ token and accepting new\r\n                                adopters in the gamified system of beekeeping;\r\n                              </p>\r\n                              <p>\r\n                                Preparing the Thehoneyjourney game rules and\r\n                                decentralized operations for THJ adopters;\r\n                              </p>\r\n                              <p>\r\n                                Preparing the NFTs rewards system with the new\r\n                                platform for honey withdrawal;\r\n                              </p>\r\n                              <p>\r\n                                Setting the project ready to upgrade to\r\n                                metaverse worlds when possible technologies\r\n                                emerge;\r\n                              </p>\r\n                              <p>\r\n                                Launching the Play to Earn concept into\r\n                                practical use in the THJ ecosystem;\r\n                              </p>\r\n                              <p>\r\n                                Launching bonus NFTs collection for 2021 presale\r\n                                participants;\r\n                              </p>\r\n                              <p>\r\n                                Launching special NFTs collection for 2022\r\n                                public participants;\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className=\"timeline__item timeline__item--top\"\r\n                        style={{ width: 260, height: 772 }}\r\n                      >\r\n                        <div className=\"timeline__item__inner\">\r\n                          <div className=\"timeline__content__wrap\">\r\n                            <div className=\"timeline__content\">\r\n                              <h2>2021</h2>\r\n                              <p>\r\n                                Targeting and recruiting for the next phase of\r\n                                development with the architecture ready to\r\n                                embrace the implementation of blockchain\r\n                                technologies into the current operations;\r\n                              </p>\r\n                              <p>\r\n                                The tokenomics and initiating strategic\r\n                                partnerships to upgrade the production systems\r\n                                and designs;\r\n                              </p>\r\n                              <p>\r\n                                Tests from various laboratories and official\r\n                                medical certificates to reiterate the top\r\n                                quality honey products;\r\n                              </p>\r\n                              <p>Various awards.</p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className=\"timeline__item timeline__item--bottom\"\r\n                        style={{\r\n                          width: 260,\r\n                          height: 772,\r\n                          transform: \"translateY(772px)\",\r\n                        }}\r\n                      >\r\n                        <div className=\"timeline__item__inner\">\r\n                          <div className=\"timeline__content__wrap\">\r\n                            <div className=\"timeline__content\">\r\n                              <h2>2020</h2>\r\n                              <p>\r\n                                Scaling continues with more hives, apiaries and\r\n                                affiliations for helping more bee families\r\n                                survive and thrive and adding various honey\r\n                                types and flavors with expanding the potential\r\n                                for our products for our clients, customers and\r\n                                adopters\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className=\"timeline__item timeline__item--top\"\r\n                        style={{ width: 260, height: 772 }}\r\n                      >\r\n                        <div className=\"timeline__item__inner\">\r\n                          <div className=\"timeline__content__wrap\">\r\n                            <div className=\"timeline__content\">\r\n                              <h2>2019</h2>\r\n                              <p>\r\n                                Double the number of beehives by designing new\r\n                                architectures for beekeeping operations and\r\n                                getting the license to work with bees for\r\n                                commercial purposes;\r\n                              </p>\r\n                              <p>\r\n                                Started accepting crypto payments for adoption\r\n                                programs through payment processors\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className=\"timeline__item timeline__item--bottom\"\r\n                        style={{\r\n                          width: 260,\r\n                          height: 772,\r\n                          transform: \"translateY(772px)\",\r\n                        }}\r\n                      >\r\n                        <div className=\"timeline__item__inner\">\r\n                          <div className=\"timeline__content__wrap\">\r\n                            <div className=\"timeline__content\">\r\n                              <h2>2018&nbsp;</h2>\r\n                              <p>\r\n                                Planted first real beehives and started\r\n                                beekeeping with Alpha and Beta colonies (over\r\n                                100 hives)\r\n                              </p>\r\n                              <p />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    className=\"timeline-nav-button timeline-nav-button--prev\"\r\n                    style={{ top: 772 }}\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                  <button\r\n                    className=\"timeline-nav-button timeline-nav-button--next\"\r\n                    style={{ top: 772 }}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                  <span className=\"timeline-divider\" style={{ top: 772 }} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Token Sale Timeline */}\r\n        {/* Team */}\r\n        <section className=\"iq-team overview-block-pb\" id=\"team\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"heading-title\">\r\n                  <small className=\"iq-font-green\">Executive Team</small>\r\n                  <h2 className=\"title iq-tw-6\">Members</h2>\r\n                  <p>\r\n                    We currently work with many beekeepers to make sure the bee\r\n                    families are taken very good care of and to diversify the\r\n                    locations of the bees for a better risk spread and a various\r\n                    honey flavours from all the different plants.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 col-md-6\">\r\n                <div className=\"our-team\">\r\n                  <div className=\"team-image\">\r\n                    <img alt=\"#\" src=\"/THJ_files/01.jpg\" />\r\n                    <ul className=\"social\">\r\n                      <li />\r\n                      <li />\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"team-content\">\r\n                    <h5 className=\"title iq-tw-7\">Ciprian</h5>\r\n                    <small className=\"iq-mt-5 d-block iq-mb-10 iq-font-yellow\">\r\n                      COO &amp; Partner\r\n                    </small>\r\n                    <p className=\"description\">\r\n                      Beekeeper with a strong passion for blockchain. Co-founder\r\n                      of The Honey Journey adoption program.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 r4-mt-40 \">\r\n                <div className=\"our-team\">\r\n                  <div className=\"team-image\">\r\n                    <img alt=\"#\" src=\"/THJ_files/02.jpg\" />\r\n                    <ul className=\"social\">\r\n                      <li />\r\n                      <li />\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"team-content\">\r\n                    <h5 className=\"title iq-tw-7\">Goldman</h5>\r\n                    <small className=\"iq-mt-5 d-block iq-mb-10 iq-font-yellow\">\r\n                      CBO &amp; Partner\r\n                    </small>\r\n                    <p className=\"description\">\r\n                      Beekeeper with a strong passion for trading. Co-founder of\r\n                      The Honey Journey adoption program.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 r4-mt-40 \">\r\n                <div className=\"our-team\">\r\n                  <div className=\"team-image\">\r\n                    <img alt=\"#\" src=\"/THJ_files/03.jpg\" />\r\n                    <ul className=\"social\">\r\n                      <li />\r\n                      <li />\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"team-content\">\r\n                    <h5 className=\"title iq-tw-7\">Pierre</h5>\r\n                    <small className=\"iq-mt-5 d-block iq-mb-10 iq-font-yellow\">\r\n                      Strategy &amp; intelligence\r\n                    </small>\r\n                    <p className=\"description\">\r\n                      Bees and honey lover with vast experience in marketing\r\n                      strategy and intelligence.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 r4-mt-40\">\r\n                <div className=\"our-team\">\r\n                  <div className=\"team-image\">\r\n                    <img alt=\"#\" src=\"/THJ_files/04.jpg\" />\r\n                    <ul className=\"social\">\r\n                      <li />\r\n                      <li />\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"team-content\">\r\n                    <h5 className=\"title iq-tw-7\">Jack</h5>\r\n                    <small className=\"iq-mt-5 d-block iq-mb-10 iq-font-yellow\">\r\n                      PR &amp; communication\r\n                    </small>\r\n                    <p className=\"description\">\r\n                      Experienced advisor for top blockchain projects,\r\n                      passionate for bees and saving the world.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row iq-mt-60\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"heading-title\">\r\n                  <h2 className=\"title iq-tw-6\">Executive Advisor</h2>\r\n                  <p>\r\n                    We are constantly looking for talented advisors to expand\r\n                    our executive advisor section and further grow the business.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-4\">\r\n                <div className=\"our-team\">\r\n                  <div className=\"team-image\">\r\n                    <img alt=\"#\" src=\"/THJ_files/05.jpg\" />\r\n                    <ul className=\"social\">\r\n                      <li />\r\n                      <li />\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"team-content\">\r\n                    <h5 className=\"title iq-tw-7\">Anna</h5>\r\n                    <small className=\"iq-mt-5 d-block iq-mb-10 iq-font-yellow\">\r\n                      Consultant on Education\r\n                    </small>\r\n                    <p className=\"description\">\r\n                      Helping to disseminate information about the importance of\r\n                      the bees around the world.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-4 r4-mt-40 \">\r\n                <div className=\"our-team\">\r\n                  <div className=\"team-image\">\r\n                    <img alt=\"#\" src=\"/THJ_files/06.jpg\" />\r\n                    <ul className=\"social\">\r\n                      <li />\r\n                      <li />\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"team-content\">\r\n                    <h5 className=\"title iq-tw-7\">Vlad</h5>\r\n                    <small className=\"iq-mt-5 d-block iq-mb-10 iq-font-yellow\">\r\n                      Blockchain &amp; Programming\r\n                    </small>\r\n                    <p className=\"description\">\r\n                      Helping to build and deploy the smart contracts and\r\n                      integration with website.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-4 r4-mt-40 \">\r\n                <div className=\"our-team\">\r\n                  <div className=\"team-image\">\r\n                    <img alt=\"#\" src=\"/THJ_files/07.jpg\" />\r\n                    <ul className=\"social\">\r\n                      <li />\r\n                      <li />\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"team-content\">\r\n                    <h5 className=\"title iq-tw-7\">Adrian</h5>\r\n                    <small className=\"iq-mt-5 d-block iq-mb-10 iq-font-yellow\">\r\n                      E.U. Consultant\r\n                    </small>\r\n                    <p className=\"description\">\r\n                      Helping with funds covered by the E.U. through special\r\n                      programs and opportunities.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Team END */}\r\n        {/* PARTNERS */}\r\n        <section className=\"iq-partners overview-block-pb\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"heading-title\">\r\n                  <small className=\"iq-font-green\">Executive Partners</small>\r\n                  <h2 className=\"title iq-tw-6\">Partners &amp; Supporters</h2>\r\n                  <p>\r\n                    Partner list is constantly growing and expanding. We agree\r\n                    to work with local partners to sustain apiaries on various\r\n                    corners of the world. We also develop Honey Hubs through our\r\n                    partners and associates to expand the reach of our product.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/01.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/02(1).png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/03(1).png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/04.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/05.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/06.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/06.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/05.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/04.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/05.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/06.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2 col-md-4 col-6\">\r\n                <div className=\"Signal-partners\">\r\n                  <img\r\n                    alt=\"#\"\r\n                    className=\"img-fluid center-block\"\r\n                    src=\"/THJ_files/01.png\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* PARTNERS END */}\r\n        {/* FAQ */}\r\n        <section className=\"iq-anything overview-block-pb\" id=\"faq\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"heading-title\">\r\n                  <small className=\"iq-font-green\">Ask Anything</small>\r\n                  <h2 className=\"title iq-tw-6\">Frequently Asked Questions</h2>\r\n                  <p>Questions we constantly get, mostly from new adopters.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6 align-self-center\">\r\n                <iframe\r\n                  allow=\"autoplay; encrypted-media\"\r\n                  className=\"anything-video\"\r\n                  src=\"/THJ_files/f6mJ7e5YmnE.html\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-6 r9-mt-40\">\r\n                <div className=\"iq-accordion\">\r\n                  <div className=\"iq-ad-block ad-active\">\r\n                    <a\r\n                      className=\"ad-title iq-tw-6\"\r\n                      href=\"javascript:void(0)\"\r\n                      style={{}}\r\n                    >\r\n                      Do I receive real honey for stacking THJ Tokens?\r\n                    </a>\r\n                    <div className=\"ad-details\" style={{ display: \"block\" }}>\r\n                      <p>\r\n                        Yes. We unite the digital with the real world by\r\n                        providing real pure honey made by the bees, for every\r\n                        hive our adopters are stacking THJ Tokens.\r\n                      </p>\r\n                      <p>\r\n                        {\" \"}\r\n                        Example: for stacking 50,000 THJ Tokens your reward is\r\n                        1Kg of real honey every month.\r\n                      </p>{\" \"}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"iq-ad-block\">\r\n                    <a className=\"ad-title iq-tw-6\" href=\"javascript:void(0)\">\r\n                      Is there an annual maintenance fee?\r\n                    </a>\r\n                    <div className=\"ad-details\" style={{ display: \"none\" }}>\r\n                      Yes but optional. All the adopters can continue after the\r\n                      2nd year of adoption with a small fee of only € 55 per\r\n                      year, ensuring to keep the hives protected and well taken\r\n                      care of, keeping their adopter privilege and continue to\r\n                      receive top quality honey.\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"iq-ad-block\">\r\n                    <a className=\"ad-title iq-tw-6\" href=\"javascript:void(0)\">\r\n                      Is the honey tested?\r\n                    </a>\r\n                    <div className=\"ad-details\" style={{ display: \"none\" }}>\r\n                      Yes, all our honey is tested in more than one laboratory\r\n                      on a constant basis, for a better quality check. We can\r\n                      also provide the medical and export certificates if\r\n                      requested when delivering the product to our THJ adopters.\r\n                      Our product is top quality, rare, pure and organic raw\r\n                      honey, directly from the hive.\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"iq-ad-block\">\r\n                    <a className=\"ad-title iq-tw-6\" href=\"javascript:void(0)\">\r\n                      How much it costs to withdraw honey?\r\n                    </a>\r\n                    <div className=\"ad-details\" style={{ display: \"none\" }}>\r\n                      We allow you to use any shipping company you prefer (DHL,\r\n                      FEDEX, ANY), there is no problem with us! Their price\r\n                      usually depends on the volume and weight and the distance.\r\n                      Every adopter pays the shipping and packaging costs.\r\n                      Receiving the honey to your physical address depends on\r\n                      the packaging type and the shipping company of your\r\n                      choosing. We fulfill every order and give the goods to any\r\n                      courier/shipping company you send to pick it up.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* FAQ END */}\r\n        {/* Token Sale Proceeds */}\r\n        <section className=\"contact-us overview-block-pt\" id=\"contact-us\">\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-lg-6\">\r\n                <form id=\"contact\" method=\"post\">\r\n                  <div className=\"heading-title left\">\r\n                    <small className=\"iq-font-green\">Contact With Us</small>\r\n                    <h2 className=\"title iq-tw-6\">Email Thehoneyjourney</h2>\r\n                  </div>\r\n                  <p className=\"iq-mb-30\">Writhe us a direct message.</p>\r\n                  <div className=\"contact-form\">\r\n                    <div className=\"section-field\">\r\n                      <input\r\n                        className=\"require\"\r\n                        id=\"contact_name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Name*\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"section-field\">\r\n                      <input\r\n                        className=\"require\"\r\n                        id=\"contact_email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email*\"\r\n                        type=\"email\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"section-field\">\r\n                      <input\r\n                        className=\"require\"\r\n                        id=\"contact_phone\"\r\n                        name=\"phone\"\r\n                        placeholder=\"Phone*\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"section-field textarea\">\r\n                      <textarea\r\n                        className=\"input-message require\"\r\n                        id=\"contact_message\"\r\n                        name=\"message\"\r\n                        placeholder=\"Comment*\"\r\n                        rows={5}\r\n                        defaultValue={\"\"}\r\n                      />\r\n                    </div>\r\n                    <div className=\"section-field iq-mt-20\">\r\n                      <div\r\n                        className=\"g-recaptcha\"\r\n                        data-sitekey=\"6Lc5XV4UAAAAAJzUmGomye9Peru8lXyzT22FH0lX\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-block text-center\">\r\n                      <button\r\n                        className=\"button iq-mt-15\"\r\n                        id=\"submit\"\r\n                        name=\"submit\"\r\n                        type=\"submit\"\r\n                        value=\"Send\"\r\n                      >\r\n                        Send Message\r\n                      </button>\r\n                    </div>\r\n                    <div\r\n                      className=\"alert alert-success alert-dismissible fade show\"\r\n                      id=\"success\"\r\n                      role=\"alert\"\r\n                    >\r\n                      <strong>\r\n                        Thank You, Your message has been received.\r\n                      </strong>\r\n                      .\r\n                      <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        type=\"button\"\r\n                      >\r\n                        <span aria-hidden=\"true\">×</span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div className=\"col-lg-6 iq-pl-50\">\r\n                <div className=\"heading-title left iq-mt-30\">\r\n                  <small className=\"iq-font-green\">Contact in person</small>\r\n                  <h2 className=\"title iq-tw-6\">Address</h2>\r\n                </div>\r\n                <p>\r\n                  Our honey hubs are located in Netherlands, Germany and\r\n                  Swizerland and apiaries are in Serbia and Romania. We are\r\n                  constantly expanding our honey hubs and our apiaries.\r\n                </p>\r\n                <div className=\"iq-contact-box-01 iq-mt-40\">\r\n                  <div className=\"iq-icon yellow-bg\" />\r\n                  <div className=\"contact-content\">\r\n                    <h5 className=\"iq-tw-7\">Apiary</h5>\r\n                    <span className=\"lead\">\r\n                      Located near Timisoara in Timis county\r\n                      <br />\r\n                      Abundant melliferic area\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"iq-contact-box-01 iq-mt-40\">\r\n                  <div className=\"iq-icon yellow-bg\" />\r\n                  <div className=\"contact-content\">\r\n                    <h5 className=\"iq-tw-6\">Phone</h5>\r\n                    <span className=\"lead iq-tw-6\">+40762000010</span>\r\n                    <p className=\"iq-mb-0\">Mon-Fri 8:00am - 8:00pm GMT+2</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"iq-contact-box-01 iq-mt-40\">\r\n                  <div className=\"iq-icon yellow-bg\" />\r\n                  <div className=\"contact-content\">\r\n                    <h5 className=\"iq-tw-6\">Mail</h5>\r\n                    <span className=\"lead iq-tw-6\">\r\n                      inbox@thehoneyjourney.com\r\n                    </span>\r\n                    <p className=\"iq-mb-0\">online support</p>\r\n                  </div>\r\n                </div>\r\n                <ul className=\"info-share\">\r\n                  <li />\r\n                  <li />\r\n                  <li />\r\n                  <li />\r\n                  <li />\r\n                  <li />\r\n                  <li />\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"copyright-box text-center iq-bg-over iq-over-black-20 text-center iq-ptb-20 iq-mt-100\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                  <div className=\"iq-copyright iq-font-white\">\r\n                    © Copyright 2021 THJ by{\" \"}\r\n                    <a href=\"https://thehoneyjourney.com/\">Thehoneyjourney.</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {/* Token Sale Proceeds END */}\r\n        {/* back-to-top */}\r\n        <div id=\"back-to-top\" style={{ display: \"block\" }} />\r\n        {/* back-to-top End */}\r\n        {/* bubbly */}\r\n        <p>\r\n          {/* <canvas id=\"canvas1\" width={1386} height={861} />  */}\r\n          {/* bubbly End */} {/* Optional JavaScript */}{\" \"}\r\n          {/* jQuery first, then Popper.js, then Bootstrap JS */}{\" \"}\r\n          {/* popper JavaScript */} {/* Bootstrap JavaScript */}{\" \"}\r\n          {/* All-plugins JavaScript */} {/* timeline JavaScript */}{\" \"}\r\n          {/* wave JavaScript */} {/* bubbly JavaScript */} {/* amcharts */}{\" \"}\r\n          {/* Custom JavaScript */}{\" \"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FunTemplate;\r\n","import React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport { dAppName } from \"config\";\r\nimport withPageTitle from \"./components/PageTitle\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Home from \"./pages/Home\";\r\nimport Transaction from \"./pages/Transaction\";\r\nimport CreateNfc from \"./pages/CreateNfc\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Fun123 from \"./pages/Fun\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport ListPage from \"./components/Layout/ListPage\";\r\n\r\ntype RouteType = Dapp.RouteType & { title: string };\r\n\r\nexport const routeNames = {\r\n  home: \"/\",\r\n  login: \"/login\",\r\n  dashboard: \"/dashboard\",\r\n  transaction: \"/transaction\",\r\n  unlock: \"/unlock\",\r\n  ledger: \"/ledger\",\r\n  walletconnect: \"/walletconnect\",\r\n  createArt: \"/createArt\",\r\n  fun123: \"/fun123\",\r\n};\r\n\r\nconst routes: RouteType[] = [\r\n  // {\r\n  //   path: \"/\",\r\n  //   title: \"Home\",\r\n  //   component: ListPage,\r\n  // },\r\n  {\r\n    path: \"/login\",\r\n    title: \"Login\",\r\n    component: Home,\r\n  },\r\n  {\r\n    path: \"/dashboard\",\r\n    title: \"Dashboard\",\r\n    component: Dashboard,\r\n    authenticatedRoute: true,\r\n  },\r\n  {\r\n    path: \"/transaction\",\r\n    title: \"Transaction\",\r\n    component: Transaction,\r\n  },\r\n  {\r\n    path: \"/createArt\",\r\n    title: \"Create Art\",\r\n    component: CreateNfc,\r\n  },\r\n  {\r\n    path: \"/contact\",\r\n    title: \"Contact\",\r\n    component: Contact,\r\n  },\r\n  {\r\n    // path: \"/fun123\",\r\n    path: \"/\",\r\n    title: \"Fun123\",\r\n    component: Fun123,\r\n  },\r\n];\r\n\r\nconst wrappedRoutes = () =>\r\n  routes.map((route) => {\r\n    const title = route.title\r\n      ? `${route.title} • Elrond ${dAppName}`\r\n      : `Elrond ${dAppName}`;\r\n    return {\r\n      path: route.path,\r\n      authenticatedRoute: Boolean(route.authenticatedRoute),\r\n      component: withPageTitle(\r\n        title,\r\n        route.component,\r\n      ) as any as React.ComponentClass<any, any>,\r\n    };\r\n  });\r\n\r\nexport default wrappedRoutes();\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { contractAddress } from \"config\";\r\nimport FunTemplate from \"./FunTemplate\";\r\n\r\nconst Fun123 = () => {\r\n  return (\r\n    <>\r\n      <FunTemplate>\r\n        <div />\r\n      </FunTemplate>\r\n    </>\r\n  );\r\n};\r\nexport default Fun123;\r\n","import * as React from \"react\";\r\nimport * as Dapp from \"@elrondnetwork/dapp\";\r\nimport {\r\n  Address,\r\n  AddressValue,\r\n  ContractFunction,\r\n  Query,\r\n} from \"@elrondnetwork/erdjs\";\r\nimport { faArrowUp, faArrowDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport moment from \"moment\";\r\nimport { contractAddress } from \"config\";\r\nimport { RawTransactionType } from \"helpers/types\";\r\nimport useNewTransaction from \"pages/Transaction/useNewTransaction\";\r\nimport { routeNames } from \"routes\";\r\n\r\nconst Actions = () => {\r\n  const sendTransaction = Dapp.useSendTransaction();\r\n  const { address, dapp } = Dapp.useContext();\r\n  const newTransaction = useNewTransaction();\r\n  const [secondsLeft, setSecondsLeft] = React.useState<number>();\r\n  const [hasPing, setHasPing] = React.useState<boolean>();\r\n\r\n  const mount = () => {\r\n    if (secondsLeft) {\r\n      const interval = setInterval(() => {\r\n        setSecondsLeft((existing) => {\r\n          if (existing) {\r\n            return existing - 1;\r\n          } else {\r\n            clearInterval(interval);\r\n            return 0;\r\n          }\r\n        });\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  React.useEffect(mount, [hasPing]);\r\n\r\n  React.useEffect(() => {\r\n    const query = new Query({\r\n      address: new Address(contractAddress),\r\n      func: new ContractFunction(\"getTimeToPong\"),\r\n      args: [new AddressValue(new Address(address))],\r\n    });\r\n    dapp.proxy\r\n      .queryContract(query)\r\n      .then(({ returnData }) => {\r\n        const [encoded] = returnData;\r\n        switch (encoded) {\r\n          case undefined:\r\n            setHasPing(true);\r\n            break;\r\n          case \"\":\r\n            setSecondsLeft(0);\r\n            setHasPing(false);\r\n            break;\r\n          default: {\r\n            const decoded = Buffer.from(encoded, \"base64\").toString(\"hex\");\r\n            setSecondsLeft(parseInt(decoded, 16));\r\n            setHasPing(false);\r\n            break;\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Unable to call VM query\", err);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const send = (transaction: RawTransactionType) => (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    sendTransaction({\r\n      transaction: newTransaction(transaction),\r\n      callbackRoute: routeNames.transaction,\r\n    });\r\n  };\r\n\r\n  const pongTransaction: RawTransactionType = {\r\n    receiver: contractAddress,\r\n    data: \"pong\",\r\n    value: \"0\",\r\n    gasLimit: 10000000,\r\n  };\r\n\r\n  const pingTransaction: RawTransactionType = {\r\n    receiver: contractAddress,\r\n    data: \"ping\",\r\n    value: \"1\",\r\n    gasLimit: 10000000,\r\n  };\r\n\r\n  const pongAllowed = secondsLeft === 0;\r\n  const notAllowedClass = pongAllowed ? \"\" : \"not-allowed disabled\";\r\n\r\n  const timeRemaining = moment()\r\n    .startOf(\"day\")\r\n    .seconds(secondsLeft || 0)\r\n    .format(\"mm:ss\");\r\n\r\n  return (\r\n    <div className=\"d-flex mt-4 justify-content-center\">\r\n      {hasPing !== undefined && (\r\n        <>\r\n          {hasPing ? (\r\n            <div className=\"action-btn\" onClick={send(pingTransaction)}>\r\n              <button className=\"btn\">\r\n                <FontAwesomeIcon icon={faArrowUp} className=\"text-primary\" />\r\n              </button>\r\n              <a href=\"/\" className=\"text-white text-decoration-none\">\r\n                Ping\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"d-flex flex-column\">\r\n                <div\r\n                  {...{\r\n                    className: `action-btn ${notAllowedClass}`,\r\n                    ...(pongAllowed ? { onClick: send(pongTransaction) } : {}),\r\n                  }}\r\n                >\r\n                  <button className={`btn ${notAllowedClass}`}>\r\n                    <FontAwesomeIcon\r\n                      icon={faArrowDown}\r\n                      className=\"text-primary\"\r\n                    />\r\n                  </button>\r\n                  <span className=\"text-white\">\r\n                    {pongAllowed ? (\r\n                      <a href=\"/\" className=\"text-white text-decoration-none\">\r\n                        Pong\r\n                      </a>\r\n                    ) : (\r\n                      <>Pong</>\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                {!pongAllowed && (\r\n                  <span className=\"opacity-6 text-white\">\r\n                    {timeRemaining} until able to Pong\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import * as Dapp from \"@elrondnetwork/dapp\";\r\nimport {\r\n  TypedValue,\r\n  Address,\r\n  AddressValue,\r\n  BytesValue,\r\n  BigUIntValue,\r\n  TokenIdentifierValue,\r\n  ContractFunction,\r\n  GasLimit,\r\n  NetworkConfig,\r\n  Query,\r\n} from \"@elrondnetwork/erdjs\";\r\nimport { TokenType, TransactionPayload } from \"@elrondnetwork/erdjs/out\";\r\nimport { BigNumber } from \"bignumber.js\";\r\nimport { NFTToken } from \"@elrondnetwork/erdjs/out/nftToken\";\r\nimport { contractAddress, cfgFrmNft } from \"config\";\r\nimport * as converters from \"helpers/converters\";\r\nimport { RawTransactionType } from \"helpers/types\";\r\nimport moment from \"moment\";\r\nimport useNewTransaction from \"pages/Transaction/useNewTransaction\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport * as React from \"react\";\r\nimport {\r\n  Alert,\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Row,\r\n  InputGroup,\r\n  FormControl,\r\n  Card,\r\n  CardDeck,\r\n} from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { routeNames } from \"routes\";\r\nimport {\r\n  getTransactions,\r\n  getCollections,\r\n  getNftItems,\r\n} from \"../Dashboard/helpers/asyncRequests\";\r\n// import SelectOption from \"../../components/Layout/SelectOption\";\r\nimport crypto from \"crypto\";\r\nimport { config } from \"process\";\r\nimport axios from \"axios\";\r\nimport { create as ipfsHttpClient } from \"ipfs-http-client\";\r\n\r\ninterface NftApiType {\r\n  identifier?: string;\r\n  collection?: string;\r\n  attributes?: string;\r\n  nonce?: 19;\r\n  type?: string;\r\n  name?: string;\r\n  creator?: string;\r\n  royalties?: number;\r\n  url?: string;\r\n  media?: string;\r\n  ticker?: string;\r\n}\r\n\r\nconst styles = {\r\n  // card: {\r\n  //   backgroundColor: \"#B7E0F2\",\r\n  //   borderRadius: 55,\r\n  //   padding: \"3rem\",\r\n  // },\r\n  cardImage: {\r\n    // objectFit: \"cover\",\r\n    // borderRadius: 55,\r\n    // width: \"20vw\",\r\n    // height: \"20vh\",\r\n    //\r\n    width: \"100%\",\r\n    height: \"20vw\",\r\n    // object-fit: \"cover\",\r\n  },\r\n};\r\n\r\nconst CreateCrud = () => {\r\n  // 1 EGLD decimals\r\n  const EGLD_DECI = new BigNumber(1000000000000000000);\r\n  // transaction props\r\n  const sendTransaction = Dapp.useSendTransaction();\r\n  const {\r\n    address,\r\n    account: { balance },\r\n    dapp,\r\n  } = Dapp.useContext();\r\n  const newTransaction = useNewTransaction();\r\n  // pinpong\r\n  // const [secondsLeft, setSecondsLeft] = React.useState<number>();\r\n  // const [hasPing, setHasPing] = React.useState<boolean>();\r\n  // NFT tocken names\r\n  // const [nftTocken, setNftTocken] = React.useState<any>();\r\n  const [name, setName] = React.useState<string>();\r\n  const [colectionName, setCollectionName] = React.useState<string>();\r\n  // TODO remove default coll id\r\n  const [collIdentifier, setCollIdentifier] = React.useState<string>(\"\");\r\n  // NFT attr\r\n  const [collectionItemName, setCollectionItemName] =\r\n    React.useState<string>(\"\");\r\n  const [collectionItemNonce, setCollectionItemNonce] =\r\n    React.useState<string>(\"\");\r\n  const [collectionItemTagName, setCollectionItemTagName] =\r\n    React.useState<string>(\"\");\r\n  const [collectionItemImgUrl, setCollectionItemImgUrl] =\r\n    React.useState<string>(\"\");\r\n  const [fileName, setFileName] = React.useState<HTMLInputElement>();\r\n  const [collectionItemQta, setCollectionItemQta] = React.useState<number>(1);\r\n  const [collectionItemRoyalties, setCollectionItemRoyalties] =\r\n    React.useState<number>(10);\r\n  const [collectionItemTrsfData, setCollectionItemTrsfData] =\r\n    React.useState<string>(\"\");\r\n  // NFT select collection\r\n  const [collectionOptions, setCollectionOptions] = React.useState([\r\n    { value: \"New\", label: \"Create Collection...\" },\r\n  ]);\r\n  const [nftItemData, setNftItemData] = React.useState<NftApiType[]>([]);\r\n  // NFT types\r\n  const [nftType, setNftType] = React.useState<boolean>(true);\r\n  const [esdType, setEsdType] = React.useState<boolean>();\r\n  const [mesdtType, setMesdtType] = React.useState<boolean>();\r\n  // NFT actions\r\n  const [canPause, setCanPause] = React.useState<boolean>(true);\r\n  const [canFreeze, setCanFreeze] = React.useState<boolean>(true);\r\n  const [canWipe, setCanWipe] = React.useState<boolean>(true);\r\n  const [canTransfer, setCanTransfer] = React.useState<boolean>(true);\r\n  // NFT Roles\r\n  // #These are only for fungible tokens\r\n  // 1 - ESDTRoleLocalMint\r\n  // 2 - ESDTRoleLocalBurn\r\n  const [canESDTRoleLocalMint, setCanESDTRoleLocalMint] =\r\n    React.useState<boolean>(false);\r\n  const [canESDTRoleLocalBurn, setCanESDTRoleLocalBurn] =\r\n    React.useState<boolean>(false);\r\n  // #For NFT and SFT\r\n  // 3 - ESDTRoleNFTCreate\r\n  // 4 - ESDTRoleNFTBurn\r\n  const [canESDTRoleNFTCreate, setCanESDTRoleNFTCreate] =\r\n    React.useState<boolean>(true);\r\n  const [canESDTRoleNFTBurn, setCanESDTRoleNFTBurn] =\r\n    React.useState<boolean>(false);\r\n  // #Only for SFT\r\n  // 5 - ESDTRoleNFTAddQuantity\r\n  const [canESDTRoleNFTAddQuantity, setCanESDTRoleNFTAddQuantity] =\r\n    React.useState<boolean>(false);\r\n  //\r\n  // Project funding\r\n  const [fundAmount, setFundAmount] = React.useState<number>(0);\r\n  const [withdrawAmount, setWithdrawAmount] = React.useState<number>(0);\r\n  //\r\n  // Tranzaction results\r\n  const { search } = useLocation();\r\n  const { explorerAddress } = Dapp.useContext();\r\n  const query = new URLSearchParams(search);\r\n  const { status, txHash } = Object.fromEntries(query); // get params from url\r\n  const { apiAddress } = Dapp.useContext();\r\n  const [transferToAddress, setTransferToAddress] =\r\n    React.useState<string>(address);\r\n  //\r\n  // general Errors\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [isError, setIsError] = React.useState(false);\r\n  const [isWarning, setIsWarning] = React.useState(false);\r\n  const [isInfo, setIsInfo] = React.useState(false);\r\n  const [message, setMessage] = React.useState(\"\");\r\n  //\r\n  // workflows steps\r\n  const [isStepCreateColl, setIsStepCreateColl] = React.useState(true);\r\n  const [isStepSetRole, setIsStepSetRole] = React.useState(true);\r\n  const [isStepCreateNft, setIsStepCreateNft] = React.useState(true);\r\n  const [isStepTransferNft, setIsStepTransferNft] = React.useState(true);\r\n  //\r\n  // API Infura\r\n  const ipfsClient = ipfsHttpClient({\r\n    protocol: \"https\",\r\n    host: \"ipfs.infura.io\",\r\n    port: 5001,\r\n    apiPath: \"/api/v0\",\r\n    // url: \"https://ipfs.infura.io:5001/api/v0\"\r\n    // headers: {\r\n    //   authorization: 'Bearer ' + TOKEN\r\n    // }\r\n  });\r\n\r\n  //\r\n  // VALIDATIONS\r\n  // const [validated, setValidated] = React.useState(false);\r\n  //\r\n  // const { transactionsFetched } = useContext();\r\n  // const dispatch = useDispatch();\r\n\r\n  //TODO remove\r\n  const [dbgMsg, setDbgMsg] = React.useState<string>(\"\");\r\n\r\n  // form validation hook\r\n  // const handleSubmit = (event: any) => {\r\n  //   const form = event.currentTarget;\r\n  //   if (form.checkValidity() === false) {\r\n  //     event.preventDefault();\r\n  //     event.stopPropagation();\r\n  //   }\r\n  //   setValidated(true);\r\n  // };\r\n\r\n  //\r\n  // utility error messages\r\n  const displayMessage = (type: number, message: string) => {\r\n    switch (type) {\r\n      case 1:\r\n        setIsError(true);\r\n        break;\r\n      case 2:\r\n        setIsWarning(true);\r\n        break;\r\n      case 3:\r\n        setIsInfo(true);\r\n        break;\r\n      // default:\r\n      //   return 'foo';\r\n    }\r\n    setMessage(message);\r\n  };\r\n  const displayErrorMessage = (message: string) => {\r\n    displayMessage(1, message);\r\n  };\r\n  const displayWarnMessage = (message: string) => {\r\n    displayMessage(2, message);\r\n  };\r\n  const displayInfoMessage = (message: string) => {\r\n    displayMessage(3, message);\r\n  };\r\n  const cleanDisplayMessage = () => {\r\n    setIsError(false);\r\n    setIsWarning(false);\r\n    setIsInfo(false);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  //\r\n  // const mount = () => {\r\n  //   if (secondsLeft) {\r\n  //     const interval = setInterval(() => {\r\n  //       setSecondsLeft((existing) => {\r\n  //         if (existing) {\r\n  //           return existing - 1;\r\n  //         } else {\r\n  //           clearInterval(interval);\r\n  //           return 0;\r\n  //         }\r\n  //       });\r\n  //     }, 1000);\r\n  //     return () => {\r\n  //       clearInterval(interval);\r\n  //     };\r\n  //   }\r\n  // };\r\n\r\n  // // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // React.useEffect(mount, [hasPing]);\r\n\r\n  // React.useEffect(() => {\r\n  //   const query = new Query({\r\n  //     address: new Address(contractAddress),\r\n  //     func: new ContractFunction(\"getTimeToPong\"),\r\n  //     args: [new AddressValue(new Address(address))],\r\n  //   });\r\n  //   dapp.proxy\r\n  //     .queryContract(query)\r\n  //     .then(({ returnData }) => {\r\n  //       const [encoded] = returnData;\r\n  //       switch (encoded) {\r\n  //         case undefined:\r\n  //           setHasPing(true);\r\n  //           break;\r\n  //         case \"\":\r\n  //           setSecondsLeft(0);\r\n  //           setHasPing(false);\r\n  //           break;\r\n  //         default: {\r\n  //           const decoded = Buffer.from(encoded, \"base64\").toString(\"hex\");\r\n  //           setSecondsLeft(parseInt(decoded, 16));\r\n  //           setHasPing(false);\r\n  //           break;\r\n  //         }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.error(\"Unable to call VM query\", err);\r\n  //     });\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, []);\r\n\r\n  // const queryTransaction = () => {\r\n  //   const query = new Query({\r\n  //     address: new Address(contractAddress),\r\n  //     func: new ContractFunction(\"getTimeToPong\"),\r\n  //     args: [new AddressValue(new Address(address))],\r\n  //   });\r\n  //   dapp.proxy\r\n  //     .queryContract(query)\r\n  //     .then(({ returnData }) => {\r\n  //       const [encoded] = returnData;\r\n  //       switch (encoded) {\r\n  //         case undefined:\r\n  //           setHasPing(true);\r\n  //           break;\r\n  //         case \"\":\r\n  //           setSecondsLeft(0);\r\n  //           setHasPing(false);\r\n  //           break;\r\n  //         default: {\r\n  //           const decoded = Buffer.from(encoded, \"base64\").toString(\"hex\");\r\n  //           setSecondsLeft(parseInt(decoded, 16));\r\n  //           setHasPing(false);\r\n  //           break;\r\n  //         }\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.error(\"Unable to call VM query\", err);\r\n  //     });\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // };\r\n\r\n  // // Check counter\r\n  // // let queryResponse = await contract.runQuery(devnet, { func: new ContractFunction(\"get\") });\r\n  // // assert.equal(3, decodeUnsignedNumber(queryResponse.outputUntyped()[0]));\r\n\r\n  // const send = (transaction: RawTransactionType) => (e: React.MouseEvent) => {\r\n  //   e.preventDefault();\r\n  //   console.log(\"=== before send tranzaction\");\r\n  //   // new transaction object\r\n  //   const newTr = newTransaction(transaction);\r\n  //   console.log(newTr);\r\n  //   setDbgMsg(newTr.toPlainObject());\r\n  //   sendTransaction({\r\n  //     transaction: newTr,\r\n  //     callbackRoute: routeNames.createArt,\r\n  //   });\r\n  //   console.log(\"=== after send tranzaction\");\r\n  //   console.log(newTr);\r\n  //   setDbgMsg(newTr.toPlainObject());\r\n  // };\r\n\r\n  // const query = new Query({\r\n  //   address: new Address(contractAddress),\r\n  //   func: new ContractFunction(\"getTimeToPong\"),\r\n  //   args: [new AddressValue(new Address(address))],\r\n  // });\r\n\r\n  //////////////////////////////////////\r\n  // // token data\r\n  // issueNonFungible - ERD call\r\n  // nftIssue  - contract call\r\n  // 1 st nft: BBBB-58d723  :[424242422d353864373233]\r\n  const buildIssueNonFungibleArgs = (): TransactionPayload => {\r\n    console.log(colectionName);\r\n    const collName: string = name!;\r\n    const collNameDesc: string = colectionName!;\r\n    const args = [\r\n      BytesValue.fromUTF8(collName),\r\n      BytesValue.fromUTF8(collNameDesc),\r\n      // TODO add contract arguments for token settings: can_freeze ...\r\n    ];\r\n    // const payload = new TransactionPayload(\"ping pong\");\r\n    const payload = TransactionPayload.contractCall()\r\n      .setFunction(new ContractFunction(\"nftIssue\"))\r\n      .setArgs(args)\r\n      .build();\r\n    //\r\n    setDbgMsg(payload.toString());\r\n    //\r\n    return payload;\r\n  };\r\n\r\n  /**\r\n   * calculate aproximative gas amount for tranzaction\r\n   * // Martin advice:\r\n   *  cfgFrmNft.minGasLimit.issueNonFungible +\r\n   *  dataPayload.length() *\r\n   *  NetworkConfig.getDefault().GasPerDataByte;\r\n   */\r\n  const calculateGasLimit = (\r\n    fixedGasLimit: number,\r\n    dataPayload: TransactionPayload,\r\n  ): number => {\r\n    const gasLimit =\r\n      fixedGasLimit +\r\n      dataPayload.length() * NetworkConfig.getDefault().GasPerDataByte;\r\n    return gasLimit;\r\n  };\r\n\r\n  // transaction\r\n  const buildIssueNonFungibleTransaction = (): RawTransactionType => {\r\n    const dataPayload = buildIssueNonFungibleArgs();\r\n    const gasLimit = calculateGasLimit(\r\n      cfgFrmNft.minGasLimit.issueNonFungible,\r\n      dataPayload,\r\n    );\r\n    // cfgFrmNft.minGasLimit.issueNonFungible +\r\n    // dataPayload.length() * NetworkConfig.getDefault().GasPerDataByte;\r\n    console.log(\"payload.length=\" + dataPayload.length());\r\n    console.log(\r\n      \" net.gasperdatabyte\" + NetworkConfig.getDefault().GasPerDataByte,\r\n    );\r\n    console.log(\"gasLimit=\" + gasLimit);\r\n    const pongTr: RawTransactionType = {\r\n      receiver: contractAddress,\r\n      data: dataPayload.toString(),\r\n      value: \"0.05\",\r\n      gasLimit: gasLimit,\r\n      // gasLimit: 60000000,\r\n    };\r\n    return pongTr;\r\n  };\r\n\r\n  //\r\n  const validateAddressArgs = (): boolean => {\r\n    console.log(\"validateAddressArgs\");\r\n    if (contractAddress === undefined || contractAddress === null) {\r\n      displayErrorMessage(\"CTR Address error\");\r\n      return false;\r\n    } else if (address === undefined || address === null) {\r\n      displayErrorMessage(\"Address error! Try to login again!\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  //\r\n  const validateIssueNonFungibleArgs = (): boolean => {\r\n    console.log(\"validateIssueNonFungibleArgs\");\r\n    cleanDisplayMessage();\r\n    if (name === undefined || name === null) {\r\n      displayWarnMessage(\"Name length error\");\r\n      return false;\r\n    } else if (name.length < 3 || name.length > 20) {\r\n      displayWarnMessage(\"Name length error\");\r\n      return false;\r\n    } else if (colectionName === undefined || colectionName === null) {\r\n      displayWarnMessage(\"colectionName length error\");\r\n      return false;\r\n    } else if (colectionName.length < 3 || colectionName.length > 10) {\r\n      displayWarnMessage(\"colectionName length error\");\r\n      return false;\r\n    } else if (balance === undefined || balance === null) {\r\n      displayWarnMessage(\"balance error\");\r\n      return false;\r\n    } else if (Number(balance) < 0.06) {\r\n      displayWarnMessage(\"balance need to be grather 0.06 EGLD\");\r\n      return false;\r\n    }\r\n    return validateAddressArgs();\r\n  };\r\n\r\n  //transaction: RawTransactionType\r\n  const callIssueNonFungible = (e: React.MouseEvent) => {\r\n    // e.preventDefault();\r\n    console.log(\"=== before send tranzaction\");\r\n    if (!validateIssueNonFungibleArgs()) {\r\n      return;\r\n    }\r\n    // new transaction object\r\n    const newTr = newTransaction(buildIssueNonFungibleTransaction());\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n    sendTransaction({\r\n      transaction: newTr,\r\n      callbackRoute: routeNames.createArt,\r\n    });\r\n    console.log(\"=== after send tranzaction\");\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n  };\r\n\r\n  //////////////////////////////////////\r\n  // SetRole - ERD call\r\n  // setLocalRoles --arguments 0x${ADDRESS_DECODED} ${NFT_IDENTIFIER} 0x03 0x05\r\n  // 1 st nft: BBBB-58d723  :[424242422d353864373233]\r\n\r\n  // #These are only for fungible tokens\r\n  // ESDTRoleLocalMint\r\n  // ESDTRoleLocalBurn\r\n\r\n  // #For NFT and SFT\r\n  // ESDTRoleNFTCreate\r\n  // ESDTRoleNFTBurn\r\n\r\n  // #Only for SFT\r\n  // ESDTRoleNFTAddQuantity\r\n  //\r\n  const buildSetRoleArgs = (): TransactionPayload => {\r\n    console.log(\"buildSetRoleArgs\");\r\n    if (contractAddress === undefined || contractAddress === null) {\r\n      // TODO display validation error\r\n    } else if (collIdentifier === undefined || collIdentifier === null) {\r\n      // TODO display validation error\r\n    }\r\n\r\n    // contract.getAddress().bech32();\r\n    // Address.fromBech32(bech32Address).hex();\r\n    // new AddressValue(new Address(address))\r\n    // const contractBech32: string = converters.base64ToBech32(contractAddress);\r\n    const collId: string = collIdentifier!;\r\n\r\n    const args: TypedValue[] = [\r\n      new AddressValue(new Address(contractAddress)), // contract address\r\n      new TokenIdentifierValue(Buffer.from(collId, \"utf8\")), //BytesValue.fromUTF8(collId)\r\n      // // BytesValue.fromUTF8(\"0x03\"),\r\n      // // new BigUIntValue(new BigNumber(1)), //ESDTRoleLocalMint\r\n      // // new BigUIntValue(new BigNumber(2)), //ESDTRoleLocalBurn\r\n      // new BigUIntValue(new BigNumber(3)), //ESDTRoleNFTCreate\r\n      // // new BigUIntValue(new BigNumber(4)), //ESDTRoleNFTAddQuantity\r\n      // new BigUIntValue(new BigNumber(5)), //ESDTRoleNFTBurn\r\n    ];\r\n\r\n    if (canESDTRoleNFTCreate) {\r\n      args.push(new BigUIntValue(new BigNumber(3))); //ESDTRoleNFTCreate\r\n    }\r\n    if (canESDTRoleNFTBurn) {\r\n      args.push(new BigUIntValue(new BigNumber(5))); //ESDTRoleNFTBurn\r\n    }\r\n\r\n    // const payload = new TransactionPayload(\"ping pong\");\r\n    const payload = TransactionPayload.contractCall()\r\n      .setFunction(new ContractFunction(\"setLocalRoles\"))\r\n      .setArgs(args)\r\n      .build();\r\n    //\r\n    setDbgMsg(payload.toString());\r\n    //\r\n    return payload;\r\n  };\r\n\r\n  // transaction\r\n  const buildSetRoleTransaction = (): RawTransactionType => {\r\n    const dataPayload = buildSetRoleArgs();\r\n    const gasLimit = calculateGasLimit(\r\n      cfgFrmNft.minGasLimit.setRole,\r\n      dataPayload,\r\n    );\r\n    const pongTr: RawTransactionType = {\r\n      receiver: contractAddress,\r\n      data: dataPayload.toString(),\r\n      value: \"0.0\",\r\n      gasLimit: gasLimit,\r\n    };\r\n    return pongTr;\r\n  };\r\n\r\n  //transaction: RawTransactionType\r\n  const callSetRole = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    console.log(\"=== before send tranzaction\");\r\n    // new transaction object\r\n    const newTr = newTransaction(buildSetRoleTransaction());\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n    sendTransaction({\r\n      transaction: newTr,\r\n      callbackRoute: routeNames.createArt,\r\n    });\r\n    console.log(\"=== after send tranzaction\");\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n  };\r\n\r\n  //////////////////////////////////////\r\n  // Create NFT - ERD call\r\n  // # Arguments: token identifier, amount (1), name (VeryUniqueToken), royalties (1000, i.e. 10%), hash (sha256(VeryUniqueToken)), color (1,2,3), uri (www.nfts.com)\r\n  // --arguments ${NFT_IDENTIFIER} 0x01 0x56657279556e69717565546f6b656e 0x03E8 ${NFT_IPFS_HASH} 0x010203 ${NFT_IPFS_URL}\r\n  const buildCreateNFTArgs = (): TransactionPayload => {\r\n    console.log(\"buildSetRoleArgs\");\r\n    if (contractAddress === undefined || contractAddress === null) {\r\n      // TODO display validation error\r\n    } else if (collIdentifier === undefined || collIdentifier === null) {\r\n      // TODO display validation error\r\n    }\r\n\r\n    const collId: string = collIdentifier!;\r\n    // CDDD-29f066          :[434444442d323966303636]\r\n    // const collId: string = \"CDDD-29f066\"!; // TODO take value from select list\r\n    const colItemName: string = collectionItemName!;\r\n    const colItemRoyalties: number = collectionItemRoyalties! * 100; // 100 = 1%\r\n    const colItemTagName: string = collectionItemTagName!;\r\n    const colItemQta: number = collectionItemQta! * 100;\r\n    const colItemUrl: string = collectionItemImgUrl!;\r\n\r\n    const hash = crypto.createHash(\"sha256\");\r\n    hash.update(colItemName);\r\n    const colItemHash = hash.digest(\"hex\");\r\n\r\n    const args = [\r\n      new TokenIdentifierValue(Buffer.from(collId, \"utf8\")), //BytesValue.fromUTF8(collId)\r\n      new BigUIntValue(new BigNumber(1)), //amount should be 1 for NFT\r\n      BytesValue.fromUTF8(colItemName), //name (VeryUniqueToken)\r\n      new BigUIntValue(new BigNumber(colItemRoyalties)), //royalties (1000, i.e. 10%)\r\n      new BigUIntValue(new BigNumber(colItemHash)), //hash (sha256(VeryUniqueToken))\r\n\r\n      // TODO replace SC Colour parameter with tags attr list\r\n      // BytesValue.fromUTF8(colItemTagName), // 0x010203  Color(1,2,3)\r\n      new BigUIntValue(new BigNumber(66051)), // TODO replace, 66051 is hex encoded vertions of 010203\r\n      BytesValue.fromUTF8(colItemUrl), //uri (www.nfts.com)\r\n      BytesValue.fromUTF8(colItemTagName), //attr (www.nfts.com)\r\n      //\r\n      // TEST\r\n      // new TokenIdentifierValue(Buffer.from(\"CDDD-29f066\", \"utf8\")), // colId\r\n      // new BigUIntValue(new BigNumber(3)), //amount\r\n      // BytesValue.fromUTF8(\"CDDDITEM1\"), //name\r\n      // new BigUIntValue(new BigNumber(1000)), //royalties\r\n      // BytesValue.fromUTF8(\"9223372036854775807\"), //hash\r\n      // new BigUIntValue(new BigNumber(66051)), // code\r\n      // BytesValue.fromUTF8(\"www.nfts.com\"), //uri (www.nfts.com)\r\n    ];\r\n    // const payload = new TransactionPayload(\"ping pong\");\r\n    const payload = TransactionPayload.contractCall()\r\n      .setFunction(new ContractFunction(\"nftCreate\"))\r\n      .setArgs(args)\r\n      .build();\r\n    //\r\n    setDbgMsg(payload.toString());\r\n    //\r\n    return payload;\r\n  };\r\n\r\n  // transaction\r\n  const buildCreateNFTTransaction = (): RawTransactionType => {\r\n    const dataPayload = buildCreateNFTArgs();\r\n    const gasLimit = calculateGasLimit(\r\n      cfgFrmNft.minGasLimit.createNft,\r\n      dataPayload,\r\n    );\r\n    const pongTr: RawTransactionType = {\r\n      receiver: contractAddress,\r\n      data: dataPayload.toString(),\r\n      value: \"0.0\",\r\n      gasLimit: gasLimit,\r\n    };\r\n    return pongTr;\r\n  };\r\n\r\n  //transaction: RawTransactionType\r\n  const callCreateNFT = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    console.log(\"=== before send tranzaction\");\r\n    // new transaction object\r\n    const newTr = newTransaction(buildCreateNFTTransaction());\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n    sendTransaction({\r\n      transaction: newTr,\r\n      callbackRoute: routeNames.createArt,\r\n    });\r\n    console.log(\"=== after send tranzaction\");\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n  };\r\n\r\n  //////////////////////////////////////\r\n  // Create NFT - ERD call\r\n  // # Arguments: token identifier, amount (1), name (VeryUniqueToken), royalties (1000, i.e. 10%), hash (sha256(VeryUniqueToken)), color (1,2,3), uri (www.nfts.com)\r\n  // --arguments ${NFT_IDENTIFIER} 0x01 0x56657279556e69717565546f6b656e 0x03E8 ${NFT_IPFS_HASH} 0x010203 ${NFT_IPFS_URL}\r\n  const buildMintNFTArgs = (): TransactionPayload => {\r\n    console.log(\"buildSetRoleArgs\");\r\n    if (contractAddress === undefined || contractAddress === null) {\r\n      // TODO display validation error\r\n    } else if (collIdentifier === undefined || collIdentifier === null) {\r\n      // TODO display validation error\r\n    }\r\n\r\n    const collId: string = collIdentifier!;\r\n    const colItemName: string = collectionItemName!;\r\n    const colItemTagName: string = collectionItemTagName!;\r\n    const colItemQta: number = collectionItemQta! * 100;\r\n    const colItemUrl: string = collectionItemImgUrl!;\r\n    const args = [\r\n      // new TokenIdentifierValue(Buffer.from(collId, \"utf8\")), //BytesValue.fromUTF8(collId)\r\n      // new BigUIntValue(new BigNumber(colItemQta)), //amount should be 1 for NFT\r\n      // BytesValue.fromUTF8(colItemName), //name (VeryUniqueToken)\r\n      // new BigUIntValue(new BigNumber(1000)), //royalties (1000, i.e. 10%)\r\n      // new BigUIntValue(new BigNumber(66051)), // TODO replace, 66051 is hex encoded vertions of 010203\r\n      // BytesValue.fromUTF8(colItemUrl), //uri (www.nfts.com)\r\n      //\r\n      // TEST\r\n      // CDDD-29f066 - nonfungible\r\n      // SEMIFUNG-8108ad -semifungible\r\n      new TokenIdentifierValue(Buffer.from(\"SEMIFUNG-8108ad\", \"utf8\")), // colId\r\n      new BigUIntValue(new BigNumber(1)), // nounce\r\n      new BigUIntValue(new BigNumber(20)), // qta\r\n    ];\r\n    // const payload = new TransactionPayload(\"ping pong\");\r\n    const payload = TransactionPayload.contractCall()\r\n      .setFunction(new ContractFunction(\"nftAddQuantity\"))\r\n      .setArgs(args)\r\n      .build();\r\n    //\r\n    setDbgMsg(payload.toString());\r\n    //\r\n    return payload;\r\n  };\r\n\r\n  // transaction\r\n  const buildMintNFTTransaction = (): RawTransactionType => {\r\n    const dataPayload = buildMintNFTArgs();\r\n    const pongTr: RawTransactionType = {\r\n      receiver: contractAddress,\r\n      data: dataPayload.toString(),\r\n      value: \"0.0\",\r\n      gasLimit: 10000000,\r\n    };\r\n    return pongTr;\r\n  };\r\n\r\n  //transaction: RawTransactionType\r\n  const callMintNFT = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    console.log(\"=== before send tranzaction\");\r\n    // new transaction object\r\n    const newTr = newTransaction(buildMintNFTTransaction());\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n    sendTransaction({\r\n      transaction: newTr,\r\n      callbackRoute: routeNames.createArt,\r\n    });\r\n    console.log(\"=== after send tranzaction\");\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n  };\r\n\r\n  //////////////////////////////////////\r\n  // Create NFT - ERD call\r\n  // # Arguments: token identifier, amount (1), name (VeryUniqueToken), royalties (1000, i.e. 10%), hash (sha256(VeryUniqueToken)), color (1,2,3), uri (www.nfts.com)\r\n  // --arguments ${NFT_IDENTIFIER} 0x01 0x56657279556e69717565546f6b656e 0x03E8 ${NFT_IPFS_HASH} 0x010203 ${NFT_IPFS_URL}\r\n  const buildReleaseNFTArgs = (): TransactionPayload => {\r\n    console.log(\"buildReleaseNFTArgs\");\r\n    if (contractAddress === undefined || contractAddress === null) {\r\n      // TODO display validation error\r\n    } else if (collIdentifier === undefined || collIdentifier === null) {\r\n      // TODO display validation error\r\n    }\r\n\r\n    const collId: string = collIdentifier!;\r\n    // CDDD-29f066          :[434444442d323966303636]\r\n    // const collId: string = \"CDDD-29f066\"!; // TODO take value from select list\r\n    const colItemName: string = collectionItemName!;\r\n    const colItemRoyalties: number = collectionItemRoyalties! * 100; // 100 = 1%\r\n    const colItemTagName: string = collectionItemTagName!;\r\n    const colItemQta: number = collectionItemQta! * 100;\r\n    const colItemUrl: string = collectionItemImgUrl!;\r\n\r\n    const hash = crypto.createHash(\"sha256\");\r\n    hash.update(colItemName);\r\n    const colItemHash = hash.digest(\"hex\");\r\n    /**\r\n   *    token_identifier: TokenIdentifier,\r\n        amount: BigUint,\r\n        name: ManagedBuffer,\r\n        royalties: BigUint,\r\n        hash: ManagedBuffer,\r\n        attributes: ManagedBuffer,        \r\n        uri1: ManagedBuffer,        \r\n        uri2: ManagedBuffer,        \r\n        uri3: ManagedBuffer,        \r\n        withdraw_amount: BigUint,\r\n   */\r\n    const args = [\r\n      new TokenIdentifierValue(Buffer.from(collId, \"utf8\")), //BytesValue.fromUTF8(collId)\r\n      new BigUIntValue(new BigNumber(1)), //amount should be 1 for NFT\r\n      BytesValue.fromUTF8(colItemName), //name (VeryUniqueToken)\r\n      new BigUIntValue(new BigNumber(colItemRoyalties)), //royalties (1000, i.e. 10%)\r\n      new BigUIntValue(new BigNumber(colItemHash)), //hash (sha256(VeryUniqueToken))\r\n      BytesValue.fromUTF8(colItemTagName), //attr (www.nfts.com)\r\n      BytesValue.fromUTF8(colItemUrl), //uri (www.nfts.com)\r\n      BytesValue.fromUTF8(colItemUrl), //uri (www.nfts.com)\r\n      BytesValue.fromUTF8(colItemUrl), //uri (www.nfts.com)\r\n      // new BigUIntValue(new BigNumber(1)), //withdraw_amount should be 1 for NFT\r\n      // new BigUIntValue(new BigNumber(withdrawAmount)),\r\n      new BigUIntValue(new BigNumber(withdrawAmount).multipliedBy(EGLD_DECI)), // withdraw_amount:\r\n    ];\r\n    //\r\n    const payload = TransactionPayload.contractCall()\r\n      .setFunction(new ContractFunction(\"releaseNft\"))\r\n      .setArgs(args)\r\n      .build();\r\n    //\r\n    setDbgMsg(payload.toString());\r\n    //\r\n    return payload;\r\n  };\r\n\r\n  // transaction\r\n  const buildReleaseNFTTransaction = (): RawTransactionType => {\r\n    const dataPayload = buildReleaseNFTArgs();\r\n    const pongTr: RawTransactionType = {\r\n      receiver: contractAddress,\r\n      data: dataPayload.toString(),\r\n      value: \"0.0\",\r\n      gasLimit: 10000000,\r\n    };\r\n    return pongTr;\r\n  };\r\n\r\n  //transaction: RawTransactionType\r\n  const callReleaseNFT = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    console.log(\"=== before send tranzaction\");\r\n    // new transaction object\r\n    const newTr = newTransaction(buildReleaseNFTTransaction());\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n    sendTransaction({\r\n      transaction: newTr,\r\n      callbackRoute: routeNames.createArt,\r\n    });\r\n    console.log(\"=== after send tranzaction\");\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n  };\r\n\r\n  //////////////////////////////////////\r\n  // Transfer NFT - ERD call\r\n  // # Arguments: WALLET_ADDR, token identifier, nonce, amount (1), name, data\r\n  // --arguments  0x${WALLET_ADDR} ${NFT_IDENTIFIER} nonce 0x01 ${NFT_MSG_DATA}\r\n  const buildTransferNFTArgs = (): TransactionPayload => {\r\n    console.log(\"buildTransferNFTArgs\");\r\n    const collId: string = collIdentifier!;\r\n    const args = [\r\n      new AddressValue(new Address(transferToAddress)), // wallt address\r\n      new TokenIdentifierValue(Buffer.from(collId, \"utf8\")), //BytesValue.fromUTF8(collId)\r\n      new BigUIntValue(new BigNumber(collectionItemNonce)), // nounce\r\n      new BigUIntValue(new BigNumber(1)), //amount should be 1 for NFT\r\n      BytesValue.fromUTF8(collectionItemTrsfData), //name (VeryUniqueToken)\r\n    ];\r\n    // const payload = new TransactionPayload(\"ping pong\");\r\n    const payload = TransactionPayload.contractCall()\r\n      .setFunction(new ContractFunction(\"transferNftViaAsyncCall\"))\r\n      .setArgs(args)\r\n      .build();\r\n    //\r\n    setDbgMsg(payload.toString());\r\n    //\r\n    return payload;\r\n  };\r\n\r\n  // transaction\r\n  const buildTransferNFTTransaction = (): RawTransactionType => {\r\n    const dataPayload = buildTransferNFTArgs();\r\n    const gasLimit = calculateGasLimit(\r\n      cfgFrmNft.minGasLimit.transferNft,\r\n      dataPayload,\r\n    );\r\n    const tr: RawTransactionType = {\r\n      receiver: contractAddress,\r\n      data: dataPayload.toString(),\r\n      value: \"0.0\",\r\n      gasLimit: gasLimit,\r\n    };\r\n    return tr;\r\n  };\r\n\r\n  // validation transfer fields\r\n  const validateTransferNFTArgs = (): boolean => {\r\n    console.log(\"validateIssueNonFungibleArgs\");\r\n    cleanDisplayMessage();\r\n    if (contractAddress === undefined || contractAddress === null) {\r\n      displayWarnMessage(\"Contract address error, try login again\");\r\n      return false;\r\n      // } else if (contractAddress.length !== 62) {\r\n      //   displayWarnMessage(\"contract length error, try login again\");\r\n      //   return false;\r\n    } else if (transferToAddress === undefined || transferToAddress === null) {\r\n      displayWarnMessage(\"wallet address error, try login again\");\r\n      return false;\r\n    } else if (transferToAddress.length !== 62) {\r\n      displayWarnMessage(\"wallet length error, try login again\");\r\n      return false;\r\n    } else if (collIdentifier === undefined || colectionName === null) {\r\n      displayWarnMessage(\"collection error, select a collection\");\r\n      return false;\r\n    } else if (\r\n      collectionItemNonce === undefined ||\r\n      collectionItemNonce === null\r\n    ) {\r\n      displayWarnMessage(\"nonce error\");\r\n      return false;\r\n    } else if (Number(balance) < 0.001) {\r\n      displayWarnMessage(\"balance need to be grather 0.001 EGLD\");\r\n      return false;\r\n    }\r\n    return validateAddressArgs();\r\n  };\r\n\r\n  //transaction: RawTransactionType\r\n  const callTransferNFT = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    console.log(\"=== before TransferNFT tranzaction\");\r\n    if (!validateTransferNFTArgs()) {\r\n      return;\r\n    }\r\n    // new transaction object\r\n    const newTr = newTransaction(buildTransferNFTTransaction());\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n    sendTransaction({\r\n      transaction: newTr,\r\n      callbackRoute: routeNames.createArt,\r\n    });\r\n    console.log(\"=== after TransferNFT tranzaction\");\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n  };\r\n\r\n  //////////////////////////////////////\r\n  // Transfer NFT - ERD call\r\n  // # Arguments: WALLET_ADDR, token identifier, nonce, amount (1), name, data\r\n  // --arguments  0x${WALLET_ADDR} ${NFT_IDENTIFIER} nonce 0x01 ${NFT_MSG_DATA}\r\n  const buildFundPrjArgs = (): TransactionPayload => {\r\n    console.log(\"buildFundPrjTArgs\");\r\n    const collId: string = collIdentifier!;\r\n    // const args = [\r\n    //   new AddressValue(new Address(transferToAddress)), // wallt address\r\n    //   new TokenIdentifierValue(Buffer.from(collId, \"utf8\")), //BytesValue.fromUTF8(collId)\r\n    //   new BigUIntValue(new BigNumber(collectionItemNonce)), // nounce\r\n    //   new BigUIntValue(new BigNumber(1)), //amount should be 1 for NFT\r\n    //   BytesValue.fromUTF8(collectionItemTrsfData), //name (VeryUniqueToken)\r\n    // ];\r\n    // const payload = new TransactionPayload(\"ping pong\");\r\n    const payload = TransactionPayload.contractCall()\r\n      .setFunction(new ContractFunction(\"fund\"))\r\n      // .setArgs(args)\r\n      .build();\r\n    //\r\n    setDbgMsg(payload.toString());\r\n    //\r\n    return payload;\r\n  };\r\n\r\n  // transaction\r\n  const buildFundPrjTransaction = (): RawTransactionType => {\r\n    const dataPayload = buildFundPrjArgs();\r\n    const gasLimit = calculateGasLimit(\r\n      cfgFrmNft.minGasLimit.transferNft,\r\n      dataPayload,\r\n    );\r\n    const tr: RawTransactionType = {\r\n      receiver: contractAddress,\r\n      data: dataPayload.toString(),\r\n      value: fundAmount.toString(),\r\n      gasLimit: gasLimit,\r\n    };\r\n    return tr;\r\n  };\r\n\r\n  // validation transfer fields\r\n  const validateFundPrjArgs = (): boolean => {\r\n    console.log(\"validateFundPrjArgs\");\r\n    cleanDisplayMessage();\r\n    if (collIdentifier === undefined || colectionName === null) {\r\n      displayWarnMessage(\"collection error, select a collection\");\r\n      return false;\r\n    } else if (\r\n      collectionItemNonce === undefined ||\r\n      collectionItemNonce === null\r\n    ) {\r\n      displayWarnMessage(\"nonce error\");\r\n      return false;\r\n    } else if (Number(fundAmount) === 0 || Number(fundAmount) < 0) {\r\n      displayWarnMessage(\"fund amount need to be grather 0 EGLD\");\r\n      return false;\r\n    }\r\n    return validateAddressArgs();\r\n  };\r\n\r\n  //transaction: RawTransactionType\r\n  const callFundPrj = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    console.log(\"=== before callFundPrj tranzaction\");\r\n    if (!validateFundPrjArgs()) {\r\n      return;\r\n    }\r\n    // new transaction object\r\n    const newTr = newTransaction(buildFundPrjTransaction());\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n    sendTransaction({\r\n      transaction: newTr,\r\n      callbackRoute: routeNames.createArt,\r\n    });\r\n    console.log(\"=== after callFundPrj tranzaction\");\r\n    console.log(newTr);\r\n    setDbgMsg(newTr.toPlainObject());\r\n  };\r\n\r\n  ////////////////////////////////////\r\n  // get tranzaction status\r\n  //http://localhost:3000/createArt?status=success&txHash=be35d64514e79f02312b2430f561bc603a624cc0b4e5c4a0ea8acb43a7bb6fd6&address=erd1a2q9cyk7f0xpwx2nrfpfa5tvxvga302e80nkcz4k0uwxns8txrjs8tz6m5\r\n\r\n  let callCountqueryTrData = 0;\r\n\r\n  // query and reset counter\r\n  const queryTrData = () => {\r\n    callCountqueryTrData = 0;\r\n    console.log(\"callCountqueryTrData2 = \" + callCountqueryTrData);\r\n    queryTrDataCount();\r\n  };\r\n\r\n  // query without reseting counter\r\n  const queryTrDataCount = () => {\r\n    if (txHash === undefined || txHash === null) {\r\n      // no need for api request\r\n      console.log(\"no need for api request\");\r\n      return;\r\n    }\r\n    getTransactions({\r\n      apiAddress,\r\n      address,\r\n      timeout: 3000,\r\n      contractAddress,\r\n      txHash: \"/\" + txHash,\r\n    }).then(({ data, success }) => {\r\n      // dispatch({\r\n      //   type: \"setTransactions\",\r\n      //   transactions: data,\r\n      //   transactionsFetched: success,\r\n      // });\r\n      queryTrDataResults(data, success);\r\n    });\r\n  };\r\n\r\n  // query tranzaction data and analyse results\r\n  React.useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      queryTrData();\r\n    }, cfgFrmNft.queryApiDelay);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  //\r\n  const decodeBase64 = (strBase64: string): Buffer[] => {\r\n    const payload = TransactionPayload.fromEncoded(strBase64);\r\n    // payload.getEncodedArguments();\r\n    return payload.getRawArguments();\r\n  };\r\n\r\n  //\r\n  const queryTrDataResults = (data: any, success: boolean) => {\r\n    cleanDisplayMessage();\r\n    if (!success) {\r\n      displayErrorMessage(\"Tranzaction error\");\r\n      // TODO extract some meanigfull infos\r\n      return;\r\n    } else if (data === undefined || data === null) {\r\n      displayErrorMessage(\"Tranzaction error data\");\r\n      return;\r\n    } else if (data.results === undefined || data.results === null) {\r\n      displayErrorMessage(\"Tranzaction error results\");\r\n      return;\r\n    } else if (data.results.length !== 4) {\r\n      // TODO inconsistent problem\r\n    }\r\n    //\r\n    console.log(data);\r\n    let dbg = \"issueTrData:: \\n\";\r\n    // const respStr = \"QDAwQDQyNDI0MjQyMmQzNTM4NjQzNzMyMzM=\";\r\n    // const decoded = Buffer.from(respStr, \"base64\"); //.toString(\"hex\");\r\n    // const respStr = \"bmZ0SXNzdWVANjc2NzM4QDQ3NDczOA==\";\r\n    // const respStr =\r\n    //   \"c2V0TG9jYWxSb2xlc0AwMDAwMDAwMDAwMDAwMDAwMDUwMGJmZDc5NmZlMmJmNDMxMDVhOWQ3ZDMyNThjYzA2ZjYwMjZjYmUzMWUzMGU1QDQ3NDczODJkNjEzMjM1NjQ2MjYyQDAzQDA1\";\r\n    // const payload = TransactionPayload.fromEncoded(respStr);\r\n    // // const ecodedArgs = payload.getEncodedArguments();\r\n    // console.log(\"======\");\r\n    // console.log(respStr);\r\n    // const setLocalRoles = \"setLocalRoles\";\r\n    // console.log(Buffer.from(setLocalRoles, \"utf8\").toString());\r\n    // const setLocaleDecoded = Buffer.from(setLocalRoles, \"utf8\").toString(\r\n    //   \"base64\",\r\n    // );\r\n    // console.log(setLocaleDecoded);\r\n    // const setLocaleEcodedHex = Buffer.from(setLocalRoles, \"hex\").toString();\r\n    // console.log(setLocaleEcodedHex);\r\n    // const decoded = Buffer.from(respStr, \"base64\").toString();\r\n    // console.log(\"======\");\r\n    // console.log(decoded);\r\n    // const ecodedArgs = decoded.toString().split(\"@\");\r\n    // console.log(ecodedArgs);\r\n    // console.log(ecodedArgs[0].toString());\r\n    // console.log(ecodedArgs[1].toString());\r\n    // console.log(ecodedArgs[2].toString());\r\n    // console.log(ecodedArgs[3].toString());\r\n    // console.log(ecodedArgs[4].toString());\r\n    // console.log(Buffer.from(ecodedArgs[0].toString(), \"hex\").toString());\r\n    // console.log(Buffer.from(ecodedArgs[1], \"hex\").toString());\r\n    // console.log(Buffer.from(ecodedArgs[2], \"hex\").toString());\r\n    // console.log(Buffer.from(ecodedArgs[3], \"hex\").toString());\r\n    // console.log(Buffer.from(ecodedArgs[4], \"hex\").toString());\r\n    //this.getEncodedArguments().map(argument => Buffer.from(argument, \"hex\"));\r\n    // ecodedArgs.forEach((element) => {\r\n    //   const rawElem = Buffer.from(element, \"hex\");\r\n    //   console.log(rawElem + \", \");\r\n    // });\r\n\r\n    const payload = TransactionPayload.fromEncoded(data.data);\r\n    const ecodedArgs = payload.getEncodedArguments();\r\n    // const rawArgs = payload.getRawArguments();\r\n\r\n    console.log(\"data.data\");\r\n    console.log(ecodedArgs.toString());\r\n    // console.log(rawArgs.toString());\r\n    dbg += \"\\n::getEncodedArguments\\n \";\r\n    dbg += ecodedArgs;\r\n    dbg += \"\\n::getRawArguments\\n \";\r\n    // dbg += rawArgs;\r\n\r\n    // unrecognized tranzaction method\r\n    if (\r\n      ecodedArgs === undefined ||\r\n      ecodedArgs === null ||\r\n      ecodedArgs.length === 0\r\n    ) {\r\n      displayErrorMessage(\"Tranzaction error method args\");\r\n      return;\r\n    }\r\n    const trxMethod = ecodedArgs[0];\r\n    console.log(\"method:\" + trxMethod);\r\n    switch (trxMethod) {\r\n      case \"nftIssue\":\r\n        extractCollectionIdentifier(data, success);\r\n        break;\r\n      case \"setLocalRoles\":\r\n        processResultSetLocalRole(data, success);\r\n        break;\r\n      case \"nftCreate\":\r\n        processResultCreateNft(data, success);\r\n        break;\r\n      case \"transferNftViaAsyncCall\":\r\n        processResultTransferNft(data, success);\r\n        break;\r\n      // default:\r\n      //   return 'foo';\r\n    }\r\n  };\r\n\r\n  function delay(time: number) {\r\n    return new Promise((resolve) => setTimeout(resolve, time));\r\n  }\r\n\r\n  // extract coll ID\r\n  async function extractCollectionIdentifier(data: any, success: boolean) {\r\n    const issueTrData = decodeBase64(data.data);\r\n    let dbg = \"\";\r\n    dbg += issueTrData;\r\n\r\n    // first call can result with incomplete transaction data\r\n    // we make a second call\r\n    console.log(\r\n      \"make another regquest callCountqueryTrData=\" + callCountqueryTrData,\r\n      \" results.length=\" + data.results.length,\r\n    );\r\n    if (\r\n      data.results.length < 4 &&\r\n      callCountqueryTrData < cfgFrmNft.queryApiCounter\r\n    ) {\r\n      callCountqueryTrData++;\r\n      displayInfoMessage(\"Waiting for tranzaction status.\");\r\n      await delay(cfgFrmNft.apiRequestDelay.issueNonFungible);\r\n      console.log(\r\n        new Date() + \"request callCountqueryTrData=\" + callCountqueryTrData,\r\n      );\r\n      queryTrDataCount();\r\n      return;\r\n    }\r\n\r\n    // tr0\r\n    dbg += \"\\n::0) \\n\";\r\n    const tr0 = decodeBase64(data.results[0].data);\r\n    dbg += tr0;\r\n    let payload = TransactionPayload.fromEncoded(data.results[0].data);\r\n    let ecodedArgs = payload.getEncodedArguments();\r\n    let rawArgs = payload.getRawArguments();\r\n    if (rawArgs[1].toString() === \"ok\") {\r\n      // displayInfoMessage(\"SC ok\");\r\n    } else {\r\n      displayErrorMessage(\"Tranzaction error method\");\r\n      console.log(\"Tranzaction error method: \" + rawArgs[1].toString());\r\n      // console.log(data);\r\n      return;\r\n    }\r\n    dbg += \"\\n::ecodedArgs\\n\";\r\n    dbg += ecodedArgs;\r\n    dbg += \"\\n::rawArgs\\n\";\r\n    dbg += rawArgs;\r\n\r\n    // tr1\r\n    dbg += \"\\n::1) \\n\";\r\n    const tr1 = decodeBase64(data.results[1].data);\r\n    dbg += tr1;\r\n    const resultCallType = data.results[1].callType;\r\n    const resultData = data.results[1].data;\r\n    payload = TransactionPayload.fromEncoded(resultData);\r\n    ecodedArgs = payload.getEncodedArguments();\r\n    rawArgs = payload.getRawArguments();\r\n    const trxMethod = ecodedArgs[0];\r\n    console.log(\"method:\" + trxMethod);\r\n\r\n    if (resultCallType !== \"1\") {\r\n      console.log(\"Tranzaction error unexpected callType=\" + resultCallType);\r\n      return;\r\n    }\r\n    if (trxMethod !== \"issueNonFungible\") {\r\n      displayErrorMessage(\"Tranzaction error issue tocken\");\r\n      console.log(\"Tranzaction error unexpected method: \" + trxMethod);\r\n      return;\r\n    }\r\n    dbg += \"\\n:: \" + trxMethod + \"\\n\";\r\n    dbg += ecodedArgs;\r\n    dbg += \"\\n::raw\\n\";\r\n    dbg += rawArgs;\r\n\r\n    // tr2\r\n    // ins case of success should contain COLL_ID\r\n    dbg += \"\\n::2) \\n\";\r\n    processResultCollectionIdentifier(data.results[2], dbg);\r\n\r\n    // tr3\r\n    dbg += \"\\n::3) \\n\";\r\n    processResultCollectionIdentifier(data.results[3], dbg);\r\n\r\n    dbg += \"\\n::contractAddress\\n\";\r\n    dbg += contractAddress;\r\n    dbg += \"\\n::contractAddress Bech32:\\n\";\r\n    const contractBech32 = converters.base64ToBech32(contractAddress);\r\n    dbg += contractBech32;\r\n\r\n    console.log(\"=== after send tranzaction\");\r\n    console.log(data);\r\n    setDbgMsg(dbg);\r\n  }\r\n\r\n  /**\r\n   * Process transaction results\r\n   * and extract collection id\r\n   * @param result boolean success\r\n   * @param dbg\r\n   * @returns\r\n   */\r\n  const processResultCollectionIdentifier = (result: any, dbg: string) => {\r\n    // tr\r\n    const payload = TransactionPayload.fromEncoded(result.data);\r\n    const ecodedArgs = payload.getEncodedArguments();\r\n    const rawArgs = payload.getRawArguments();\r\n    dbg += \"\\n::ecodedArgs\\n\";\r\n    dbg += ecodedArgs;\r\n    dbg += \"\\n::rawArgs\\n\";\r\n    dbg += rawArgs;\r\n\r\n    // SC Tranzaction responce - ignore\r\n    if (result.callType !== \"2\") {\r\n      return false;\r\n    }\r\n\r\n    // ::ecodedArgs\r\n    // ,04,6e6f7420656e6f75676820676173\r\n    // ::rawArgs\r\n    // ,,not enough ga\r\n    //\r\n    const resultCode = ecodedArgs[1];\r\n    if (resultCode === \"04\") {\r\n      // Tranzaction ERROR!\r\n      displayErrorMessage(result.returnMessage);\r\n      console.log(\"Tranzaction error message: \" + result.returnMessage);\r\n      return false;\r\n    }\r\n\r\n    // tranzaction success - save collID\r\n    // @ok@434f4c332d313130306539\r\n    // ok, COL3-1100e9\r\n    //\r\n    const indexColId = 2;\r\n    const collId = rawArgs[indexColId];\r\n    dbg += collId;\r\n    if (collId === undefined || collId === null) {\r\n      displayErrorMessage(result.returnMessage);\r\n      console.log(\"Tranzaction error missing coll ID:\" + collId);\r\n      return false;\r\n    }\r\n\r\n    // UPDATE coll ID !!!\r\n    setCollIdentifier(collId.toString());\r\n    displayInfoMessage(\r\n      \"Collection \" + collId.toString() + \" created succefully\",\r\n    );\r\n\r\n    // hide step1 and show step2\r\n    setIsStepCreateColl(false);\r\n    setIsStepSetRole(true);\r\n\r\n    dbg += \"\\n::callType === 2\\n\";\r\n    dbg += collId.toString();\r\n    console.log(\"collId:\" + collId);\r\n    return true;\r\n  };\r\n\r\n  /***********************************************************************\r\n   *\r\n   * @param data\r\n   * @param success\r\n   * @returns\r\n   */\r\n  async function processResultSetLocalRole(data: any, success: boolean) {\r\n    // retry\r\n    console.log(\r\n      \"make another regquest callCountqueryTrData=\" + callCountqueryTrData,\r\n      \" results.length=\" + data.results.length,\r\n    );\r\n    if (\r\n      data.results.length < 4 &&\r\n      callCountqueryTrData < cfgFrmNft.queryApiCounter\r\n    ) {\r\n      callCountqueryTrData++;\r\n      displayInfoMessage(\"Waiting for tranzaction permissions status.\");\r\n      await delay(cfgFrmNft.apiRequestDelay.setLocalRoles);\r\n      console.log(\r\n        new Date() + \"request callCountqueryTrData=\" + callCountqueryTrData,\r\n      );\r\n      queryTrDataCount();\r\n      return;\r\n    }\r\n\r\n    // validations\r\n    // in case of error - message will be on transaction data\r\n    // if (data.results.length !== 5) {\r\n    //   displayErrorMessage(\"Tranzaction error set permissions\");\r\n    //   console.log(\"Tranzaction error processResultSetLocalRole:\" + data);\r\n    //   return false;\r\n    // }\r\n    // iterate results\r\n    data.results.forEach((result: any) => {\r\n      const res = processResultSetLocalRoleItem(result);\r\n      if (res) {\r\n        // return on ok result\r\n        console.log(\"processResultSetLocalRole true\");\r\n        return true; // return only from callback\r\n      }\r\n    });\r\n    console.log(\"processResultSetLocalRole false\");\r\n    // return false; // not working\r\n  }\r\n\r\n  //\r\n  const processResultSetLocalRoleItem = (result: any): boolean => {\r\n    //\r\n    // const respStr = \"c2V0TG9jYWxSb2xlc0AwMDAwMDAwMDAw\";\r\n    // const pp = TransactionPayload.fromEncoded(result.data);\r\n    // const enc = pp.getEncodedArguments();\r\n    // console.log(enc);\r\n    // console.log(enc.slice(1));\r\n    // const raw = enc.slice(1).map((argument) => Buffer.from(argument, \"hex\"));\r\n    // console.log(raw);\r\n\r\n    // tr\r\n    const payload = TransactionPayload.fromEncoded(result.data);\r\n    const ecodedArgs = payload.getEncodedArguments();\r\n    // const rawArgs = payload.getRawArguments();\r\n    const rawArgs = converters.getRawArgumentsSlice(ecodedArgs);\r\n    const method = ecodedArgs[0];\r\n    console.log(\"processResultSetLocalRoleItem\");\r\n    console.log(result.data);\r\n    console.log(ecodedArgs);\r\n    console.log(rawArgs.toString());\r\n\r\n    // error message should stop\r\n    if (result.returnMessage !== undefined && result.returnMessage !== null) {\r\n      // Tranzaction ERROR!\r\n      displayErrorMessage(\r\n        \"Tranzaction error set permissions: \" + result.returnMessage,\r\n      );\r\n      console.log(\"Tranzaction error message: \" + result.returnMessage);\r\n      return false;\r\n    }\r\n\r\n    // SC Tranzaction responce - result OK\r\n    // const resultCode = ecodedArgs[1];\r\n    if (result.callType === \"2\") {\r\n      const resultCode = rawArgs[1];\r\n      if (\r\n        resultCode !== undefined &&\r\n        resultCode !== null &&\r\n        resultCode.toString() !== \"00\"\r\n      ) {\r\n        // Tranzaction ERROR!\r\n        displayInfoMessage(\r\n          \"Tranzaction error set permissions: \" + result.returnMessage,\r\n        );\r\n        console.log(\"Tranzaction error message: \" + result.returnMessage);\r\n        return false;\r\n      }\r\n\r\n      // Transaction success\r\n      displayInfoMessage(\r\n        \"Permission set succesfully for collection\" + collIdentifier,\r\n      );\r\n\r\n      // hide step1 and show step2\r\n      setIsStepSetRole(false);\r\n      setIsStepCreateNft(true);\r\n      return true;\r\n    }\r\n\r\n    // set coll id\r\n    if (method === \"ESDTSetRole\") {\r\n      const collId = rawArgs[0].toString();\r\n      if (collId !== undefined && collId !== null) {\r\n        setCollIdentifier(collId);\r\n      }\r\n    }\r\n\r\n    console.log(\"collId:\" + collIdentifier);\r\n    return false;\r\n  };\r\n\r\n  /********************************************************************\r\n   *\r\n   * @param data\r\n   * @param success\r\n   * @returns\r\n   */\r\n  async function processResultCreateNft(data: any, success: boolean) {\r\n    // retry\r\n    console.log(\r\n      \"make another regquest callCountqueryTrData=\" + callCountqueryTrData,\r\n      \" results.length=\" + data.results.length,\r\n    );\r\n    if (\r\n      data.results.length < 1 &&\r\n      callCountqueryTrData < cfgFrmNft.queryApiCounter\r\n    ) {\r\n      callCountqueryTrData++;\r\n      displayInfoMessage(\"Waiting for tranzaction create nft status.\");\r\n      await delay(cfgFrmNft.apiRequestDelay.createNft);\r\n      console.log(\r\n        new Date() + \"request callCountqueryTrData=\" + callCountqueryTrData,\r\n      );\r\n      queryTrDataCount();\r\n      return;\r\n    }\r\n\r\n    // iterate results\r\n    data.results.forEach((result: any) => {\r\n      const res = processResultCreateNftItem(result);\r\n      if (res) {\r\n        // return on ok result\r\n        console.log(\"processResultCreateNft true\");\r\n        return true; // return only from callback\r\n      }\r\n    });\r\n\r\n    // if (\r\n    //   data.operations !== undefined &&\r\n    //   data.operations !== null &&\r\n    //   data.operations.length > 0\r\n    // ) {\r\n    //   // Tranzaction SUCCESS!\r\n    //   const nftNonce = data.operations[0].value;\r\n    //   setCollectionItemNonce(nftNonce);\r\n    //   setIsStepTransferNft(true);\r\n    //   displayInfoMessage(\"NFT created successfully: \" + nftNonce);\r\n    //   console.log(\"NFT created successfully: \" + nftNonce);\r\n    //   return true;\r\n    // }\r\n\r\n    // console.log(\"processResultCreateNft false\");\r\n    // return false; // not working\r\n  }\r\n\r\n  //\r\n  const processResultCreateNftItem = (result: any): boolean => {\r\n    // tr\r\n    const payload = TransactionPayload.fromEncoded(result.data);\r\n    const ecodedArgs = payload.getEncodedArguments();\r\n    // const rawArgs = payload.getRawArguments();\r\n    const rawArgs = converters.getRawArgumentsSlice(ecodedArgs);\r\n    // const method = ecodedArgs[0];\r\n    console.log(\"processResultCreateNftItem\");\r\n    console.log(result.data);\r\n    console.log(ecodedArgs);\r\n    console.log(rawArgs.toString());\r\n\r\n    // error message should stop\r\n    if (result.returnMessage !== undefined && result.returnMessage !== null) {\r\n      // Tranzaction ERROR!\r\n      displayErrorMessage(\r\n        \"Tranzaction error create nft: \" + result.returnMessage,\r\n      );\r\n      console.log(\"Tranzaction error message: \" + result.returnMessage);\r\n      return false;\r\n    }\r\n\r\n    // SC Tranzaction responce - result OK\r\n    // const resultCode = ecodedArgs[1];\r\n    if (result.callType === \"0\") {\r\n      const resultCode = rawArgs[0]; // ok\r\n      const nftNonce = ecodedArgs[2]; // 1\r\n      if (\r\n        resultCode !== undefined &&\r\n        resultCode !== null &&\r\n        nftNonce !== undefined &&\r\n        nftNonce !== null &&\r\n        resultCode.toString() === \"ok\"\r\n      ) {\r\n        // Tranzaction SUCCESS!\r\n        setCollectionItemNonce(nftNonce.toString());\r\n        setIsStepTransferNft(true);\r\n        displayInfoMessage(\"NFT created successfully: \" + nftNonce);\r\n        console.log(\"NFT created successfully: \" + nftNonce);\r\n        return true;\r\n      } else {\r\n        // Tranzaction ERROR!\r\n        displayErrorMessage(\r\n          \"Tranzaction error create nft: \" + result.returnMessage,\r\n        );\r\n        console.log(\"Tranzaction error message: \" + result.returnMessage);\r\n        return false;\r\n      }\r\n    }\r\n    // console.log(\"nft id:\" + collIdentifier);\r\n    return false;\r\n  };\r\n\r\n  /********************************************************************\r\n   *\r\n   * @param data\r\n   * @param success\r\n   * @returns\r\n   */\r\n  async function processResultTransferNft(data: any, success: boolean) {\r\n    // retry\r\n    console.log(\r\n      \"make another regquest callCountqueryTrData=\" + callCountqueryTrData,\r\n      \" results.length=\" + data.results.length,\r\n    );\r\n    if (\r\n      data.results.length < 1 &&\r\n      callCountqueryTrData < cfgFrmNft.queryApiCounter\r\n    ) {\r\n      callCountqueryTrData++;\r\n      displayInfoMessage(\"Waiting for tranzaction create nft status.\");\r\n      await delay(cfgFrmNft.apiRequestDelay.transferNft);\r\n      console.log(\r\n        new Date() + \"request callCountqueryTrData=\" + callCountqueryTrData,\r\n      );\r\n      queryTrDataCount();\r\n      return;\r\n    }\r\n\r\n    // transfer error\r\n    // if (data.results.length === 1) {\r\n    //   displayErrorMessage(\"Tranzaction error transfer nft\");\r\n    //   console.log(\"Tranzaction error message: \");\r\n    //   return false;\r\n    // }\r\n\r\n    // iterate results\r\n    data.results.forEach((result: any) => {\r\n      const res = processResultTransferNftItem(result);\r\n      if (res) {\r\n        // return on ok result\r\n        console.log(\"processResultCreateNft true\");\r\n        return true; // return only from callback\r\n      }\r\n    });\r\n\r\n    // console.log(\"processResultCreateNft false\");\r\n    // return false; // not working\r\n  }\r\n\r\n  //\r\n  const processResultTransferNftItem = (result: any): boolean => {\r\n    // tr\r\n    const payload = TransactionPayload.fromEncoded(result.data);\r\n    const ecodedArgs = payload.getEncodedArguments();\r\n    // const rawArgs = payload.getRawArguments();\r\n    const rawArgs = converters.getRawArgumentsSlice(ecodedArgs);\r\n    const method = ecodedArgs[0];\r\n    console.log(\"processResultTransferNftItem\");\r\n    console.log(result.data);\r\n    console.log(ecodedArgs);\r\n    console.log(rawArgs.toString());\r\n\r\n    // error message should stop\r\n    if (result.returnMessage !== undefined && result.returnMessage !== null) {\r\n      // Tranzaction ERROR!\r\n      displayErrorMessage(\r\n        \"Tranzaction error tranfer nft: \" + result.returnMessage,\r\n      );\r\n      console.log(\"Tranzaction error message: \" + result.returnMessage);\r\n      return false;\r\n    }\r\n\r\n    // SC Tranzaction responce - result OK\r\n    if (result.callType === \"1\" && method === \"ESDTNFTTransfer\") {\r\n      const collId = rawArgs[0]; // ok\r\n      const nftNonce = ecodedArgs[2]; // 1\r\n      if (\r\n        collId !== undefined &&\r\n        collId !== null &&\r\n        nftNonce !== undefined &&\r\n        nftNonce !== null\r\n      ) {\r\n        // Tranzaction SUCCESS!\r\n        setCollectionItemNonce(nftNonce.toString());\r\n        setIsStepTransferNft(true);\r\n        displayInfoMessage(\r\n          \"NFT tranfered successfully: \" + collId + \"-\" + nftNonce,\r\n        );\r\n        console.log(\"NFT created successfully: \" + collId + \"-\" + nftNonce);\r\n        return true;\r\n      } else {\r\n        // Tranzaction ERROR!\r\n        displayErrorMessage(\r\n          \"Tranzaction error transfer nft: \" + result.returnMessage,\r\n        );\r\n        console.log(\r\n          \"Tranzaction error transfer nft message: \" + result.returnMessage,\r\n        );\r\n        return false;\r\n      }\r\n    }\r\n    // console.log(\"nft id:\" + collIdentifier);\r\n    return false;\r\n  };\r\n\r\n  ////////////////////////////////////\r\n  // get tranzaction status\r\n  //https://devnet-api.elrond.com/collections?creator=erd1qqqqqqqqqqqqqpgqhltedl3t7scst2wh6vjcesr0vqnvhcc7xrjsex2pse\r\n  const queryNFTCollections = () => {\r\n    getCollections({\r\n      apiAddress,\r\n      address,\r\n      timeout: 3000,\r\n      contractAddress,\r\n      creator: contractAddress,\r\n    }).then(({ data, success }) => {\r\n      // dispatch({\r\n      //   type: \"setTransactions\",\r\n      //   transactions: data,\r\n      //   transactionsFetched: success,\r\n      // });\r\n      return populateCollectionsSelectItems(data, success);\r\n    });\r\n    // return addCollectionsSelectItem([], \"New\", \"Create New...\");\r\n  };\r\n\r\n  React.useEffect(queryNFTCollections, []);\r\n\r\n  /**\r\n   * Call Api to retieve all available collections\r\n   */\r\n  const populateCollectionsSelectItems = (data: any, success: boolean) => {\r\n    // const props = [\"abcd\", \"def\", \"ghi\"];\r\n    if (!success) {\r\n      // TODO display validation error\r\n    } else if (data === undefined || data === null) {\r\n      // TODO display validation error\r\n    }\r\n\r\n    let dbg = \"\\ncollections:\\n\";\r\n    const items: any = [];\r\n    items.push({ label: \"Create Collection...\", value: \"New\" });\r\n    for (let i = 0; i < data.length; i++) {\r\n      const value = data[i].collection;\r\n      const label = data[i].name;\r\n      dbg += \"value=\" + value + \" label=\" + label + \"\\n\";\r\n      // addCollectionsSelectItem(items, key, value);\r\n      items.push({ label: label, value: value });\r\n    }\r\n    setCollectionOptions(items);\r\n    console.log(\"=== after send populateCollectionsSelectItems\");\r\n    console.log(data);\r\n    setDbgMsg(dbg);\r\n    return items;\r\n  };\r\n\r\n  /**\r\n   * Call Api to retieve all available collections\r\n   */\r\n  // return component options\r\n  const getCollectionOptions = () => {\r\n    return collectionOptions.map((item) => (\r\n      <option key={item.value} value={item.value}>\r\n        {item.label} - {item.value}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  function onSelection(selection: any) {\r\n    if (selection === undefined || selection === null) {\r\n      // TODO display validation error\r\n    } else if (selection.value === undefined || selection.value === null) {\r\n      // TODO display validation error\r\n    } else if (selection.value === \"New\") {\r\n      setCollIdentifier(\"\");\r\n      setIsStepCreateColl(true);\r\n      setIsStepSetRole(true);\r\n      setIsStepCreateNft(true);\r\n    } else {\r\n      setCollIdentifier(selection.value);\r\n      setIsStepCreateColl(true);\r\n      setIsStepSetRole(true);\r\n      setIsStepCreateNft(true);\r\n    }\r\n    console.log(selection.value);\r\n    setDbgMsg(\"selected:\" + selection.value + \"\\n\");\r\n  }\r\n\r\n  /**\r\n   * upload file to IPFS\r\n   * @param e event\r\n   */\r\n  async function fileUploadHandler(e: any) {\r\n    const file = e.target.files[0];\r\n    try {\r\n      const added = await ipfsClient.add(file, {\r\n        progress: (prog) => console.log(`received: ${prog}`),\r\n      });\r\n      // const url = `https://ipfs.infura.io/ipfs/${added.path}`;\r\n      const url = `https://ipfs.io/ipfs/${added.path}`;\r\n      setCollectionItemImgUrl(url);\r\n    } catch (error) {\r\n      console.log(\"Error uploading file: \", error);\r\n    }\r\n  }\r\n\r\n  // const fileUploadHandler = (event) => {\r\n  //   const data = new FormData()\r\n  //   console.log(this.state.selectedFile);\r\n  //   data.append('file', this.state.selectedFile)\r\n  //   console.log(data);\r\n  //   axios.post(\"http://localhost:8010/api/v1/upload\", data)\r\n  //     .then(res => { // then print response status\r\n  //       toast.success('upload success')\r\n  //     })\r\n  //     .catch(err => { // then print response status\r\n  //       toast.error('upload fail')\r\n  //     })\r\n  // };\r\n\r\n  ////////////////////////////////////\r\n  // get tranzaction status\r\n  //https://devnet-api.elrond.com/collections?creator=erd1qqqqqqqqqqqqqpgqhltedl3t7scst2wh6vjcesr0vqnvhcc7xrjsex2pse\r\n  const queryNFTItems = () => {\r\n    getNftItems({\r\n      apiAddress,\r\n      address,\r\n      timeout: 3000,\r\n      contractAddress: address,\r\n    }).then(({ data, success }) => {\r\n      // dispatch({\r\n      //   type: \"setTransactions\",\r\n      //   transactions: data,\r\n      //   transactionsFetched: success,\r\n      // });\r\n      return populateNftItems(data, success);\r\n    });\r\n    // return addCollectionsSelectItem([], \"New\", \"Create New...\");\r\n  };\r\n\r\n  React.useEffect(queryNFTItems, []);\r\n\r\n  /**\r\n   * Call Api to retieve all available nfts\r\n   */\r\n  const populateNftItems = (data: any, success: boolean) => {\r\n    // const props = [\"abcd\", \"def\", \"ghi\"];\r\n    if (!success) {\r\n      // TODO display validation error\r\n      return;\r\n    } else if (data === undefined || data === null || data.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let dbg = \"\\nnftItems:\\n\";\r\n    const items: any = [];\r\n    // items.push({ label: \"Create Collection...\", value: \"New\" });\r\n    for (let i = 0; i < data.length; i++) {\r\n      const value = data[i].collection;\r\n      const label = data[i].name;\r\n      const url = data[i].url;\r\n      const identifier = data[i].identifier;\r\n      dbg += \"value=\" + value + \" label=\" + label;\r\n      dbg += \" identifier=\" + identifier + \" url=\" + url + \"\\n\";\r\n      // addCollectionsSelectItem(items, key, value);\r\n      // items.push({ label: label, value: value });\r\n      items.push(data[i]);\r\n    }\r\n    setNftItemData(items);\r\n    console.log(\"=== after send populateNftItems\");\r\n    console.log(data);\r\n    setDbgMsg(dbg);\r\n    return items;\r\n  };\r\n\r\n  /**\r\n   * Call Api to retieve all available collections\r\n   * return component options\r\n   * \r\n   * cardImage: {\r\nobjectFit: 'cover',\r\nborderRadius: 55,\r\nwidth: '50vw',\r\nheight: '30vh'\r\n}\r\n   */\r\n  const getNftCards = () => {\r\n    return nftItemData.map((item, key) => (\r\n      <Card key={key}>\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={item.url}\r\n          style={styles.cardImage as React.CSSProperties}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>{item.name}</Card.Title>\r\n          <Card.Text>{item.identifier}</Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n        </Card.Footer>\r\n      </Card>\r\n    ));\r\n  };\r\n\r\n  // const validateSize = (event) => {\r\n  //   let file = event.target.files[0];\r\n  //   let size = 30000;\r\n  //   let err = '';\r\n  //   console.log(file.size);\r\n  //   if (file.size > size) {\r\n  //     err = file.type + 'is too large, please pick a smaller file\\n';\r\n  //     toast.error(err);\r\n  //   }\r\n  //   return true\r\n  // };\r\n\r\n  ///////////\r\n  // nft transfer\r\n  // const func = new ContractFunction(\"ESDTNFTTransfer\");\r\n  //   const payload = TransactionPayload.contractCall()\r\n  //     .setFunction(func)\r\n  //     .setArgs([\r\n  //       BytesValue.fromUTF8(TOKEN_ID),\r\n  //       new U64Value(new BigNumber(nonce)),\r\n  //       new BigUIntValue(new BigNumber(1)),\r\n  //       new AddressValue(this.contract.getAddress()),\r\n  //       BytesValue.fromUTF8(\"lock_token\"), // function called\r\n  //       new U64Value(new BigNumber(period)) // arg 1\r\n  //     .addArg(erdjs.BytesValue.fromUTF8('ESDTRoleNFTCreate'))\r\n  //     .addArg(erdjs.BytesValue.fromUTF8('ESDTRoleNFTBurn')\r\n  //     ])\r\n  //     .build();\r\n\r\n  //   const networkConfig = NetworkConfig.getDefault();\r\n\r\n  //   const transaction = new Transaction({\r\n  //     receiver: account.address,\r\n  //     value: Balance.Zero(),\r\n  //     gasLimit: new GasLimit(30000000),\r\n  //     data: payload,\r\n  //     nonce: account.nonce,\r\n  //     chainID: networkConfig.ChainID,\r\n  //   });\r\n  //\r\n  // const printValues = e => {\r\n  //   e.preventDefault();\r\n  //   console.log(form.username, form.password);\r\n  // };\r\n  // export default function useNewTransaction() {\r\n  //   const { chainId } = Dapp.useContext();\r\n\r\n  //   return (rawTransaction: RawTransactionType) => {\r\n  //     const gasLimit = rawTransaction.gasLimit\r\n  //       ? new GasLimit(rawTransaction.gasLimit)\r\n  //       : Dapp.calculateGasLimit({\r\n  //           data: rawTransaction.data || \"\",\r\n  //           gasLimit: configGasLimit,\r\n  //           gasPerDataByte,\r\n  //         });\r\n  //     return new Transaction({\r\n  //       value: Balance.egld(rawTransaction.value),\r\n  //       data: new TransactionPayload(rawTransaction.data),\r\n  //       receiver: new Address(rawTransaction.receiver),\r\n  //       gasLimit,\r\n  //       gasPrice: new GasPrice(gasPrice),\r\n  //       chainID: new ChainID(chainId.valueOf()),\r\n  //       version: new TransactionVersion(version),\r\n  //     });\r\n  //   };\r\n  // }\r\n\r\n  // const pongTransaction: RawTransactionType = {\r\n  //   receiver: contractAddress,\r\n  //   data: \"pong\",\r\n  //   value: \"0\",\r\n  //   gasLimit: 10000000,\r\n  // };\r\n\r\n  // const pingTransaction: RawTransactionType = {\r\n  //   receiver: contractAddress,\r\n  //   data: \"ping\",\r\n  //   value: \"1\",\r\n  //   gasLimit: 10000000,\r\n  // };\r\n\r\n  // const pongAllowed = secondsLeft === 0;\r\n  // const notAllowedClass = pongAllowed ? \"\" : \"not-allowed disabled\";\r\n\r\n  // const timeRemaining = moment()\r\n  //   .startOf(\"day\")\r\n  //   .seconds(secondsLeft || 0)\r\n  //   .format(\"mm:ss\");\r\n\r\n  //////////////\r\n  // NFT section\r\n  // const nft: Partial<NFTToken> = {\r\n  //   name: \"issueNonFungible\",\r\n  //   canMint: true,\r\n  // };\r\n\r\n  // const frmNft = new NFTToken({\r\n  //   token: \"\",\r\n  //   name: \"issueNonFungible\",\r\n  // });\r\n\r\n  const isNft = (type: TokenType) => {\r\n    switch (type) {\r\n      case TokenType.Fungible:\r\n        return false;\r\n      case TokenType.Semifungible:\r\n      case TokenType.Nonfungible:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  //const send = (transaction: RawTransactionType) => (e: React.MouseEvent) => {\r\n  // const updateField = (e: React.MouseEvent) => {\r\n  //   setNftTocken({\r\n  //     ...nftTocken,\r\n  //     [e.target.name]: e.target.value,\r\n  //   });\r\n  // };\r\n\r\n  const str2bool = (value: any) => {\r\n    if (value && typeof value === \"string\") {\r\n      if (value.toLowerCase() === \"true\") return true;\r\n      if (value.toLowerCase() === \"false\") return false;\r\n    }\r\n    return value;\r\n  };\r\n\r\n  //\r\n  const tstFunc = () => {\r\n    let dbg = \"::contractAddress:\\n\";\r\n    dbg += contractAddress;\r\n    dbg += \"\\n::base64ToBech32:\\n\";\r\n    const contractBech32 = converters.base64ToBech32(contractAddress);\r\n    dbg += contractBech32;\r\n    const addressValue = new AddressValue(new Address(contractAddress));\r\n    dbg += \"\\n::addressValue:\\n\";\r\n    dbg += addressValue;\r\n    const addr = new Address(contractAddress);\r\n    dbg += \"\\n::addr:\\n\";\r\n    dbg += addr;\r\n    dbg += \"\\n::addr.bech32:\\n\";\r\n    dbg += addr.bech32();\r\n    dbg += \"\\n::addr.hex:\\n\";\r\n    dbg += addr.hex();\r\n    // dbg += \"::4) \";\r\n    // const payload = TransactionPayload.fromEncoded(data.results[0].data);\r\n    // const payload = new TransactionPayload(data.results[0].data);\r\n    // const tr2_1 = payload.getEncodedArguments();\r\n    // const tr2_1 = payload.getRawArguments();\r\n    // dbg += tr2_1;\r\n    console.log(\"=== TST func\");\r\n    setDbgMsg(dbg);\r\n  };\r\n\r\n  // create collection validation schema\r\n  const schemaCreateColl = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .required()\r\n      .min(3)\r\n      .max(20)\r\n      .matches(/^[A-Za-z0-9]+$/),\r\n    collectionName: yup\r\n      .string()\r\n      .required()\r\n      .min(3)\r\n      .max(10)\r\n      .matches(/^[A-Z0-9]+$/),\r\n    // terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\r\n  });\r\n\r\n  const URL_REGEX =\r\n    /^((https?):\\/\\/)?(www.)?[a-z0-9-]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#-]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/i;\r\n\r\n  // create collection validation schema\r\n  const schemaCreateNft = yup.object().shape({\r\n    collectionItemName: yup\r\n      .string()\r\n      .required()\r\n      .min(3)\r\n      .max(20)\r\n      .matches(/^[A-Za-z0-9]+$/),\r\n    collectionItemRoyalties: yup.number().required().min(0).max(100),\r\n    collectionItemImgUrl: yup\r\n      .string()\r\n      .required()\r\n      .min(10)\r\n      .max(200)\r\n      .matches(URL_REGEX, \"Enter a valid url\"),\r\n    // terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\r\n  });\r\n\r\n  // create collection validation schema\r\n  const schemaTransferNft = yup.object().shape({\r\n    transferToAddress: yup\r\n      .string()\r\n      .required()\r\n      .min(62)\r\n      .max(62)\r\n      .matches(/^[A-Za-z0-9]+$/),\r\n    collectionItemNonce: yup.number().required().min(1).max(9999999999),\r\n    collectionItemTrsfData: yup\r\n      .string()\r\n      .min(0)\r\n      .max(200)\r\n      .matches(/^[A-Za-z0-9]+$/),\r\n    // terms: yup.bool().required().oneOf([true], 'Terms must be accepted'),\r\n  });\r\n\r\n  // create validation schema for project funding\r\n  const schemaFund = yup.object().shape({\r\n    fundAmount: yup.number().required().min(1).max(100000000),\r\n  });\r\n\r\n  ///////////////////////////////////////////\r\n  return (\r\n    <div className=\"d-flex mt-4 justify-content-center\">\r\n      {/* <Form noValidate validated={validated} onSubmit={handleSubmit}> */}\r\n      <Form.Group controlId=\"formStepsGroup\">\r\n        <Form.Group controlId=\"formGenericError\">\r\n          {isError && (\r\n            <>\r\n              <Alert variant=\"danger\" dismissible>\r\n                <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n                <p>{message}</p>\r\n              </Alert>\r\n            </>\r\n          )}\r\n          {isWarning && (\r\n            <>\r\n              <Alert variant=\"warning\">\r\n                <Alert.Heading>Warning!</Alert.Heading>\r\n                <p>{message}</p>\r\n              </Alert>\r\n            </>\r\n          )}\r\n          {isInfo && (\r\n            <>\r\n              <Alert variant=\"info\">\r\n                <Alert.Heading>Info:</Alert.Heading>\r\n                <p>{message}</p>\r\n              </Alert>\r\n            </>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formCollection\">\r\n          <Form.Label>My Collections:</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            value={collIdentifier}\r\n            className=\"mr-sm-2\"\r\n            custom\r\n            disabled={false}\r\n            onChange={(e) => {\r\n              onSelection(e.target);\r\n            }}\r\n          >\r\n            {getCollectionOptions()}\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        {isStepCreateColl && (\r\n          <>\r\n            <Formik\r\n              validationSchema={schemaCreateColl}\r\n              onSubmit={console.log}\r\n              initialValues={{\r\n                name: \"\",\r\n                collectionName: \"\",\r\n                // terms: false,\r\n              }}\r\n            >\r\n              {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                touched,\r\n                isValid,\r\n                isSubmitting,\r\n                errors,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"formStepNewColl\">\r\n                    <Form.Label>\r\n                      <b>STEP 1/4 Create New Collection</b>\r\n                    </Form.Label>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter name\"\r\n                      name=\"name\"\r\n                      onChange={(e) => {\r\n                        setName(e.target.value);\r\n                        handleChange(e);\r\n                      }}\r\n                      isValid={touched.name && !errors.name}\r\n                      isInvalid={!!errors.name}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      min 3, max 20, alphanumeric characters\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formCollection\">\r\n                    <Form.Label>Collection</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter collection name\"\r\n                      name=\"collectionName\"\r\n                      onChange={(e) => {\r\n                        setCollectionName(e.target.value);\r\n                        handleChange(e);\r\n                      }}\r\n                      isValid={touched.collectionName && !errors.collectionName}\r\n                      isInvalid={!!errors.collectionName}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      min 3, max 10, alphanumeric UPPERCASE characters\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicRadio\">\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          label=\"NFT\"\r\n                          checked={nftType}\r\n                          onChange={(e) => {\r\n                            console.log(e.target.value);\r\n                            // alert(e.target.value);\r\n                            // setNftType(str2bool(e.target.value));\r\n                            setNftType(true);\r\n                            setEsdType(false);\r\n                            setMesdtType(false);\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          label=\"SFT\"\r\n                          checked={esdType}\r\n                          disabled\r\n                          onChange={(e) => {\r\n                            // console.log(e.target.value);\r\n                            // alert(e.target.value);\r\n                            setNftType(false);\r\n                            setEsdType(true);\r\n                            setMesdtType(false);\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Check\r\n                          type=\"radio\"\r\n                          label=\"SFTM\"\r\n                          checked={mesdtType === true}\r\n                          disabled\r\n                          onChange={(e) => {\r\n                            // setMesdtType(str2bool(e.target.value));\r\n                            setNftType(false);\r\n                            setEsdType(false);\r\n                            setMesdtType(true);\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formSwitchCheckbox\">\r\n                    <Form.Check\r\n                      type=\"switch\"\r\n                      label=\"Freezeable\"\r\n                      id=\"Freezeable\"\r\n                      checked={canFreeze}\r\n                      onChange={(e) => {\r\n                        setCanFreeze(e.target.checked);\r\n                        setDbgMsg(\r\n                          e.target.checked + \" \" + str2bool(e.target.value),\r\n                        );\r\n                      }}\r\n                    />\r\n                    <Form.Check\r\n                      type=\"switch\"\r\n                      label=\"Wipeable\"\r\n                      id=\"Wipeable\"\r\n                      checked={canWipe}\r\n                      onChange={(e) => {\r\n                        setCanWipe(str2bool(e.target.value));\r\n                      }}\r\n                    />\r\n                    <Form.Check\r\n                      type=\"switch\"\r\n                      label=\"Pauseable\"\r\n                      id=\"Pauseable\"\r\n                      checked={canPause}\r\n                      onChange={(e) => {\r\n                        setCanPause(str2bool(e.target.value));\r\n                      }}\r\n                    />\r\n                    <Form.Check\r\n                      type=\"switch\"\r\n                      label=\"Transferable\"\r\n                      id=\"Transferable\"\r\n                      checked={canTransfer}\r\n                      onChange={(e) => {\r\n                        setCanTransfer(str2bool(e.target.value));\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  {/* <Form.Group controlId=\"formFechColl\" vi>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"button\"\r\n                      onClick={(e) => {\r\n                        queryNFTCollections();\r\n                      }}\r\n                    >\r\n                      Fech collection\r\n                    </Button>\r\n                  </Form.Group> */}\r\n\r\n                  <Form.Group controlId=\"formDebugMsg\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"submit\"\r\n                      disabled={!isValid || isSubmitting}\r\n                      onClick={(e) => {\r\n                        callIssueNonFungible(e);\r\n                      }}\r\n                    >\r\n                      Create collection\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </>\r\n        )}\r\n        {/*\r\n         ******** set collection Role nft ************************\r\n         */}\r\n        {isStepSetRole && (\r\n          <>\r\n            <Form.Group controlId=\"formName\">\r\n              <Form.Label>\r\n                <b>STEP 2/4 Set Collection Permissions</b>\r\n              </Form.Label>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formSwitchCheckbox\">\r\n              <Form.Control type=\"text\" placeholder={collIdentifier} disabled />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formSwitchCheckbox\">\r\n              <Form.Check\r\n                type=\"switch\"\r\n                label=\"CanCreateNFT\"\r\n                id=\"CanCreateNFT\"\r\n                checked={canESDTRoleNFTCreate}\r\n                onChange={(e) => {\r\n                  setCanESDTRoleNFTCreate(e.target.checked);\r\n                  setDbgMsg(e.target.checked + \" \" + str2bool(e.target.value));\r\n                }}\r\n              />\r\n              <Form.Check\r\n                type=\"switch\"\r\n                label=\"CanBurnNFT\"\r\n                id=\"CanBurnNFT\"\r\n                checked={canESDTRoleNFTBurn}\r\n                onChange={(e) => {\r\n                  setCanESDTRoleNFTBurn(e.target.checked);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formDebugMsg\">\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"link\"\r\n                href=\"#\"\r\n                onClick={(e) => {\r\n                  // buildIssueNonFungibleArgs();\r\n                  queryTrData();\r\n                }}\r\n              >\r\n                Get Coll ID\r\n              </Button>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formDebugMsg\">\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"link\"\r\n                href=\"#\"\r\n                onClick={(e) => {\r\n                  callSetRole(e);\r\n                }}\r\n              >\r\n                Set Permissions\r\n              </Button>\r\n            </Form.Group>\r\n          </>\r\n        )}\r\n        {/*\r\n         ******** create nft ************************\r\n         */}\r\n        {isStepCreateNft && (\r\n          <>\r\n            <Formik\r\n              validationSchema={schemaCreateNft}\r\n              onSubmit={console.log}\r\n              initialValues={{\r\n                collectionItemName: \"\",\r\n                collectionItemRoyalties: 10,\r\n                collectionItemImgUrl: \"\",\r\n                // terms: false,\r\n              }}\r\n            >\r\n              {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                touched,\r\n                isValid,\r\n                isSubmitting,\r\n                errors,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"formName\">\r\n                    <Form.Label>\r\n                      <b>STEP 3/4 Create PRJ</b>\r\n                    </Form.Label>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formImgUrl\">\r\n                    <Form.Label>PRJ name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"PRJ name\"\r\n                      name=\"collectionItemName\"\r\n                      onChange={(e) => {\r\n                        setCollectionItemName(e.target.value);\r\n                        handleChange(e);\r\n                      }}\r\n                      isValid={\r\n                        touched.collectionItemName && !errors.collectionItemName\r\n                      }\r\n                      isInvalid={!!errors.collectionItemName}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      min 3, max 20, alphanumeric characters\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  {/* <Form.Group controlId=\"formImgUrl\">\r\n              <Form.Label>Quantity</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"1\"\r\n                value={collectionItemQta}\r\n                onChange={(e) => {\r\n                  setCollectionItemQta(Number(e.target.value));\r\n                }}\r\n              />\r\n            </Form.Group> */}\r\n\r\n                  <Form.Group controlId=\"formImgUrl\">\r\n                    <Form.Label>Royalties</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"10\"\r\n                      name=\"collectionItemRoyalties\"\r\n                      value={collectionItemRoyalties}\r\n                      onChange={(e) => {\r\n                        setCollectionItemRoyalties(Number(e.target.value));\r\n                        handleChange(e);\r\n                      }}\r\n                      isValid={\r\n                        touched.collectionItemRoyalties &&\r\n                        !errors.collectionItemRoyalties\r\n                      }\r\n                      isInvalid={!!errors.collectionItemRoyalties}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      number from 0 to 100\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formImgUrl\">\r\n                    <Form.Label>Tags</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"tag\"\r\n                      onChange={(e) => {\r\n                        setCollectionItemTagName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                    <Form.Label>Image</Form.Label>\r\n                    <Form.Control\r\n                      type=\"file\"\r\n                      placeholder=\"File Name\"\r\n                      onChange={(e) => {\r\n                        fileUploadHandler(e);\r\n                        // console.log(e);\r\n                        // setFileName(e.target.files[0].name);\r\n                      }}\r\n                    />\r\n                    {collectionItemImgUrl && (\r\n                      <img src={collectionItemImgUrl} width=\"300px\" />\r\n                    )}\r\n                    {/* <Button\r\n                      variant=\"primary\"\r\n                      type=\"link\"\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        fileUploadHandler(e);\r\n                      }}\r\n                    >\r\n                      Upload\r\n                    </Button> */}\r\n                  </Form.Group>\r\n\r\n                  {/* <Form.Group>\r\n                    <Form.Label>Img file:</Form.Label>\r\n                    <Form.File\r\n                      type=\"file\"\r\n                      className=\"custom-file-label\"\r\n                      id=\"inputGroupFile01\"\r\n                      label={fileName}\r\n                      onChange={(e: any) => setFileName(e.target.files[0].name)}\r\n                      custom\r\n                    />\r\n                  </Form.Group> */}\r\n\r\n                  <Form.Group controlId=\"formImgUrl\">\r\n                    <Form.Label>Image url</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"www.ipfs.com\"\r\n                      name=\"collectionItemImgUrl\"\r\n                      value={collectionItemImgUrl}\r\n                      onChange={(e) => {\r\n                        setCollectionItemImgUrl(e.target.value);\r\n                        handleChange(e);\r\n                      }}\r\n                      isValid={\r\n                        touched.collectionItemImgUrl &&\r\n                        !errors.collectionItemImgUrl\r\n                      }\r\n                      isInvalid={!!errors.collectionItemImgUrl}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      image url required\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formDebugMsg\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"link\"\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        callCreateNFT(e);\r\n                      }}\r\n                    >\r\n                      Create PRJ\r\n                    </Button>\r\n                  </Form.Group>\r\n                  {/* \r\n                  <Form.Group controlId=\"formDebugMsg\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"link\"\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        callMintNFT(e);\r\n                      }}\r\n                    >\r\n                      Mint NFTs\r\n                    </Button>\r\n                  </Form.Group> \r\n                  */}\r\n\r\n                  <Form.Group controlId=\"formImgUrl\">\r\n                    <Form.Label>Withdraw Amount</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"2\"\r\n                      name=\"withdrawAmount\"\r\n                      value={withdrawAmount}\r\n                      onChange={(e) => {\r\n                        setWithdrawAmount(Number(e.target.value));\r\n                        handleChange(e);\r\n                      }}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Withdraw amount invalid\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formDebugMsg\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"link\"\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        callReleaseNFT(e);\r\n                      }}\r\n                    >\r\n                      Release Artifact\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </>\r\n        )}\r\n        {/*\r\n         ******** transfer nft ************************\r\n         */}\r\n        {isStepTransferNft && (\r\n          <>\r\n            <Formik\r\n              validationSchema={schemaTransferNft}\r\n              onSubmit={console.log}\r\n              initialValues={{\r\n                transferToAddress: \"\",\r\n                collectionItemNonce: 10,\r\n                collectionItemTrsfData: \"\",\r\n                // terms: false,\r\n              }}\r\n            >\r\n              {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                touched,\r\n                isValid,\r\n                isSubmitting,\r\n                errors,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"formName\">\r\n                    <Form.Label>\r\n                      <b>STEP 4/4 Transfer PRJ</b>\r\n                    </Form.Label>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formImgUrl\">\r\n                    <Form.Label>Transfer to Wallet address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Wallet address\"\r\n                      name=\"transferToAddress\"\r\n                      value={transferToAddress}\r\n                      onChange={(e) => {\r\n                        setTransferToAddress(e.target.value);\r\n                        handleChange(e);\r\n                      }}\r\n                      isValid={\r\n                        touched.transferToAddress && !errors.transferToAddress\r\n                      }\r\n                      isInvalid={!!errors.transferToAddress}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Destination wallet address is required\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formImgUrl\">\r\n                    <Form.Label>PRJ nonce</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>{collIdentifier}-</InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl\r\n                        placeholder=\"nonce\"\r\n                        aria-label=\"nonce\"\r\n                        name=\"collectionItemNonce\"\r\n                        value={collectionItemNonce}\r\n                        onChange={(e) => {\r\n                          setCollectionItemNonce(e.target.value);\r\n                          handleChange(e);\r\n                        }}\r\n                        isValid={\r\n                          touched.collectionItemNonce &&\r\n                          !errors.collectionItemNonce\r\n                        }\r\n                        isInvalid={!!errors.collectionItemNonce}\r\n                      />\r\n                    </InputGroup>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      PRJ nonce is required\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formImgUrl\">\r\n                    <Form.Label>Data</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Data\"\r\n                      name=\"collectionItemTrsfData\"\r\n                      onChange={(e) => {\r\n                        setCollectionItemTrsfData(e.target.value);\r\n                        handleChange(e);\r\n                      }}\r\n                      isValid={\r\n                        touched.collectionItemTrsfData &&\r\n                        !errors.collectionItemTrsfData\r\n                      }\r\n                      isInvalid={!!errors.collectionItemTrsfData}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      PRJ transfer data\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formDebugMsg\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"link\"\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        callTransferNFT(e);\r\n                      }}\r\n                    >\r\n                      Transfer PRJ\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </>\r\n        )}\r\n\r\n        {/*\r\n         ******** Fund project nft ************************\r\n         */}\r\n        {isStepTransferNft && (\r\n          <>\r\n            <Formik\r\n              validationSchema={schemaFund}\r\n              onSubmit={console.log}\r\n              initialValues={{\r\n                fundAmount: 0,\r\n                // terms: false,\r\n              }}\r\n            >\r\n              {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                touched,\r\n                isValid,\r\n                isSubmitting,\r\n                errors,\r\n              }) => (\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"formName\">\r\n                    <Form.Label>\r\n                      <b>STEP 5/6 Fund Project</b>\r\n                    </Form.Label>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formImgUrl\">\r\n                    <Form.Label>Project</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>{collIdentifier}</InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      PRJ is required\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formImgUrl\">\r\n                    <Form.Label>Amount</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"2\"\r\n                      name=\"fundAmount\"\r\n                      value={fundAmount}\r\n                      onChange={(e) => {\r\n                        setFundAmount(Number(e.target.value));\r\n                        handleChange(e);\r\n                      }}\r\n                      isValid={touched.fundAmount && !errors.fundAmount}\r\n                      isInvalid={!!errors.fundAmount}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Fund amount invalid\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formDebugMsg\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"link\"\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        callFundPrj(e);\r\n                      }}\r\n                    >\r\n                      Fund Project\r\n                    </Button>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formDebugMsg\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"link\"\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        queryNFTItems();\r\n                      }}\r\n                    >\r\n                      LOAD PRJs\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </>\r\n        )}\r\n\r\n        {/*\r\n         ******** NFTs cards ************************\r\n         */}\r\n        {isStepTransferNft && (\r\n          <>\r\n            <div>{getNftCards()}</div>\r\n            {/*\r\n            <CardDeck>{getNftCards()}</CardDeck>\r\n            <Form.Group controlId=\"formStepsGroup\">{getNftCards()}</Form.Group>\r\n             <Card>\r\n              <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n              <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                  This is a wider card with supporting text below as a natural\r\n                  lead-in to additional content. This content is a little bit\r\n                  longer.\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n              </Card.Footer>\r\n            </Card> */}\r\n          </>\r\n        )}\r\n\r\n        {/*\r\n         **********TODO remove DEBUG MSG BOX **********************\r\n         */}\r\n\r\n        {/* <Form.Group controlId=\"formDebugMsg\">\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"link\"\r\n            href=\"#\"\r\n            onClick={(e) => {\r\n              tstFunc();\r\n            }}\r\n          >\r\n            TEST\r\n          </Button>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formDebugMsg\">\r\n          <Form.Label>DEBUG:</Form.Label>\r\n          <Form.Text className=\"text-muted\">\r\n            name={name} coll={colectionName}\r\n          </Form.Text>\r\n          <Form.Control as=\"textarea\" rows={5} value={dbgMsg} />\r\n        </Form.Group> */}\r\n      </Form.Group>\r\n      {/* </Form> */}\r\n\r\n      {/* <Form.Group controlId=\"formDebugTr\">\r\n        <>\r\n          <p>\r\n            <a\r\n              href={`${explorerAddress}transactions/${txHash}`}\r\n              {...{\r\n                target: \"_blank\",\r\n              }}\r\n              className=\"tx-link\"\r\n              title=\"View in Explorer\"\r\n            >\r\n              {txHash}\r\n            </a>\r\n          </p>\r\n          <Link to={routeNames.dashboard} className=\"btn btn-primary mt-3\">\r\n            Back to dashboard\r\n          </Link>\r\n        </>\r\n      </Form.Group> */}\r\n    </div>\r\n  );\r\n};\r\n\r\n// import { ESDTToken } from \"./esdtToken\";\r\n// async getESDTToken(tokenIdentifier: string): Promise<ESDTToken> {\r\n//   return this.doGetGeneric(`tokens/${tokenIdentifier}`, (response) => ESDTToken.fromHttpResponse(response));\r\n// }\r\n\r\nexport default CreateCrud;\r\n\r\n/**\r\n * Generate a relay transaction to pay the gas for our users.\r\n *\r\n * @param {Transaction} innerTransaction The transaction to relay\r\n * @returns {Transaction} Transaction containing the relayed transaction\r\n * @memberof ElrondService\r\n */\r\n//  public buildRelayedTransaction(innerTransaction: Transaction): Transaction {\r\n//   const serializedTransaction = {\r\n//       nonce: innerTransaction.getNonce().valueOf(),\r\n//       value: parseInt(innerTransaction.getValue().toString()),\r\n//       receiver: hexToBase64(innerTransaction.getReceiver().hex()),\r\n//       sender: hexToBase64(innerTransaction.getSender().hex()),\r\n//       gasPrice: innerTransaction.getGasPrice().valueOf(),\r\n//       gasLimit: innerTransaction.getGasLimit().valueOf(),\r\n//       data: innerTransaction.getData().encoded(),\r\n//       chainID: utf8ToBase64(innerTransaction.getChainID().valueOf()),\r\n//       version: innerTransaction.getVersion().valueOf(),\r\n//       signature: hexToBase64(innerTransaction.getSignature().hex()),\r\n//   };\r\n\r\n//   const payload = TransactionPayload.contractCall()\r\n//       .setFunction(new ContractFunction(\"relayedTx\"))\r\n//       .addArg(BytesValue.fromUTF8(JSON.stringify(serializedTransaction)))\r\n//       .build();\r\n\r\n//   const transaction = new Transaction({\r\n//       receiver: innerTransaction.getSender(),\r\n//       value: Balance.Zero(),\r\n//       gasLimit: new GasLimit(\r\n//           NetworkConfig.getDefault().MinGasLimit.valueOf() +\r\n//               innerTransaction.getGasLimit().valueOf() +\r\n//               payload.length() * NetworkConfig.getDefault().GasPerDataByte\r\n//       ),\r\n//       data: payload,\r\n//   });\r\n\r\n//   return transaction;\r\n// }\r\n","import * as Dapp from \"@elrondnetwork/dapp\";\r\nimport {\r\n  TypedValue,\r\n  Address,\r\n  AddressValue,\r\n  BytesValue,\r\n  BigUIntValue,\r\n  TokenIdentifierValue,\r\n  ContractFunction,\r\n  GasLimit,\r\n  NetworkConfig,\r\n  Query,\r\n} from \"@elrondnetwork/erdjs\";\r\nimport { TokenType, TransactionPayload } from \"@elrondnetwork/erdjs/out\";\r\nimport { BigNumber } from \"bignumber.js\";\r\nimport { contractAddress, cfgFrmNft, cfgCollection } from \"config\";\r\nimport { RawTransactionType } from \"helpers/types\";\r\nimport crypto from \"crypto\";\r\nimport { routeNames } from \"routes\";\r\nimport { config } from \"process\";\r\nimport { calculateGasLimit } from \"./UtilsTransaction\";\r\nimport {\r\n  CollectionType,\r\n  CollectionAttributeType,\r\n} from \"pages/Basic/Model/CollectionsType\";\r\n\r\n/////////////////////////////\r\nexport interface NftApiType {\r\n  identifier?: string;\r\n  collection?: string;\r\n  attributes?: string;\r\n  nonce?: 19;\r\n  type?: string;\r\n  name?: string;\r\n  creator?: string;\r\n  royalties?: number;\r\n  url?: string;\r\n  media?: string;\r\n  ticker?: string;\r\n}\r\n\r\n// build IPFS url\r\nconst buildIPFSUrl = (collItem: CollectionType): string => {\r\n  let res = `${cfgCollection.apiPath}/${cfgCollection.collCID}`;\r\n  res += collItem.image.replace(\"undefined\", \"\"); //\"image\": \"undefined/1.png\",\r\n  return res;\r\n};\r\n\r\n/**\r\n * Transform Json to NFT tags format\r\n  {\r\n    \"trait_type\": \"Background\",\r\n    \"value\": \"bluegreen1\"\r\n  }\r\n  =>\r\n  attr1:tr1;attr2:tr2\r\n */\r\nconst buildNFTTags = (collItem: CollectionType): string => {\r\n  let res = \"\";\r\n  for (const attr of collItem.attributes) {\r\n    res += attr.trait_type + \":\" + attr.value + \";\";\r\n  }\r\n  return res;\r\n};\r\n\r\n// 1 EGLD decimals\r\nconst EGLD_DECI = new BigNumber(1000000000000000000);\r\n\r\n//////////////////////////////////////\r\n// Create NFT - ERD call\r\n/**\r\n    # token_identifier: TokenIdentifier,\r\n    # amount: BigUint,\r\n    # name: ManagedBuffer,\r\n    # royalties: BigUint,\r\n    # hash: ManagedBuffer,\r\n    # attributes: ManagedBuffer,\r\n    # uri1: ManagedBuffer,\r\n    # uri2: ManagedBuffer,\r\n    # uri3: ManagedBuffer,\r\n    # sell_price: BigUint,\r\n */\r\nconst buildBMSNftArgs = (collItem: CollectionType): TransactionPayload => {\r\n  console.log(\"buildBMSNftArgs\");\r\n\r\n  // if (contractAddress === undefined || contractAddress === null) {\r\n  //     // TODO display validation error\r\n  // } else if (collIdentifier === undefined || collIdentifier === null) {\r\n  //     // TODO display validation error\r\n  // }\r\n\r\n  // const collId: string = collIdentifier!;\r\n  // // CDDD-29f066          :[434444442d323966303636]\r\n  const tokenIdentifier: string = cfgCollection.tokenIdentifier!; // TODO take value from select list\r\n  const colItemName: string = collItem.name!;\r\n  const colItemRoyalties: number = cfgCollection.royalties!; //collectionItemRoyalties! * 100; // 100 = 1%\r\n  const colItemTags: string = buildNFTTags(collItem);\r\n  // const colItemQta: number = collectionItemQta! * 100;\r\n  const colItemUrl: string = buildIPFSUrl(collItem);\r\n\r\n  const hash = crypto.createHash(\"sha256\");\r\n  hash.update(colItemName);\r\n  const colItemHash = hash.digest(\"hex\");\r\n\r\n  const args = [\r\n    new TokenIdentifierValue(Buffer.from(tokenIdentifier, \"utf8\")), // colId\r\n    new BigUIntValue(new BigNumber(1)), //amount\r\n    BytesValue.fromUTF8(colItemName), //name\r\n    new BigUIntValue(new BigNumber(cfgCollection.royalties)), //royalties\r\n    BytesValue.fromUTF8(colItemHash), //hash\r\n    BytesValue.fromUTF8(colItemTags), //attr\r\n    BytesValue.fromUTF8(colItemUrl), //uri (www.nfts.com)\r\n    BytesValue.fromUTF8(\"\"), //uri (www.nfts.com)\r\n    BytesValue.fromUTF8(\"\"), //uri (www.nfts.com)\r\n    new BigUIntValue(new BigNumber(3).multipliedBy(EGLD_DECI)), // withdraw_amount:\r\n\r\n    // TEST data\r\n    // new TokenIdentifierValue(Buffer.from(\"QH7-764c51\", \"utf8\")), // colId\r\n    // new BigUIntValue(new BigNumber(1)), //amount\r\n    // BytesValue.fromUTF8(\"QH7ITEM1\"), //name\r\n    // new BigUIntValue(new BigNumber(1000)), //royalties\r\n    // BytesValue.fromUTF8(\"9223372036854775807\"), //hash\r\n    // new BigUIntValue(new BigNumber(66051)), // code\r\n    // BytesValue.fromUTF8(\"attr1:tr1;attr2:tr2\"), //attr\r\n    // BytesValue.fromUTF8(\"www.nfts.com\"), //uri (www.nfts.com)\r\n    // BytesValue.fromUTF8(\"www.nfts.com\"), //uri (www.nfts.com)\r\n    // BytesValue.fromUTF8(\"www.nfts.com\"), //uri (www.nfts.com)\r\n  ];\r\n  // const payload = new TransactionPayload(\"ping pong\");\r\n  const payload = TransactionPayload.contractCall()\r\n    .setFunction(new ContractFunction(\"BMSNft\"))\r\n    .setArgs(args)\r\n    .build();\r\n  //\r\n  // setDbgMsg(payload.toString());\r\n  //\r\n  return payload;\r\n};\r\n\r\n// transaction\r\n// const buildBMSNftTransaction = (): RawTransactionType => {\r\nexport default function buildBMSNftTransaction(collItem: CollectionType) {\r\n  const dataPayload = buildBMSNftArgs(collItem);\r\n  const gasLimit = calculateGasLimit(\r\n    cfgFrmNft.minGasLimit.createNft,\r\n    dataPayload,\r\n  );\r\n  const pongTr: RawTransactionType = {\r\n    receiver: contractAddress,\r\n    data: dataPayload.toString(),\r\n    value: cfgCollection.nftPrice,\r\n    gasLimit: gasLimit,\r\n  };\r\n  return pongTr;\r\n}\r\n","import * as Dapp from \"@elrondnetwork/dapp\";\r\nimport {\r\n  TypedValue,\r\n  Address,\r\n  AddressValue,\r\n  BytesValue,\r\n  BigUIntValue,\r\n  TokenIdentifierValue,\r\n  ContractFunction,\r\n  GasLimit,\r\n  NetworkConfig,\r\n  Query,\r\n} from \"@elrondnetwork/erdjs\";\r\nimport { TransactionPayload } from \"@elrondnetwork/erdjs/out\";\r\nimport { BigNumber } from \"bignumber.js\";\r\nimport { contractAddress, cfgFrmNft, cfgESTDtoken } from \"config\";\r\nimport { RawTransactionType } from \"helpers/types\";\r\nimport { calculateGasLimit } from \"./UtilsTransaction\";\r\nimport * as Constants from \"pages/Basic/ConstantsTransaction\";\r\n\r\n//////////////////////////////////////\r\n// Buy transfer ESTD token\r\n// # Arguments: token identifier, amount (0), campaign (1, 2, 3)\r\n// #\r\n// # token_identifier: TokenIdentifier,\r\n// # amount: BigUint,\r\n// # campaign: u16,\r\nconst buildBMSNftArgs = (campaingId: number): TransactionPayload => {\r\n  console.log(\"buildBMSNftArgs\");\r\n\r\n  // if (contractAddress === undefined || contractAddress === null) {\r\n  //     // TODO display validation error\r\n  // } else if (collIdentifier === undefined || collIdentifier === null) {\r\n  //     // TODO display validation error\r\n  // }\r\n\r\n  const args = [\r\n    new TokenIdentifierValue(Buffer.from(cfgESTDtoken.tokenIdentifier, \"utf8\")), // colId\r\n    new BigUIntValue(new BigNumber(0)), //amount\r\n    new BigUIntValue(new BigNumber(campaingId)), //campaingId\r\n  ];\r\n  const payload = TransactionPayload.contractCall()\r\n    .setFunction(new ContractFunction(\"BTEstd\"))\r\n    .setArgs(args)\r\n    .build();\r\n  return payload;\r\n};\r\n\r\n//\r\nfunction getPrice4Campaing(campaingId: number): string {\r\n  let campPrice = 0;\r\n  if (campaingId === cfgESTDtoken.campaign_1.id) {\r\n    campPrice = cfgESTDtoken.campaign_1.price;\r\n  } else if (campaingId === cfgESTDtoken.campaign_2.id) {\r\n    campPrice = cfgESTDtoken.campaign_2.price;\r\n  } else if (campaingId === cfgESTDtoken.campaign_3.id) {\r\n    campPrice = cfgESTDtoken.campaign_3.price;\r\n  }\r\n  // return new BigNumber(campPrice).multipliedBy(Constants.EGLD_DECI).toString();\r\n  return campPrice.toString();\r\n}\r\n\r\n// transaction\r\nexport default function buildBTESTDTransaction(campaingId: number) {\r\n  const dataPayload = buildBMSNftArgs(campaingId);\r\n  const price = getPrice4Campaing(campaingId);\r\n  const gasLimit = calculateGasLimit(\r\n    cfgFrmNft.minGasLimit.createNft,\r\n    dataPayload,\r\n  );\r\n\r\n  const pongTr: RawTransactionType = {\r\n    receiver: contractAddress,\r\n    data: dataPayload.toString(),\r\n    value: price,\r\n    gasLimit: gasLimit,\r\n  };\r\n  return pongTr;\r\n}\r\n","var map = {\n\t\"./bls.js\": 393,\n\t\"./bls_c.js\": 425\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 734;","import * as Dapp from \"@elrondnetwork/dapp\";\r\n\r\nexport const dAppName = \"Dapp\";\r\n//NFCCollections\r\nexport const decimals = 2;\r\nexport const denomination = 18;\r\nexport const gasPrice = 1000000000;\r\nexport const version = 1;\r\nexport const gasLimit = 50000000;\r\nexport const gasPerDataByte = 1500;\r\n\r\nexport const walletConnectBridge = \"https://bridge.walletconnect.org\";\r\nexport const walletConnectDeepLink =\r\n  \"https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet.dev&link=https://maiar.com/\";\r\n\r\nexport const contractAddressPong =\r\n  \"erd1qqqqqqqqqqqqqpgqhj87nru7xmdjrfkdatna5e5u7vkrervvxrjs6jdx6y\";\r\n\r\nexport const contractAddressDevNetNft =\r\n  \"erd1qqqqqqqqqqqqqpgqhltedl3t7scst2wh6vjcesr0vqnvhcc7xrjsex2pse\";\r\n\r\nexport const contractAddressMainNetNFT =\r\n  \"erd1qqqqqqqqqqqqqpgqlwcsyca74tfwttysrvklfa9cnfdcgfg9xrjscsfc99\";\r\n\r\nexport const contractAddressCrossMeme =\r\n  \"erd1qqqqqqqqqqqqqpgqhltedl3t7scst2wh6vjcesr0vqnvhcc7xrjsex2pse\";\r\n\r\nexport const contractAddressEndaPOC =\r\n  \"erd1qqqqqqqqqqqqqpgqarzdlps6n6vhh3yw569cd40r4tttl3cvxrjswlcqh7\";\r\n\r\nexport const contractAddressBMS =\r\n  \"erd1qqqqqqqqqqqqqpgqd0mt3xu5myegcqdhly7s6x6690nenmyaxrjs5zaz75\";\r\n\r\nexport const contractAddress =\r\n  \"erd1qqqqqqqqqqqqqpgqd0mt3xu5myegcqdhly7s6x6690nenmyaxrjs5zaz75\";\r\n\r\n// export const network: Dapp.NetworkType = {\r\n//   id: \"Mainnet\",\r\n//   name: \"Mainnet\",\r\n//   egldLabel: \"EGLD\",\r\n//   // walletAddress: \"https://wallet.elrond.com/dapp/init\",\r\n//   walletAddress: \"https://wallet.elrond.com\",\r\n//   apiAddress: \"https://api.elrond.com\",\r\n//   gatewayAddress: \"https://gateway.elrond.com\",\r\n//   explorerAddress: \"http://explorer.elrond.com/\",\r\n// };\r\n\r\nexport const network: Dapp.NetworkType = {\r\n  id: \"devnet\",\r\n  name: \"Devnet\",\r\n  egldLabel: \"xEGLD\",\r\n  walletAddress: \"https://devnet-wallet.elrond.com\",\r\n  apiAddress: \"https://devnet-api.elrond.com\",\r\n  gatewayAddress: \"https://devnet-gateway.elrond.com\",\r\n  explorerAddress: \"http://devnet-explorer.elrond.com/\",\r\n};\r\n\r\nexport const cfgFrmNft = {\r\n  minGasLimit: {\r\n    issueNonFungible: 90000000,\r\n    setRole: 80000000,\r\n    createNft: 20000000,\r\n    transferNft: 10000000,\r\n  },\r\n  // wait before sending first request\r\n  queryApiDelay: 2000,\r\n  // max nr of repetitive requests, untill succesfull responce\r\n  queryApiCounter: 10,\r\n  // delays between repetitive queryes\r\n  apiRequestDelay: {\r\n    issueNonFungible: 3000,\r\n    setLocalRoles: 3000,\r\n    createNft: 2000,\r\n    transferNft: 2000,\r\n  },\r\n};\r\n\r\nexport const cfgApiInfura = {\r\n  protocol: \"https\",\r\n  host: \"ipfs.infura.io\",\r\n  port: 5001,\r\n  apiPath: \"/api/v0\",\r\n  // url: \"https://ipfs.infura.io:5001/api/v0\"\r\n  // headers: {\r\n  //   authorization: 'Bearer ' + TOKEN\r\n  // }\r\n};\r\n\r\nexport const cfgApiIPFS = {\r\n  protocol: \"https\",\r\n  host: \"gateway.ipfs.io\",\r\n  port: 443,\r\n  apiPath: \"/api/v0\",\r\n};\r\n\r\n//\r\nexport const cfgApiPinata = {\r\n  protocol: \"https\",\r\n  host: \"gateway.pinata.cloud\",\r\n  port: 443,\r\n  apiPath: \"/api/v0\",\r\n};\r\n\r\n//https://ipfs.io/ipfs/QmXatUvUaQzDmHAogwkizcTCt8jPCWAVta1TfpX2Fo4khE/_metadata.json\r\nexport const cfgCollection = {\r\n  apiPath: \"https://ipfs.io/ipfs\",\r\n  collCID: \"QmXatUvUaQzDmHAogwkizcTCt8jPCWAVta1TfpX2Fo4khE\",\r\n  collName: \"_metadata.json\",\r\n  tokenIdentifier: \"ZAZCOLL-5ebe23\", //\"QH7-764c51\",\r\n  royalties: 1000,\r\n  nftPrice: \"2.0\",\r\n};\r\n\r\nexport const cfgESTDtoken = {\r\n  tokenIdentifier: \"DRU3-822b0f\",\r\n  campaign_1: {\r\n    id: 1,\r\n    price: 1,\r\n  },\r\n  campaign_2: {\r\n    id: 2,\r\n    price: 2,\r\n  },\r\n  campaign_3: {\r\n    id: 3,\r\n    price: 3,\r\n  },\r\n};\r\n","import { StateType, TransactionType } from \"./state\";\r\n\r\nexport type ActionType = {\r\n  type: \"setTransactions\";\r\n  transactions: TransactionType[];\r\n  transactionsFetched: StateType[\"transactionsFetched\"];\r\n};\r\n\r\nexport function reducer(state: StateType, action: ActionType): StateType {\r\n  switch (action.type) {\r\n    case \"setTransactions\": {\r\n      const newState: StateType = {\r\n        ...state,\r\n        transactions: action.transactions,\r\n        transactionsFetched: action.transactionsFetched,\r\n      };\r\n      return newState;\r\n    }\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action?.type}`);\r\n    }\r\n  }\r\n}\r\n","interface ScResultType {\r\n  callType: string;\r\n  gasLimit: number;\r\n  gasPrice: number;\r\n  nonce: number;\r\n  prevTxHash: string;\r\n  receiver?: string;\r\n  sender: string;\r\n  value: string;\r\n  data?: string;\r\n  returnMessage?: string;\r\n}\r\n\r\ntype TxStatusType = \"pending\" | \"notExecuted\" | \"success\" | \"fail\";\r\n\r\nexport interface TransactionType {\r\n  fee?: string;\r\n  blockHash: string;\r\n  data: string;\r\n  gasLimit: number;\r\n  gasPrice: number;\r\n  gasUsed: string;\r\n  txHash: string;\r\n  miniBlockHash: string;\r\n  nonce: number;\r\n  receiver: string;\r\n  receiverShard: number;\r\n  round: number;\r\n  sender: string;\r\n  senderShard: number;\r\n  signature: string;\r\n  status: TxStatusType;\r\n  timestamp: number;\r\n  value: string;\r\n  scResults?: ScResultType[];\r\n}\r\n\r\nexport interface StateType {\r\n  transactions: TransactionType[];\r\n  transactionsFetched: boolean | undefined;\r\n}\r\n\r\nconst initialState = (): StateType => {\r\n  return {\r\n    transactions: [],\r\n    transactionsFetched: undefined,\r\n  };\r\n};\r\n\r\nexport default initialState;\r\n","import * as React from \"react\";\r\nimport { ActionType, reducer } from \"./reducer\";\r\nimport initialState, { StateType } from \"./state\";\r\n\r\ntype DispatchType = (action: ActionType) => void;\r\nexport interface ContextType {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Context = React.createContext<StateType | undefined>(undefined);\r\nconst Dispatch = React.createContext<DispatchType | undefined>(undefined);\r\n\r\nfunction ContextProvider({ children }: ContextType) {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState());\r\n  return (\r\n    <Context.Provider value={state}>\r\n      <Dispatch.Provider value={dispatch}>{children}</Dispatch.Provider>\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nfunction useContext() {\r\n  const context = React.useContext(Context);\r\n  if (context === undefined) {\r\n    throw new Error(\"useState must be used within a Context.Provider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useDispatch() {\r\n  const context = React.useContext(Dispatch);\r\n  if (context === undefined) {\r\n    throw new Error(\"useDispatch must be used within a Dispatch.Provider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { ContextProvider, useContext, useDispatch };\r\n"],"sourceRoot":""}